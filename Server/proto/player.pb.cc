// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: player.proto

#include "player.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_player_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_player_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ItemConfig;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_player_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ItemInfo;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_player_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MonsterAttributeMsg;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_player_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PlayerSyncData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_player_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RankListMsg;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_player_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RoomInfoMsg;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_player_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SceneBriefMsg;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_player_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Vec3Msg;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_player_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_BulletSynMsg;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_player_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CharacterStatueMsg;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_player_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MonsterSynMsg;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_player_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RankListRsp;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_player_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SceneObjectMsg;
}  // namespace protobuf_player_2eproto
namespace TCCamp {
class CollisionReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CollisionReq>
      _instance;
} _CollisionReq_default_instance_;
class RPCDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RPC>
      _instance;
} _RPC_default_instance_;
class PlayerLoginReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerLoginReq>
      _instance;
} _PlayerLoginReq_default_instance_;
class PlayerLoginRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerLoginRsp>
      _instance;
} _PlayerLoginRsp_default_instance_;
class PlayerSaveDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerSaveData>
      _instance;
} _PlayerSaveData_default_instance_;
class PlayerSyncDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerSyncData>
      _instance;
} _PlayerSyncData_default_instance_;
class RoomInfoMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoomInfoMsg>
      _instance;
} _RoomInfoMsg_default_instance_;
class RoomInfoReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoomInfoReq>
      _instance;
} _RoomInfoReq_default_instance_;
class RoomInfoRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoomInfoRsp>
      _instance;
} _RoomInfoRsp_default_instance_;
class RoomNumChangeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoomNumChange>
      _instance;
} _RoomNumChange_default_instance_;
class EnterRoomReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnterRoomReq>
      _instance;
} _EnterRoomReq_default_instance_;
class EnterRoomRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EnterRoomRsp>
      _instance;
} _EnterRoomRsp_default_instance_;
class CreateRoomReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateRoomReq>
      _instance;
} _CreateRoomReq_default_instance_;
class PlayerCreateReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerCreateReq>
      _instance;
} _PlayerCreateReq_default_instance_;
class PlayerCreateRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerCreateRsp>
      _instance;
} _PlayerCreateRsp_default_instance_;
class SyncAnnounceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SyncAnnounce>
      _instance;
} _SyncAnnounce_default_instance_;
class SceneBriefRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SceneBriefRsp>
      _instance;
} _SceneBriefRsp_default_instance_;
class SceneBriefMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SceneBriefMsg>
      _instance;
} _SceneBriefMsg_default_instance_;
class SceneObjectMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SceneObjectMsg>
      _instance;
} _SceneObjectMsg_default_instance_;
class SceneMonsterRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SceneMonsterRsp>
      _instance;
} _SceneMonsterRsp_default_instance_;
class SceneObjectRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SceneObjectRsp>
      _instance;
} _SceneObjectRsp_default_instance_;
class Vec3MsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vec3Msg>
      _instance;
} _Vec3Msg_default_instance_;
class MonsterAttributeMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MonsterAttributeMsg>
      _instance;
} _MonsterAttributeMsg_default_instance_;
class MonsterAttributeRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MonsterAttributeRsp>
      _instance;
} _MonsterAttributeRsp_default_instance_;
class MonsterSynMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MonsterSynMsg>
      _instance;
} _MonsterSynMsg_default_instance_;
class MonstersSynMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MonstersSynMsg>
      _instance;
} _MonstersSynMsg_default_instance_;
class BulletSynMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BulletSynMsg>
      _instance;
} _BulletSynMsg_default_instance_;
class BulletsSynMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BulletsSynMsg>
      _instance;
} _BulletsSynMsg_default_instance_;
class AttackReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AttackReq>
      _instance;
} _AttackReq_default_instance_;
class RankListMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RankListMsg>
      _instance;
} _RankListMsg_default_instance_;
class RankListReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RankListReq>
      _instance;
} _RankListReq_default_instance_;
class GameTimeRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameTimeRsp>
      _instance;
} _GameTimeRsp_default_instance_;
class RankListRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RankListRsp>
      _instance;
} _RankListRsp_default_instance_;
class RankListDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RankListData>
      _instance;
} _RankListData_default_instance_;
class CharacterStatueMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CharacterStatueMsg>
      _instance;
} _CharacterStatueMsg_default_instance_;
class CharacterStatueReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CharacterStatueReq>
      _instance;
} _CharacterStatueReq_default_instance_;
class CharacterAnimSynMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CharacterAnimSynMsg>
      _instance;
} _CharacterAnimSynMsg_default_instance_;
class NetAsyncMsgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NetAsyncMsg>
      _instance;
} _NetAsyncMsg_default_instance_;
class RemoveCharacterRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemoveCharacterRsp>
      _instance;
} _RemoveCharacterRsp_default_instance_;
class ScoreRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ScoreRsp>
      _instance;
} _ScoreRsp_default_instance_;
class GameResultRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameResultRsp>
      _instance;
} _GameResultRsp_default_instance_;
class GameContinueRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameContinueRsp>
      _instance;
} _GameContinueRsp_default_instance_;
class ItemConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ItemConfig>
      _instance;
} _ItemConfig_default_instance_;
class ItemConfigsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ItemConfigs>
      _instance;
} _ItemConfigs_default_instance_;
class ItemInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ItemInfo>
      _instance;
} _ItemInfo_default_instance_;
class ShopItemRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ShopItemRsp>
      _instance;
} _ShopItemRsp_default_instance_;
class BagItemRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BagItemRsp>
      _instance;
} _BagItemRsp_default_instance_;
class BuyReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BuyReq>
      _instance;
} _BuyReq_default_instance_;
class DeleteItemReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DeleteItemReq>
      _instance;
} _DeleteItemReq_default_instance_;
class AddMoneyReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddMoneyReq>
      _instance;
} _AddMoneyReq_default_instance_;
class MoneyRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MoneyRsp>
      _instance;
} _MoneyRsp_default_instance_;
class StatueCodeRspDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StatueCodeRsp>
      _instance;
} _StatueCodeRsp_default_instance_;
}  // namespace TCCamp
namespace protobuf_player_2eproto {
static void InitDefaultsCollisionReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_CollisionReq_default_instance_;
    new (ptr) ::TCCamp::CollisionReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::CollisionReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CollisionReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCollisionReq}, {}};

static void InitDefaultsRPC() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_RPC_default_instance_;
    new (ptr) ::TCCamp::RPC();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::RPC::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RPC =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRPC}, {}};

static void InitDefaultsPlayerLoginReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_PlayerLoginReq_default_instance_;
    new (ptr) ::TCCamp::PlayerLoginReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::PlayerLoginReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PlayerLoginReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPlayerLoginReq}, {}};

static void InitDefaultsPlayerLoginRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_PlayerLoginRsp_default_instance_;
    new (ptr) ::TCCamp::PlayerLoginRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::PlayerLoginRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PlayerLoginRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPlayerLoginRsp}, {
      &protobuf_player_2eproto::scc_info_PlayerSyncData.base,}};

static void InitDefaultsPlayerSaveData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_PlayerSaveData_default_instance_;
    new (ptr) ::TCCamp::PlayerSaveData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::PlayerSaveData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PlayerSaveData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPlayerSaveData}, {}};

static void InitDefaultsPlayerSyncData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_PlayerSyncData_default_instance_;
    new (ptr) ::TCCamp::PlayerSyncData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::PlayerSyncData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PlayerSyncData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPlayerSyncData}, {}};

static void InitDefaultsRoomInfoMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_RoomInfoMsg_default_instance_;
    new (ptr) ::TCCamp::RoomInfoMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::RoomInfoMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RoomInfoMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRoomInfoMsg}, {}};

static void InitDefaultsRoomInfoReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_RoomInfoReq_default_instance_;
    new (ptr) ::TCCamp::RoomInfoReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::RoomInfoReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RoomInfoReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRoomInfoReq}, {}};

static void InitDefaultsRoomInfoRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_RoomInfoRsp_default_instance_;
    new (ptr) ::TCCamp::RoomInfoRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::RoomInfoRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RoomInfoRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRoomInfoRsp}, {
      &protobuf_player_2eproto::scc_info_RoomInfoMsg.base,}};

static void InitDefaultsRoomNumChange() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_RoomNumChange_default_instance_;
    new (ptr) ::TCCamp::RoomNumChange();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::RoomNumChange::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RoomNumChange =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRoomNumChange}, {}};

static void InitDefaultsEnterRoomReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_EnterRoomReq_default_instance_;
    new (ptr) ::TCCamp::EnterRoomReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::EnterRoomReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EnterRoomReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEnterRoomReq}, {}};

static void InitDefaultsEnterRoomRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_EnterRoomRsp_default_instance_;
    new (ptr) ::TCCamp::EnterRoomRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::EnterRoomRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EnterRoomRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEnterRoomRsp}, {
      &protobuf_player_2eproto::scc_info_RoomInfoMsg.base,}};

static void InitDefaultsCreateRoomReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_CreateRoomReq_default_instance_;
    new (ptr) ::TCCamp::CreateRoomReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::CreateRoomReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateRoomReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateRoomReq}, {}};

static void InitDefaultsPlayerCreateReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_PlayerCreateReq_default_instance_;
    new (ptr) ::TCCamp::PlayerCreateReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::PlayerCreateReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PlayerCreateReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPlayerCreateReq}, {}};

static void InitDefaultsPlayerCreateRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_PlayerCreateRsp_default_instance_;
    new (ptr) ::TCCamp::PlayerCreateRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::PlayerCreateRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PlayerCreateRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPlayerCreateRsp}, {}};

static void InitDefaultsSyncAnnounce() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_SyncAnnounce_default_instance_;
    new (ptr) ::TCCamp::SyncAnnounce();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::SyncAnnounce::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SyncAnnounce =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSyncAnnounce}, {}};

static void InitDefaultsSceneBriefRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_SceneBriefRsp_default_instance_;
    new (ptr) ::TCCamp::SceneBriefRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::SceneBriefRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SceneBriefRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSceneBriefRsp}, {
      &protobuf_player_2eproto::scc_info_SceneBriefMsg.base,}};

static void InitDefaultsSceneBriefMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_SceneBriefMsg_default_instance_;
    new (ptr) ::TCCamp::SceneBriefMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::SceneBriefMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SceneBriefMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSceneBriefMsg}, {}};

static void InitDefaultsSceneObjectMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_SceneObjectMsg_default_instance_;
    new (ptr) ::TCCamp::SceneObjectMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::SceneObjectMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SceneObjectMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSceneObjectMsg}, {
      &protobuf_player_2eproto::scc_info_Vec3Msg.base,}};

static void InitDefaultsSceneMonsterRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_SceneMonsterRsp_default_instance_;
    new (ptr) ::TCCamp::SceneMonsterRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::SceneMonsterRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SceneMonsterRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSceneMonsterRsp}, {
      &protobuf_player_2eproto::scc_info_SceneObjectMsg.base,}};

static void InitDefaultsSceneObjectRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_SceneObjectRsp_default_instance_;
    new (ptr) ::TCCamp::SceneObjectRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::SceneObjectRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SceneObjectRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSceneObjectRsp}, {
      &protobuf_player_2eproto::scc_info_SceneObjectMsg.base,}};

static void InitDefaultsVec3Msg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_Vec3Msg_default_instance_;
    new (ptr) ::TCCamp::Vec3Msg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::Vec3Msg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Vec3Msg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVec3Msg}, {}};

static void InitDefaultsMonsterAttributeMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_MonsterAttributeMsg_default_instance_;
    new (ptr) ::TCCamp::MonsterAttributeMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::MonsterAttributeMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MonsterAttributeMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMonsterAttributeMsg}, {}};

static void InitDefaultsMonsterAttributeRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_MonsterAttributeRsp_default_instance_;
    new (ptr) ::TCCamp::MonsterAttributeRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::MonsterAttributeRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MonsterAttributeRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMonsterAttributeRsp}, {
      &protobuf_player_2eproto::scc_info_MonsterAttributeMsg.base,}};

static void InitDefaultsMonsterSynMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_MonsterSynMsg_default_instance_;
    new (ptr) ::TCCamp::MonsterSynMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::MonsterSynMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MonsterSynMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMonsterSynMsg}, {
      &protobuf_player_2eproto::scc_info_Vec3Msg.base,}};

static void InitDefaultsMonstersSynMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_MonstersSynMsg_default_instance_;
    new (ptr) ::TCCamp::MonstersSynMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::MonstersSynMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MonstersSynMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMonstersSynMsg}, {
      &protobuf_player_2eproto::scc_info_MonsterSynMsg.base,}};

static void InitDefaultsBulletSynMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_BulletSynMsg_default_instance_;
    new (ptr) ::TCCamp::BulletSynMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::BulletSynMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BulletSynMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBulletSynMsg}, {
      &protobuf_player_2eproto::scc_info_Vec3Msg.base,}};

static void InitDefaultsBulletsSynMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_BulletsSynMsg_default_instance_;
    new (ptr) ::TCCamp::BulletsSynMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::BulletsSynMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BulletsSynMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBulletsSynMsg}, {
      &protobuf_player_2eproto::scc_info_BulletSynMsg.base,}};

static void InitDefaultsAttackReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_AttackReq_default_instance_;
    new (ptr) ::TCCamp::AttackReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::AttackReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AttackReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAttackReq}, {
      &protobuf_player_2eproto::scc_info_Vec3Msg.base,}};

static void InitDefaultsRankListMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_RankListMsg_default_instance_;
    new (ptr) ::TCCamp::RankListMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::RankListMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RankListMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRankListMsg}, {}};

static void InitDefaultsRankListReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_RankListReq_default_instance_;
    new (ptr) ::TCCamp::RankListReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::RankListReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RankListReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRankListReq}, {}};

static void InitDefaultsGameTimeRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_GameTimeRsp_default_instance_;
    new (ptr) ::TCCamp::GameTimeRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::GameTimeRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GameTimeRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGameTimeRsp}, {}};

static void InitDefaultsRankListRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_RankListRsp_default_instance_;
    new (ptr) ::TCCamp::RankListRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::RankListRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RankListRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRankListRsp}, {
      &protobuf_player_2eproto::scc_info_RankListMsg.base,}};

static void InitDefaultsRankListData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_RankListData_default_instance_;
    new (ptr) ::TCCamp::RankListData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::RankListData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RankListData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRankListData}, {
      &protobuf_player_2eproto::scc_info_RankListRsp.base,}};

static void InitDefaultsCharacterStatueMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_CharacterStatueMsg_default_instance_;
    new (ptr) ::TCCamp::CharacterStatueMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::CharacterStatueMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CharacterStatueMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCharacterStatueMsg}, {
      &protobuf_player_2eproto::scc_info_Vec3Msg.base,}};

static void InitDefaultsCharacterStatueReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_CharacterStatueReq_default_instance_;
    new (ptr) ::TCCamp::CharacterStatueReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::CharacterStatueReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CharacterStatueReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCharacterStatueReq}, {
      &protobuf_player_2eproto::scc_info_Vec3Msg.base,}};

static void InitDefaultsCharacterAnimSynMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_CharacterAnimSynMsg_default_instance_;
    new (ptr) ::TCCamp::CharacterAnimSynMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::CharacterAnimSynMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CharacterAnimSynMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCharacterAnimSynMsg}, {}};

static void InitDefaultsNetAsyncMsg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_NetAsyncMsg_default_instance_;
    new (ptr) ::TCCamp::NetAsyncMsg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::NetAsyncMsg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_NetAsyncMsg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNetAsyncMsg}, {
      &protobuf_player_2eproto::scc_info_CharacterStatueMsg.base,}};

static void InitDefaultsRemoveCharacterRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_RemoveCharacterRsp_default_instance_;
    new (ptr) ::TCCamp::RemoveCharacterRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::RemoveCharacterRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RemoveCharacterRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRemoveCharacterRsp}, {}};

static void InitDefaultsScoreRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_ScoreRsp_default_instance_;
    new (ptr) ::TCCamp::ScoreRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::ScoreRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ScoreRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsScoreRsp}, {}};

static void InitDefaultsGameResultRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_GameResultRsp_default_instance_;
    new (ptr) ::TCCamp::GameResultRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::GameResultRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GameResultRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGameResultRsp}, {}};

static void InitDefaultsGameContinueRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_GameContinueRsp_default_instance_;
    new (ptr) ::TCCamp::GameContinueRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::GameContinueRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GameContinueRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGameContinueRsp}, {}};

static void InitDefaultsItemConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_ItemConfig_default_instance_;
    new (ptr) ::TCCamp::ItemConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::ItemConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ItemConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsItemConfig}, {}};

static void InitDefaultsItemConfigs() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_ItemConfigs_default_instance_;
    new (ptr) ::TCCamp::ItemConfigs();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::ItemConfigs::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ItemConfigs =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsItemConfigs}, {
      &protobuf_player_2eproto::scc_info_ItemConfig.base,}};

static void InitDefaultsItemInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_ItemInfo_default_instance_;
    new (ptr) ::TCCamp::ItemInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::ItemInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ItemInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsItemInfo}, {}};

static void InitDefaultsShopItemRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_ShopItemRsp_default_instance_;
    new (ptr) ::TCCamp::ShopItemRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::ShopItemRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ShopItemRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsShopItemRsp}, {
      &protobuf_player_2eproto::scc_info_ItemInfo.base,}};

static void InitDefaultsBagItemRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_BagItemRsp_default_instance_;
    new (ptr) ::TCCamp::BagItemRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::BagItemRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BagItemRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBagItemRsp}, {
      &protobuf_player_2eproto::scc_info_ItemInfo.base,}};

static void InitDefaultsBuyReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_BuyReq_default_instance_;
    new (ptr) ::TCCamp::BuyReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::BuyReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BuyReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBuyReq}, {}};

static void InitDefaultsDeleteItemReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_DeleteItemReq_default_instance_;
    new (ptr) ::TCCamp::DeleteItemReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::DeleteItemReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DeleteItemReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDeleteItemReq}, {}};

static void InitDefaultsAddMoneyReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_AddMoneyReq_default_instance_;
    new (ptr) ::TCCamp::AddMoneyReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::AddMoneyReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AddMoneyReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAddMoneyReq}, {}};

static void InitDefaultsMoneyRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_MoneyRsp_default_instance_;
    new (ptr) ::TCCamp::MoneyRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::MoneyRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MoneyRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMoneyRsp}, {}};

static void InitDefaultsStatueCodeRsp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::TCCamp::_StatueCodeRsp_default_instance_;
    new (ptr) ::TCCamp::StatueCodeRsp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TCCamp::StatueCodeRsp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StatueCodeRsp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStatueCodeRsp}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CollisionReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RPC.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlayerLoginReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlayerLoginRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlayerSaveData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlayerSyncData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RoomInfoMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RoomInfoReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RoomInfoRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RoomNumChange.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EnterRoomReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EnterRoomRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateRoomReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlayerCreateReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlayerCreateRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SyncAnnounce.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SceneBriefRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SceneBriefMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SceneObjectMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SceneMonsterRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SceneObjectRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Vec3Msg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MonsterAttributeMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MonsterAttributeRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MonsterSynMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MonstersSynMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BulletSynMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BulletsSynMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AttackReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RankListMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RankListReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GameTimeRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RankListRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RankListData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CharacterStatueMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CharacterStatueReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CharacterAnimSynMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NetAsyncMsg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RemoveCharacterRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ScoreRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GameResultRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GameContinueRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ItemConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ItemConfigs.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ItemInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ShopItemRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BagItemRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BuyReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DeleteItemReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddMoneyReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MoneyRsp.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StatueCodeRsp.base);
}

::google::protobuf::Metadata file_level_metadata[52];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::CollisionReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::CollisionReq, typea_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::CollisionReq, ida_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::CollisionReq, typeb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::CollisionReq, idb_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RPC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RPC, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RPC, param_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::PlayerLoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::PlayerLoginReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::PlayerLoginReq, password_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::PlayerLoginRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::PlayerLoginRsp, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::PlayerLoginRsp, reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::PlayerLoginRsp, playerdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::PlayerSaveData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::PlayerSaveData, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::PlayerSaveData, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::PlayerSaveData, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::PlayerSyncData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::PlayerSyncData, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::PlayerSyncData, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RoomInfoMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RoomInfoMsg, roomname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RoomInfoMsg, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RoomInfoMsg, maxnum_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RoomInfoReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RoomInfoReq, sceneid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RoomInfoRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RoomInfoRsp, roominfolist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RoomNumChange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RoomNumChange, currentnum_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::EnterRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::EnterRoomReq, roomid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::EnterRoomRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::EnterRoomRsp, rescode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::EnterRoomRsp, resstr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::EnterRoomRsp, roominfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::CreateRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::CreateRoomReq, roomname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::CreateRoomReq, sceneid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::CreateRoomReq, maxnum_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::PlayerCreateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::PlayerCreateReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::PlayerCreateReq, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::PlayerCreateReq, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::PlayerCreateRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::PlayerCreateRsp, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::PlayerCreateRsp, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::PlayerCreateRsp, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::PlayerCreateRsp, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::SyncAnnounce, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::SyncAnnounce, announce_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::SceneBriefRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::SceneBriefRsp, scenebrief_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::SceneBriefMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::SceneBriefMsg, scenename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::SceneBriefMsg, sceneid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::SceneBriefMsg, gargoylecount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::SceneBriefMsg, ghostcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::SceneBriefMsg, difficult_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::SceneObjectMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::SceneObjectMsg, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::SceneObjectMsg, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::SceneObjectMsg, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::SceneObjectMsg, rotation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::SceneMonsterRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::SceneMonsterRsp, monsterlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::SceneMonsterRsp, netid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::SceneObjectRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::SceneObjectRsp, objectlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::Vec3Msg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::Vec3Msg, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::Vec3Msg, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::Vec3Msg, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::MonsterAttributeMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::MonsterAttributeMsg, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::MonsterAttributeMsg, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::MonsterAttributeMsg, attack_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::MonsterAttributeMsg, hp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::MonsterAttributeMsg, speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::MonsterAttributeMsg, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::MonsterAttributeMsg, reborntime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::MonsterAttributeMsg, detectrange_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::MonsterAttributeRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::MonsterAttributeRsp, attributelist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::MonsterSynMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::MonsterSynMsg, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::MonsterSynMsg, hp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::MonsterSynMsg, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::MonsterSynMsg, rotation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::MonsterSynMsg, targetpos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::MonstersSynMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::MonstersSynMsg, monsterlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::MonstersSynMsg, netid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::BulletSynMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::BulletSynMsg, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::BulletSynMsg, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::BulletSynMsg, rotation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::BulletSynMsg, isactive_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::BulletsSynMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::BulletsSynMsg, bulletlist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::AttackReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::AttackReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::AttackReq, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::AttackReq, rotation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RankListMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RankListMsg, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RankListMsg, score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RankListMsg, time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RankListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RankListReq, sceneid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::GameTimeRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::GameTimeRsp, time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RankListRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RankListRsp, ranklist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RankListData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RankListData, rankdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::CharacterStatueMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::CharacterStatueMsg, netid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::CharacterStatueMsg, hp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::CharacterStatueMsg, speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::CharacterStatueMsg, maxspeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::CharacterStatueMsg, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::CharacterStatueMsg, rotation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::CharacterStatueMsg, isdeath_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::CharacterStatueMsg, isarmed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::CharacterStatueMsg, isimmunity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::CharacterStatueMsg, actiontype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::CharacterStatueMsg, score_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::CharacterStatueReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::CharacterStatueReq, netid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::CharacterStatueReq, speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::CharacterStatueReq, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::CharacterStatueReq, rotation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::CharacterAnimSynMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::CharacterAnimSynMsg, animttype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::CharacterAnimSynMsg, netid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::NetAsyncMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::NetAsyncMsg, characterstatuelist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RemoveCharacterRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::RemoveCharacterRsp, netid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::ScoreRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::ScoreRsp, score_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::GameResultRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::GameResultRsp, score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::GameResultRsp, roomrank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::GameResultRsp, gametime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::GameResultRsp, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::GameResultRsp, isfinished_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::GameResultRsp, beatcount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::GameContinueRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::GameContinueRsp, needcontinue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::ItemConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::ItemConfig, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::ItemConfig, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::ItemConfig, introduce_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::ItemConfig, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::ItemConfig, iconname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::ItemConfigs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::ItemConfigs, item_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::ItemInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::ItemInfo, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::ItemInfo, num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::ShopItemRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::ShopItemRsp, item_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::BagItemRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::BagItemRsp, money_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::BagItemRsp, item_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::BuyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::BuyReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::BuyReq, num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::DeleteItemReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::DeleteItemReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::DeleteItemReq, num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::AddMoneyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::AddMoneyReq, num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::MoneyRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::MoneyRsp, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::MoneyRsp, num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::StatueCodeRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::StatueCodeRsp, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TCCamp::StatueCodeRsp, reason_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::TCCamp::CollisionReq)},
  { 9, -1, sizeof(::TCCamp::RPC)},
  { 16, -1, sizeof(::TCCamp::PlayerLoginReq)},
  { 23, -1, sizeof(::TCCamp::PlayerLoginRsp)},
  { 31, -1, sizeof(::TCCamp::PlayerSaveData)},
  { 39, -1, sizeof(::TCCamp::PlayerSyncData)},
  { 46, -1, sizeof(::TCCamp::RoomInfoMsg)},
  { 54, -1, sizeof(::TCCamp::RoomInfoReq)},
  { 60, -1, sizeof(::TCCamp::RoomInfoRsp)},
  { 66, -1, sizeof(::TCCamp::RoomNumChange)},
  { 72, -1, sizeof(::TCCamp::EnterRoomReq)},
  { 78, -1, sizeof(::TCCamp::EnterRoomRsp)},
  { 86, -1, sizeof(::TCCamp::CreateRoomReq)},
  { 94, -1, sizeof(::TCCamp::PlayerCreateReq)},
  { 102, -1, sizeof(::TCCamp::PlayerCreateRsp)},
  { 111, -1, sizeof(::TCCamp::SyncAnnounce)},
  { 117, -1, sizeof(::TCCamp::SceneBriefRsp)},
  { 123, -1, sizeof(::TCCamp::SceneBriefMsg)},
  { 133, -1, sizeof(::TCCamp::SceneObjectMsg)},
  { 142, -1, sizeof(::TCCamp::SceneMonsterRsp)},
  { 149, -1, sizeof(::TCCamp::SceneObjectRsp)},
  { 155, -1, sizeof(::TCCamp::Vec3Msg)},
  { 163, -1, sizeof(::TCCamp::MonsterAttributeMsg)},
  { 176, -1, sizeof(::TCCamp::MonsterAttributeRsp)},
  { 182, -1, sizeof(::TCCamp::MonsterSynMsg)},
  { 192, -1, sizeof(::TCCamp::MonstersSynMsg)},
  { 199, -1, sizeof(::TCCamp::BulletSynMsg)},
  { 208, -1, sizeof(::TCCamp::BulletsSynMsg)},
  { 214, -1, sizeof(::TCCamp::AttackReq)},
  { 222, -1, sizeof(::TCCamp::RankListMsg)},
  { 230, -1, sizeof(::TCCamp::RankListReq)},
  { 236, -1, sizeof(::TCCamp::GameTimeRsp)},
  { 242, -1, sizeof(::TCCamp::RankListRsp)},
  { 248, -1, sizeof(::TCCamp::RankListData)},
  { 254, -1, sizeof(::TCCamp::CharacterStatueMsg)},
  { 270, -1, sizeof(::TCCamp::CharacterStatueReq)},
  { 279, -1, sizeof(::TCCamp::CharacterAnimSynMsg)},
  { 286, -1, sizeof(::TCCamp::NetAsyncMsg)},
  { 292, -1, sizeof(::TCCamp::RemoveCharacterRsp)},
  { 298, -1, sizeof(::TCCamp::ScoreRsp)},
  { 304, -1, sizeof(::TCCamp::GameResultRsp)},
  { 315, -1, sizeof(::TCCamp::GameContinueRsp)},
  { 321, -1, sizeof(::TCCamp::ItemConfig)},
  { 331, -1, sizeof(::TCCamp::ItemConfigs)},
  { 337, -1, sizeof(::TCCamp::ItemInfo)},
  { 344, -1, sizeof(::TCCamp::ShopItemRsp)},
  { 350, -1, sizeof(::TCCamp::BagItemRsp)},
  { 357, -1, sizeof(::TCCamp::BuyReq)},
  { 364, -1, sizeof(::TCCamp::DeleteItemReq)},
  { 371, -1, sizeof(::TCCamp::AddMoneyReq)},
  { 377, -1, sizeof(::TCCamp::MoneyRsp)},
  { 384, -1, sizeof(::TCCamp::StatueCodeRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_CollisionReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_RPC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_PlayerLoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_PlayerLoginRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_PlayerSaveData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_PlayerSyncData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_RoomInfoMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_RoomInfoReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_RoomInfoRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_RoomNumChange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_EnterRoomReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_EnterRoomRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_CreateRoomReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_PlayerCreateReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_PlayerCreateRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_SyncAnnounce_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_SceneBriefRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_SceneBriefMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_SceneObjectMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_SceneMonsterRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_SceneObjectRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_Vec3Msg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_MonsterAttributeMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_MonsterAttributeRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_MonsterSynMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_MonstersSynMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_BulletSynMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_BulletsSynMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_AttackReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_RankListMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_RankListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_GameTimeRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_RankListRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_RankListData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_CharacterStatueMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_CharacterStatueReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_CharacterAnimSynMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_NetAsyncMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_RemoveCharacterRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_ScoreRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_GameResultRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_GameContinueRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_ItemConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_ItemConfigs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_ItemInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_ShopItemRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_BagItemRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_BuyReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_DeleteItemReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_AddMoneyReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_MoneyRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TCCamp::_StatueCodeRsp_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "player.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 52);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014player.proto\022\006TCCamp\"x\n\014CollisionReq\022&"
      "\n\005typeA\030\001 \001(\0162\027.TCCamp.SceneObjectType\022\013"
      "\n\003idA\030\002 \001(\005\022&\n\005typeB\030\003 \001(\0162\027.TCCamp.Scen"
      "eObjectType\022\013\n\003idB\030\004 \001(\005\"2\n\003RPC\022\034\n\003cmd\030\001"
      " \001(\0162\017.TCCamp.RPC_CMD\022\r\n\005param\030\002 \003(\005\"4\n\016"
      "PlayerLoginReq\022\020\n\010PlayerID\030\001 \001(\t\022\020\n\010Pass"
      "word\030\002 \001(\t\"\\\n\016PlayerLoginRsp\022\016\n\006Result\030\001"
      " \001(\005\022\016\n\006Reason\030\002 \001(\t\022*\n\nPlayerData\030\003 \001(\013"
      "2\026.TCCamp.PlayerSyncData\"B\n\016PlayerSaveDa"
      "ta\022\020\n\010PlayerID\030\001 \001(\t\022\020\n\010Password\030\002 \001(\t\022\014"
      "\n\004Name\030\003 \001(\014\"0\n\016PlayerSyncData\022\014\n\004Name\030\001"
      " \001(\t\022\020\n\010Playerid\030\002 \001(\t\"\?\n\013RoomInfoMsg\022\020\n"
      "\010roomName\030\001 \001(\t\022\016\n\006roomId\030\002 \001(\005\022\016\n\006maxNu"
      "m\030\003 \001(\005\"\036\n\013RoomInfoReq\022\017\n\007sceneId\030\001 \001(\005\""
      "8\n\013RoomInfoRsp\022)\n\014RoomInfoList\030\001 \003(\0132\023.T"
      "CCamp.RoomInfoMsg\"#\n\rRoomNumChange\022\022\n\ncu"
      "rrentNum\030\001 \001(\005\"\036\n\014EnterRoomReq\022\016\n\006roomId"
      "\030\001 \001(\005\"V\n\014EnterRoomRsp\022\017\n\007resCode\030\001 \001(\005\022"
      "\016\n\006resStr\030\002 \001(\t\022%\n\010roomInfo\030\003 \001(\0132\023.TCCa"
      "mp.RoomInfoMsg\"B\n\rCreateRoomReq\022\020\n\010roomN"
      "ame\030\001 \001(\t\022\017\n\007sceneId\030\002 \001(\005\022\016\n\006maxNum\030\003 \001"
      "(\005\"C\n\017PlayerCreateReq\022\020\n\010PlayerID\030\001 \001(\t\022"
      "\020\n\010Password\030\002 \001(\t\022\014\n\004Name\030\003 \001(\014\"Q\n\017Playe"
      "rCreateRsp\022\016\n\006Result\030\001 \001(\005\022\020\n\010PlayerID\030\002"
      " \001(\t\022\014\n\004Name\030\003 \001(\t\022\016\n\006Reason\030\004 \001(\t\" \n\014Sy"
      "ncAnnounce\022\020\n\010Announce\030\001 \001(\014\":\n\rSceneBri"
      "efRsp\022)\n\nSceneBrief\030\001 \003(\0132\025.TCCamp.Scene"
      "BriefMsg\"q\n\rSceneBriefMsg\022\021\n\tSceneName\030\001"
      " \001(\t\022\017\n\007SceneId\030\002 \001(\005\022\025\n\rGargoyleCount\030\003"
      " \001(\005\022\022\n\nGhostCount\030\004 \001(\005\022\021\n\tDifficult\030\005 "
      "\001(\005\"\211\001\n\016SceneObjectMsg\022\n\n\002Id\030\001 \001(\005\022%\n\004Ty"
      "pe\030\002 \001(\0162\027.TCCamp.SceneObjectType\022!\n\010Pos"
      "ition\030\003 \001(\0132\017.TCCamp.Vec3Msg\022!\n\010Rotation"
      "\030\004 \001(\0132\017.TCCamp.Vec3Msg\"M\n\017SceneMonsterR"
      "sp\022+\n\013MonsterList\030\001 \003(\0132\026.TCCamp.SceneOb"
      "jectMsg\022\r\n\005NetId\030\002 \001(\005\"<\n\016SceneObjectRsp"
      "\022*\n\nObjectList\030\001 \003(\0132\026.TCCamp.SceneObjec"
      "tMsg\"*\n\007Vec3Msg\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n"
      "\001z\030\003 \001(\002\"\255\001\n\023MonsterAttributeMsg\022%\n\004Type"
      "\030\001 \001(\0162\027.TCCamp.SceneObjectType\022\014\n\004name\030"
      "\002 \001(\t\022\016\n\006Attack\030\003 \001(\005\022\n\n\002Hp\030\004 \001(\005\022\r\n\005Spe"
      "ed\030\005 \001(\002\022\r\n\005Value\030\006 \001(\005\022\022\n\nRebornTime\030\007 "
      "\001(\002\022\023\n\013DetectRange\030\010 \001(\002\"I\n\023MonsterAttri"
      "buteRsp\0222\n\rAttributeList\030\001 \003(\0132\033.TCCamp."
      "MonsterAttributeMsg\"\221\001\n\rMonsterSynMsg\022\n\n"
      "\002Id\030\001 \001(\005\022\n\n\002Hp\030\002 \001(\005\022!\n\010Position\030\003 \001(\0132"
      "\017.TCCamp.Vec3Msg\022!\n\010Rotation\030\004 \001(\0132\017.TCC"
      "amp.Vec3Msg\022\"\n\tTargetPos\030\005 \001(\0132\017.TCCamp."
      "Vec3Msg\"K\n\016MonstersSynMsg\022*\n\013MonsterList"
      "\030\001 \003(\0132\025.TCCamp.MonsterSynMsg\022\r\n\005Netid\030\002"
      " \001(\005\"r\n\014BulletSynMsg\022\n\n\002Id\030\001 \001(\005\022!\n\010Posi"
      "tion\030\002 \001(\0132\017.TCCamp.Vec3Msg\022!\n\010Rotation\030"
      "\003 \001(\0132\017.TCCamp.Vec3Msg\022\020\n\010IsActive\030\004 \001(\010"
      "\"9\n\rBulletsSynMsg\022(\n\nBulletList\030\001 \003(\0132\024."
      "TCCamp.BulletSynMsg\"]\n\tAttackReq\022\n\n\002Id\030\001"
      " \001(\005\022!\n\010Position\030\002 \001(\0132\017.TCCamp.Vec3Msg\022"
      "!\n\010Rotation\030\003 \001(\0132\017.TCCamp.Vec3Msg\"8\n\013Ra"
      "nkListMsg\022\014\n\004Name\030\001 \001(\t\022\r\n\005Score\030\002 \001(\005\022\014"
      "\n\004Time\030\003 \001(\005\"\036\n\013RankListReq\022\017\n\007sceneId\030\001"
      " \001(\005\"\033\n\013GameTimeRsp\022\014\n\004time\030\001 \001(\005\"4\n\013Ran"
      "kListRsp\022%\n\010RankList\030\001 \003(\0132\023.TCCamp.Rank"
      "ListMsg\"5\n\014RankListData\022%\n\010RankData\030\001 \003("
      "\0132\023.TCCamp.RankListRsp\"\357\001\n\022CharacterStat"
      "ueMsg\022\r\n\005NetId\030\001 \001(\005\022\n\n\002Hp\030\002 \001(\005\022\r\n\005Spee"
      "d\030\003 \001(\002\022\020\n\010MaxSpeed\030\004 \001(\002\022!\n\010Position\030\005 "
      "\001(\0132\017.TCCamp.Vec3Msg\022!\n\010Rotation\030\006 \001(\0132\017"
      ".TCCamp.Vec3Msg\022\017\n\007IsDeath\030\007 \001(\010\022\017\n\007IsAr"
      "med\030\010 \001(\010\022\022\n\nIsImmunity\030\t \001(\010\022\022\n\nactionT"
      "ype\030\n \001(\005\022\r\n\005score\030\013 \001(\005\"x\n\022CharacterSta"
      "tueReq\022\r\n\005NetId\030\001 \001(\005\022\r\n\005Speed\030\002 \001(\002\022!\n\010"
      "Position\030\003 \001(\0132\017.TCCamp.Vec3Msg\022!\n\010Rotat"
      "ion\030\004 \001(\0132\017.TCCamp.Vec3Msg\"R\n\023CharacterA"
      "nimSynMsg\022,\n\tAnimtType\030\001 \001(\0162\031.TCCamp.Ch"
      "aracterAnimType\022\r\n\005NetId\030\002 \001(\005\"F\n\013NetAsy"
      "ncMsg\0227\n\023CharacterStatueList\030\001 \003(\0132\032.TCC"
      "amp.CharacterStatueMsg\"#\n\022RemoveCharacte"
      "rRsp\022\r\n\005NetId\030\001 \001(\005\"\031\n\010ScoreRsp\022\r\n\005Score"
      "\030\001 \001(\005\"z\n\rGameResultRsp\022\r\n\005Score\030\001 \001(\005\022\020"
      "\n\010RoomRank\030\002 \001(\005\022\020\n\010GameTime\030\003 \001(\005\022\017\n\007Su"
      "ccess\030\004 \001(\010\022\022\n\nIsFinished\030\005 \001(\010\022\021\n\tBeatC"
      "ount\030\006 \001(\005\"\'\n\017GameContinueRsp\022\024\n\014needCon"
      "tinue\030\001 \001(\010\"Z\n\nItemConfig\022\n\n\002Id\030\001 \001(\005\022\014\n"
      "\004Name\030\002 \001(\t\022\021\n\tIntroduce\030\003 \001(\t\022\r\n\005Price\030"
      "\004 \001(\005\022\020\n\010IconName\030\005 \001(\t\"/\n\013ItemConfigs\022 "
      "\n\004Item\030\001 \003(\0132\022.TCCamp.ItemConfig\"#\n\010Item"
      "Info\022\n\n\002Id\030\001 \001(\005\022\013\n\003Num\030\002 \001(\005\"-\n\013ShopIte"
      "mRsp\022\036\n\004Item\030\001 \003(\0132\020.TCCamp.ItemInfo\";\n\n"
      "BagItemRsp\022\r\n\005Money\030\001 \001(\005\022\036\n\004Item\030\002 \003(\0132"
      "\020.TCCamp.ItemInfo\"!\n\006BuyReq\022\n\n\002Id\030\001 \001(\005\022"
      "\013\n\003Num\030\002 \001(\005\"(\n\rDeleteItemReq\022\n\n\002Id\030\001 \001("
      "\005\022\013\n\003Num\030\002 \001(\005\"\032\n\013AddMoneyReq\022\013\n\003Num\030\001 \001"
      "(\005\"9\n\010MoneyRsp\022 \n\004Code\030\001 \001(\0162\022.TCCamp.St"
      "atueCode\022\013\n\003Num\030\002 \001(\005\"A\n\rStatueCodeRsp\022 "
      "\n\004Code\030\001 \001(\0162\022.TCCamp.StatueCode\022\016\n\006Reas"
      "on\030\002 \001(\t*\223\010\n\nCLIENT_CMD\022\026\n\022CLIENT_CMD_IN"
      "VALID\020\000\022\026\n\020CLIENT_CMD_BEGIN\020\260\352\001\022\021\n\013CLIEN"
      "T_PING\020\261\352\001\022\024\n\016CLIENT_ADD_REQ\020\263\352\001\022\026\n\020CLIE"
      "NT_LOGIN_REQ\020\264\352\001\022\027\n\021CLIENT_LOGOUT_REQ\020\265\352"
      "\001\022\027\n\021CLIENT_CREATE_REQ\020\266\352\001\022\031\n\023CLIENT_ANN"
      "OUNCE_REQ\020\267\352\001\022\035\n\027CLIENT_CHARACTERADD_REQ"
      "\020\276\352\001\022\035\n\027CLIENT_UPDATESTATUE_REQ\020\277\352\001\022 \n\032C"
      "LIENT_CHARACTERREMOVE_REQ\020\300\352\001\022\033\n\025CLIENT_"
      "SCENEBRIEF_REQ\020\310\352\001\022!\n\033CLIENT_MONSTERATTR"
      "IBUTE_REQ\020\311\352\001\022\034\n\026CLIENT_SCENEDETAIL_REQ\020"
      "\312\352\001\022\031\n\023CLIENT_SCENESYN_REQ\020\313\352\001\022\027\n\021CLIENT"
      "_ATTACK_REQ\020\314\352\001\022\032\n\024CLIENT_BULLETSYN_REQ\020"
      "\315\352\001\022\031\n\023CLIENT_RANKLIST_REQ\020\316\352\001\022\026\n\020CLIENT"
      "_START_REQ\020\317\352\001\022\024\n\016CLIENT_END_REQ\020\320\352\001\022\024\n\016"
      "CLIENT_RPC_REQ\020\321\352\001\022\025\n\017CLIENT_ROOM_REQ\020\322\352"
      "\001\022\032\n\024CLIENT_ENTERROOM_REQ\020\323\352\001\022\033\n\025CLIENT_"
      "CREATEROOM_REQ\020\324\352\001\022\031\n\023CLIENT_EXITROOM_RE"
      "Q\020\325\352\001\022\037\n\031CLIENT_COLLISIONCHECK_REQ\020\326\352\001\022\033"
      "\n\025CLIENT_MONSTERSYN_REQ\020\327\352\001\022\031\n\023CLIENT_GA"
      "METIME_REQ\020\330\352\001\022\032\n\024CLIENT_GAMESCORE_REQ\020\331"
      "\352\001\022\035\n\027CLIENT_GAMECONTINUE_REQ\020\332\352\001\022\030\n\022CLI"
      "ENT_BUYITEM_REQ\020\342\352\001\022\033\n\025CLIENT_DELETEITEM"
      "_REQ\020\343\352\001\022\035\n\027CLIENT_GETSHOPITEMS_REQ\020\344\352\001\022"
      "\034\n\026CLIENT_GETBAGITEMS_REQ\020\345\352\001\022\031\n\023CLIENT_"
      "GETMONEY_REQ\020\346\352\001\022\031\n\023CLIENT_ADDMONEY_REQ\020"
      "\347\352\001\022\033\n\025CLIENT_ITEMCONFIG_REQ\020\350\352\001\022\024\n\016CLIE"
      "NT_CMD_END\020\350\201\002*\376\007\n\nSERVER_CMD\022\026\n\022SERVER_"
      "CMD_INVALID\020\000\022\025\n\020SERVER_CMD_BEGIN\020\350\007\022\020\n\013"
      "SERVER_PONG\020\351\007\022\023\n\016SERVER_ADD_RSP\020\353\007\022\025\n\020S"
      "ERVER_LOGIN_RSP\020\354\007\022\026\n\021SERVER_CREATE_RSP\020"
      "\355\007\022\030\n\023SERVER_ANNOUNCE_RSP\020\356\007\022\034\n\027SERVER_C"
      "HARACTERADD_RSP\020\366\007\022%\n SERVER_BROADCAST_C"
      "HARACTERSTATUE\020\367\007\022\037\n\032SERVER_CHARACTERREM"
      "OVE_RSP\020\370\007\022 \n\033SERVER_CHARACTERANIMSYN_RS"
      "P\020\371\007\022\032\n\025SERVER_SCENEBRIEF_RSP\020\200\010\022 \n\033SERV"
      "ER_MONSTERATTRIBUTE_RSP\020\201\010\022\026\n\021SERVER_ATT"
      "ACK_RSP\020\203\010\022\030\n\023SERVER_RANKLIST_RSP\020\204\010\022\025\n\020"
      "SERVER_START_RSP\020\205\010\022\023\n\016SERVER_END_RSP\020\206\010"
      "\022\023\n\016SERVER_RPC_MSG\020\207\010\022\024\n\017SERVER_ROOM_RSP"
      "\020\210\010\022\031\n\024SERVER_ENTERROOM_RSP\020\211\010\022\031\n\024SERVER"
      "_ROOMREADY_RSP\020\212\010\022\035\n\030SERVER_ROOMNUMCHANG"
      "E_RSP\020\213\010\022\034\n\027SERVER_SCENEMONSTER_RSP\020\214\010\022\033"
      "\n\026SERVER_SCENEOBJECT_RSP\020\215\010\022\032\n\025SERVER_MO"
      "NSTERSYN_RSP\020\216\010\022\031\n\024SERVER_BULLETSYN_RSP\020"
      "\217\010\022\030\n\023SERVER_GAMETIME_RSP\020\220\010\022\031\n\024SERVER_G"
      "AMESCORE_RSP\020\221\010\022\034\n\027SERVER_GAMECONTINUE_R"
      "SP\020\222\010\022\027\n\022SERVER_BUYITEM_RSP\020\232\010\022\032\n\025SERVER"
      "_DELETEITEM_RSP\020\233\010\022\034\n\027SERVER_GETSHOPITEM"
      "S_RSP\020\234\010\022\033\n\026SERVER_GETBAGITEMS_RSP\020\235\010\022\030\n"
      "\023SERVER_GETMONEY_RSP\020\236\010\022\030\n\023SERVER_ADDMON"
      "EY_RSP\020\237\010\022\032\n\025SERVER_ITEMCONFIG_RSP\020\240\010\022\023\n"
      "\016GM_OPERATE_RSP\020\314\010\022\023\n\016SERVER_CMD_END\020\220N*"
      "\346\001\n\007RPC_CMD\022\r\n\tRPC_BEGIN\020\000\022\026\n\022TRAP_STATU"
      "E_ENABLE\020\001\022\027\n\023TRAP_STATUE_DISABLE\020\002\022\023\n\017B"
      "OX_STATUE_OPEN\020\003\022\023\n\017LIGHT_STATUE_ON\020\004\022\024\n"
      "\020LIGHT_STATUE_OFF\020\005\022\024\n\020DOOR_STATUE_OPEN\020"
      "\006\022\025\n\021DOOR_STATUE_CLOSE\020\007\022\017\n\013TIME_UPDATE\020"
      "\010\022\020\n\014THROW_WEAPON\020\t\022\013\n\007RPC_END\020\024*\226\001\n\017Sce"
      "neObjectType\022\017\n\013OBJECT_NONE\020\000\022\n\n\006PLAYER\020"
      "\001\022\n\n\006BULLET\020\002\022\t\n\005GHOST\020\003\022\014\n\010GARGOYLE\020\004\022\010"
      "\n\004DOOR\020\005\022\t\n\005LIGHT\020\006\022\007\n\003BOX\020\007\022\t\n\005SLIME\020\010\022"
      "\010\n\004TRAP\020\t\022\016\n\nFINISHLINE\020\n*\205\001\n\021CharacterA"
      "nimType\022\r\n\tANIM_NONE\020\000\022\014\n\010OPENDOOR\020\001\022\r\n\t"
      "CLOSEDOOR\020\002\022\017\n\013TURNONLIGHT\020\003\022\020\n\014TURNOFFL"
      "IGHT\020\004\022\013\n\007OPENBOX\020\005\022\n\n\006ATTACK\020\006\022\010\n\004HURT\020"
      "\007*\203\002\n\nStatueCode\022\027\n\023STATUE_CODE_INVALID\020"
      "\000\022\027\n\021STATUE_CODE_BEGIN\020\320\206\003\022\024\n\016STATUE_SUC"
      "CESS\020\321\206\003\022\034\n\026STATUE_MONEY_NOTENOUGH\020\322\206\003\022\036"
      "\n\030STATUE_BUY_ITEMNOTENOUGH\020\323\206\003\022!\n\033STATUE"
      "_DELETE_ITEMNOTENOUGH\020\324\206\003\022\036\n\030STATUE_ITEM"
      "_ITEMNOTEXIST\020\325\206\003\022\025\n\017STATUE_NOTEXIST\020\326\206\003"
      "\022\025\n\017STATUE_CODE_END\020\270\216\003b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 6631);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "player.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_player_2eproto
namespace TCCamp {
const ::google::protobuf::EnumDescriptor* CLIENT_CMD_descriptor() {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_2eproto::file_level_enum_descriptors[0];
}
bool CLIENT_CMD_IsValid(int value) {
  switch (value) {
    case 0:
    case 30000:
    case 30001:
    case 30003:
    case 30004:
    case 30005:
    case 30006:
    case 30007:
    case 30014:
    case 30015:
    case 30016:
    case 30024:
    case 30025:
    case 30026:
    case 30027:
    case 30028:
    case 30029:
    case 30030:
    case 30031:
    case 30032:
    case 30033:
    case 30034:
    case 30035:
    case 30036:
    case 30037:
    case 30038:
    case 30039:
    case 30040:
    case 30041:
    case 30042:
    case 30050:
    case 30051:
    case 30052:
    case 30053:
    case 30054:
    case 30055:
    case 30056:
    case 33000:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SERVER_CMD_descriptor() {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_2eproto::file_level_enum_descriptors[1];
}
bool SERVER_CMD_IsValid(int value) {
  switch (value) {
    case 0:
    case 1000:
    case 1001:
    case 1003:
    case 1004:
    case 1005:
    case 1006:
    case 1014:
    case 1015:
    case 1016:
    case 1017:
    case 1024:
    case 1025:
    case 1027:
    case 1028:
    case 1029:
    case 1030:
    case 1031:
    case 1032:
    case 1033:
    case 1034:
    case 1035:
    case 1036:
    case 1037:
    case 1038:
    case 1039:
    case 1040:
    case 1041:
    case 1042:
    case 1050:
    case 1051:
    case 1052:
    case 1053:
    case 1054:
    case 1055:
    case 1056:
    case 1100:
    case 10000:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RPC_CMD_descriptor() {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_2eproto::file_level_enum_descriptors[2];
}
bool RPC_CMD_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 20:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SceneObjectType_descriptor() {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_2eproto::file_level_enum_descriptors[3];
}
bool SceneObjectType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CharacterAnimType_descriptor() {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_2eproto::file_level_enum_descriptors[4];
}
bool CharacterAnimType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* StatueCode_descriptor() {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_player_2eproto::file_level_enum_descriptors[5];
}
bool StatueCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 50000:
    case 50001:
    case 50002:
    case 50003:
    case 50004:
    case 50005:
    case 50006:
    case 51000:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void CollisionReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CollisionReq::kTypeAFieldNumber;
const int CollisionReq::kIdAFieldNumber;
const int CollisionReq::kTypeBFieldNumber;
const int CollisionReq::kIdBFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CollisionReq::CollisionReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_CollisionReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.CollisionReq)
}
CollisionReq::CollisionReq(const CollisionReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&typea_, &from.typea_,
    static_cast<size_t>(reinterpret_cast<char*>(&idb_) -
    reinterpret_cast<char*>(&typea_)) + sizeof(idb_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.CollisionReq)
}

void CollisionReq::SharedCtor() {
  ::memset(&typea_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&idb_) -
      reinterpret_cast<char*>(&typea_)) + sizeof(idb_));
}

CollisionReq::~CollisionReq() {
  // @@protoc_insertion_point(destructor:TCCamp.CollisionReq)
  SharedDtor();
}

void CollisionReq::SharedDtor() {
}

void CollisionReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CollisionReq::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CollisionReq& CollisionReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_CollisionReq.base);
  return *internal_default_instance();
}


void CollisionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.CollisionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&typea_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&idb_) -
      reinterpret_cast<char*>(&typea_)) + sizeof(idb_));
  _internal_metadata_.Clear();
}

bool CollisionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.CollisionReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .TCCamp.SceneObjectType typeA = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_typea(static_cast< ::TCCamp::SceneObjectType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 idA = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ida_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TCCamp.SceneObjectType typeB = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_typeb(static_cast< ::TCCamp::SceneObjectType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 idB = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &idb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.CollisionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.CollisionReq)
  return false;
#undef DO_
}

void CollisionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.CollisionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .TCCamp.SceneObjectType typeA = 1;
  if (this->typea() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->typea(), output);
  }

  // int32 idA = 2;
  if (this->ida() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ida(), output);
  }

  // .TCCamp.SceneObjectType typeB = 3;
  if (this->typeb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->typeb(), output);
  }

  // int32 idB = 4;
  if (this->idb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->idb(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.CollisionReq)
}

::google::protobuf::uint8* CollisionReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.CollisionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .TCCamp.SceneObjectType typeA = 1;
  if (this->typea() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->typea(), target);
  }

  // int32 idA = 2;
  if (this->ida() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ida(), target);
  }

  // .TCCamp.SceneObjectType typeB = 3;
  if (this->typeb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->typeb(), target);
  }

  // int32 idB = 4;
  if (this->idb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->idb(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.CollisionReq)
  return target;
}

size_t CollisionReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.CollisionReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .TCCamp.SceneObjectType typeA = 1;
  if (this->typea() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->typea());
  }

  // int32 idA = 2;
  if (this->ida() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ida());
  }

  // .TCCamp.SceneObjectType typeB = 3;
  if (this->typeb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->typeb());
  }

  // int32 idB = 4;
  if (this->idb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->idb());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CollisionReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.CollisionReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CollisionReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CollisionReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.CollisionReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.CollisionReq)
    MergeFrom(*source);
  }
}

void CollisionReq::MergeFrom(const CollisionReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.CollisionReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.typea() != 0) {
    set_typea(from.typea());
  }
  if (from.ida() != 0) {
    set_ida(from.ida());
  }
  if (from.typeb() != 0) {
    set_typeb(from.typeb());
  }
  if (from.idb() != 0) {
    set_idb(from.idb());
  }
}

void CollisionReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.CollisionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CollisionReq::CopyFrom(const CollisionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.CollisionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CollisionReq::IsInitialized() const {
  return true;
}

void CollisionReq::Swap(CollisionReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CollisionReq::InternalSwap(CollisionReq* other) {
  using std::swap;
  swap(typea_, other->typea_);
  swap(ida_, other->ida_);
  swap(typeb_, other->typeb_);
  swap(idb_, other->idb_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CollisionReq::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RPC::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RPC::kCmdFieldNumber;
const int RPC::kParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RPC::RPC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_RPC.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.RPC)
}
RPC::RPC(const RPC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      param_(from.param_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cmd_ = from.cmd_;
  // @@protoc_insertion_point(copy_constructor:TCCamp.RPC)
}

void RPC::SharedCtor() {
  cmd_ = 0;
}

RPC::~RPC() {
  // @@protoc_insertion_point(destructor:TCCamp.RPC)
  SharedDtor();
}

void RPC::SharedDtor() {
}

void RPC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RPC::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RPC& RPC::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_RPC.base);
  return *internal_default_instance();
}


void RPC::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.RPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  param_.Clear();
  cmd_ = 0;
  _internal_metadata_.Clear();
}

bool RPC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.RPC)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .TCCamp.RPC_CMD cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cmd(static_cast< ::TCCamp::RPC_CMD >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 param = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_param())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_param())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.RPC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.RPC)
  return false;
#undef DO_
}

void RPC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.RPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .TCCamp.RPC_CMD cmd = 1;
  if (this->cmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // repeated int32 param = 2;
  if (this->param_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _param_cached_byte_size_));
  }
  for (int i = 0, n = this->param_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->param(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.RPC)
}

::google::protobuf::uint8* RPC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.RPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .TCCamp.RPC_CMD cmd = 1;
  if (this->cmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // repeated int32 param = 2;
  if (this->param_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _param_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->param_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.RPC)
  return target;
}

size_t RPC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.RPC)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 param = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->param_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _param_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .TCCamp.RPC_CMD cmd = 1;
  if (this->cmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RPC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.RPC)
  GOOGLE_DCHECK_NE(&from, this);
  const RPC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RPC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.RPC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.RPC)
    MergeFrom(*source);
  }
}

void RPC::MergeFrom(const RPC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.RPC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  param_.MergeFrom(from.param_);
  if (from.cmd() != 0) {
    set_cmd(from.cmd());
  }
}

void RPC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.RPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RPC::CopyFrom(const RPC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.RPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RPC::IsInitialized() const {
  return true;
}

void RPC::Swap(RPC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RPC::InternalSwap(RPC* other) {
  using std::swap;
  param_.InternalSwap(&other->param_);
  swap(cmd_, other->cmd_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RPC::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerLoginReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerLoginReq::kPlayerIDFieldNumber;
const int PlayerLoginReq::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerLoginReq::PlayerLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_PlayerLoginReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.PlayerLoginReq)
}
PlayerLoginReq::PlayerLoginReq(const PlayerLoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.playerid().size() > 0) {
    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:TCCamp.PlayerLoginReq)
}

void PlayerLoginReq::SharedCtor() {
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PlayerLoginReq::~PlayerLoginReq() {
  // @@protoc_insertion_point(destructor:TCCamp.PlayerLoginReq)
  SharedDtor();
}

void PlayerLoginReq::SharedDtor() {
  playerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerLoginReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PlayerLoginReq::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerLoginReq& PlayerLoginReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_PlayerLoginReq.base);
  return *internal_default_instance();
}


void PlayerLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.PlayerLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PlayerLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.PlayerLoginReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string PlayerID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playerid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->playerid().data(), static_cast<int>(this->playerid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TCCamp.PlayerLoginReq.PlayerID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TCCamp.PlayerLoginReq.Password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.PlayerLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.PlayerLoginReq)
  return false;
#undef DO_
}

void PlayerLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.PlayerLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string PlayerID = 1;
  if (this->playerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.PlayerLoginReq.PlayerID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->playerid(), output);
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.PlayerLoginReq.Password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.PlayerLoginReq)
}

::google::protobuf::uint8* PlayerLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.PlayerLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string PlayerID = 1;
  if (this->playerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.PlayerLoginReq.PlayerID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->playerid(), target);
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.PlayerLoginReq.Password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.PlayerLoginReq)
  return target;
}

size_t PlayerLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.PlayerLoginReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string PlayerID = 1;
  if (this->playerid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->playerid());
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayerLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.PlayerLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerLoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.PlayerLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.PlayerLoginReq)
    MergeFrom(*source);
  }
}

void PlayerLoginReq::MergeFrom(const PlayerLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.PlayerLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid().size() > 0) {

    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void PlayerLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.PlayerLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerLoginReq::CopyFrom(const PlayerLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.PlayerLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerLoginReq::IsInitialized() const {
  return true;
}

void PlayerLoginReq::Swap(PlayerLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerLoginReq::InternalSwap(PlayerLoginReq* other) {
  using std::swap;
  playerid_.Swap(&other->playerid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PlayerLoginReq::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerLoginRsp::InitAsDefaultInstance() {
  ::TCCamp::_PlayerLoginRsp_default_instance_._instance.get_mutable()->playerdata_ = const_cast< ::TCCamp::PlayerSyncData*>(
      ::TCCamp::PlayerSyncData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerLoginRsp::kResultFieldNumber;
const int PlayerLoginRsp::kReasonFieldNumber;
const int PlayerLoginRsp::kPlayerDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerLoginRsp::PlayerLoginRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_PlayerLoginRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.PlayerLoginRsp)
}
PlayerLoginRsp::PlayerLoginRsp(const PlayerLoginRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reason().size() > 0) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  if (from.has_playerdata()) {
    playerdata_ = new ::TCCamp::PlayerSyncData(*from.playerdata_);
  } else {
    playerdata_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:TCCamp.PlayerLoginRsp)
}

void PlayerLoginRsp::SharedCtor() {
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerdata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&playerdata_)) + sizeof(result_));
}

PlayerLoginRsp::~PlayerLoginRsp() {
  // @@protoc_insertion_point(destructor:TCCamp.PlayerLoginRsp)
  SharedDtor();
}

void PlayerLoginRsp::SharedDtor() {
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete playerdata_;
}

void PlayerLoginRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PlayerLoginRsp::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerLoginRsp& PlayerLoginRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_PlayerLoginRsp.base);
  return *internal_default_instance();
}


void PlayerLoginRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.PlayerLoginRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && playerdata_ != NULL) {
    delete playerdata_;
  }
  playerdata_ = NULL;
  result_ = 0;
  _internal_metadata_.Clear();
}

bool PlayerLoginRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.PlayerLoginRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Reason = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reason().data(), static_cast<int>(this->reason().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TCCamp.PlayerLoginRsp.Reason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TCCamp.PlayerSyncData PlayerData = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_playerdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.PlayerLoginRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.PlayerLoginRsp)
  return false;
#undef DO_
}

void PlayerLoginRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.PlayerLoginRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // string Reason = 2;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.PlayerLoginRsp.Reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->reason(), output);
  }

  // .TCCamp.PlayerSyncData PlayerData = 3;
  if (this->has_playerdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_playerdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.PlayerLoginRsp)
}

::google::protobuf::uint8* PlayerLoginRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.PlayerLoginRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // string Reason = 2;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.PlayerLoginRsp.Reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->reason(), target);
  }

  // .TCCamp.PlayerSyncData PlayerData = 3;
  if (this->has_playerdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_playerdata(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.PlayerLoginRsp)
  return target;
}

size_t PlayerLoginRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.PlayerLoginRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Reason = 2;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }

  // .TCCamp.PlayerSyncData PlayerData = 3;
  if (this->has_playerdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *playerdata_);
  }

  // int32 Result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayerLoginRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.PlayerLoginRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerLoginRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerLoginRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.PlayerLoginRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.PlayerLoginRsp)
    MergeFrom(*source);
  }
}

void PlayerLoginRsp::MergeFrom(const PlayerLoginRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.PlayerLoginRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reason().size() > 0) {

    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  if (from.has_playerdata()) {
    mutable_playerdata()->::TCCamp::PlayerSyncData::MergeFrom(from.playerdata());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void PlayerLoginRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.PlayerLoginRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerLoginRsp::CopyFrom(const PlayerLoginRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.PlayerLoginRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerLoginRsp::IsInitialized() const {
  return true;
}

void PlayerLoginRsp::Swap(PlayerLoginRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerLoginRsp::InternalSwap(PlayerLoginRsp* other) {
  using std::swap;
  reason_.Swap(&other->reason_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerdata_, other->playerdata_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PlayerLoginRsp::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerSaveData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerSaveData::kPlayerIDFieldNumber;
const int PlayerSaveData::kPasswordFieldNumber;
const int PlayerSaveData::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerSaveData::PlayerSaveData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_PlayerSaveData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.PlayerSaveData)
}
PlayerSaveData::PlayerSaveData(const PlayerSaveData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.playerid().size() > 0) {
    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:TCCamp.PlayerSaveData)
}

void PlayerSaveData::SharedCtor() {
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PlayerSaveData::~PlayerSaveData() {
  // @@protoc_insertion_point(destructor:TCCamp.PlayerSaveData)
  SharedDtor();
}

void PlayerSaveData::SharedDtor() {
  playerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerSaveData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PlayerSaveData::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerSaveData& PlayerSaveData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_PlayerSaveData.base);
  return *internal_default_instance();
}


void PlayerSaveData::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.PlayerSaveData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PlayerSaveData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.PlayerSaveData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string PlayerID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playerid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->playerid().data(), static_cast<int>(this->playerid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TCCamp.PlayerSaveData.PlayerID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TCCamp.PlayerSaveData.Password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.PlayerSaveData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.PlayerSaveData)
  return false;
#undef DO_
}

void PlayerSaveData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.PlayerSaveData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string PlayerID = 1;
  if (this->playerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.PlayerSaveData.PlayerID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->playerid(), output);
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.PlayerSaveData.Password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // bytes Name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.PlayerSaveData)
}

::google::protobuf::uint8* PlayerSaveData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.PlayerSaveData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string PlayerID = 1;
  if (this->playerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.PlayerSaveData.PlayerID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->playerid(), target);
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.PlayerSaveData.Password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // bytes Name = 3;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.PlayerSaveData)
  return target;
}

size_t PlayerSaveData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.PlayerSaveData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string PlayerID = 1;
  if (this->playerid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->playerid());
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // bytes Name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayerSaveData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.PlayerSaveData)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerSaveData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerSaveData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.PlayerSaveData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.PlayerSaveData)
    MergeFrom(*source);
  }
}

void PlayerSaveData::MergeFrom(const PlayerSaveData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.PlayerSaveData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid().size() > 0) {

    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void PlayerSaveData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.PlayerSaveData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerSaveData::CopyFrom(const PlayerSaveData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.PlayerSaveData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerSaveData::IsInitialized() const {
  return true;
}

void PlayerSaveData::Swap(PlayerSaveData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerSaveData::InternalSwap(PlayerSaveData* other) {
  using std::swap;
  playerid_.Swap(&other->playerid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PlayerSaveData::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerSyncData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerSyncData::kNameFieldNumber;
const int PlayerSyncData::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerSyncData::PlayerSyncData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_PlayerSyncData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.PlayerSyncData)
}
PlayerSyncData::PlayerSyncData(const PlayerSyncData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.playerid().size() > 0) {
    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
  // @@protoc_insertion_point(copy_constructor:TCCamp.PlayerSyncData)
}

void PlayerSyncData::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PlayerSyncData::~PlayerSyncData() {
  // @@protoc_insertion_point(destructor:TCCamp.PlayerSyncData)
  SharedDtor();
}

void PlayerSyncData::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerSyncData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PlayerSyncData::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerSyncData& PlayerSyncData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_PlayerSyncData.base);
  return *internal_default_instance();
}


void PlayerSyncData::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.PlayerSyncData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PlayerSyncData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.PlayerSyncData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TCCamp.PlayerSyncData.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playerid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->playerid().data(), static_cast<int>(this->playerid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TCCamp.PlayerSyncData.Playerid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.PlayerSyncData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.PlayerSyncData)
  return false;
#undef DO_
}

void PlayerSyncData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.PlayerSyncData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.PlayerSyncData.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string Playerid = 2;
  if (this->playerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.PlayerSyncData.Playerid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.PlayerSyncData)
}

::google::protobuf::uint8* PlayerSyncData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.PlayerSyncData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.PlayerSyncData.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string Playerid = 2;
  if (this->playerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.PlayerSyncData.Playerid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.PlayerSyncData)
  return target;
}

size_t PlayerSyncData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.PlayerSyncData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string Playerid = 2;
  if (this->playerid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayerSyncData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.PlayerSyncData)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerSyncData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerSyncData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.PlayerSyncData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.PlayerSyncData)
    MergeFrom(*source);
  }
}

void PlayerSyncData::MergeFrom(const PlayerSyncData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.PlayerSyncData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.playerid().size() > 0) {

    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
}

void PlayerSyncData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.PlayerSyncData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerSyncData::CopyFrom(const PlayerSyncData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.PlayerSyncData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerSyncData::IsInitialized() const {
  return true;
}

void PlayerSyncData::Swap(PlayerSyncData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerSyncData::InternalSwap(PlayerSyncData* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  playerid_.Swap(&other->playerid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PlayerSyncData::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RoomInfoMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomInfoMsg::kRoomNameFieldNumber;
const int RoomInfoMsg::kRoomIdFieldNumber;
const int RoomInfoMsg::kMaxNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomInfoMsg::RoomInfoMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_RoomInfoMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.RoomInfoMsg)
}
RoomInfoMsg::RoomInfoMsg(const RoomInfoMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.roomname().size() > 0) {
    roomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomname_);
  }
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&maxnum_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(maxnum_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.RoomInfoMsg)
}

void RoomInfoMsg::SharedCtor() {
  roomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxnum_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(maxnum_));
}

RoomInfoMsg::~RoomInfoMsg() {
  // @@protoc_insertion_point(destructor:TCCamp.RoomInfoMsg)
  SharedDtor();
}

void RoomInfoMsg::SharedDtor() {
  roomname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RoomInfoMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RoomInfoMsg::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoomInfoMsg& RoomInfoMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_RoomInfoMsg.base);
  return *internal_default_instance();
}


void RoomInfoMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.RoomInfoMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxnum_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(maxnum_));
  _internal_metadata_.Clear();
}

bool RoomInfoMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.RoomInfoMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string roomName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->roomname().data(), static_cast<int>(this->roomname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TCCamp.RoomInfoMsg.roomName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 roomId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 maxNum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.RoomInfoMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.RoomInfoMsg)
  return false;
#undef DO_
}

void RoomInfoMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.RoomInfoMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string roomName = 1;
  if (this->roomname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomname().data(), static_cast<int>(this->roomname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.RoomInfoMsg.roomName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->roomname(), output);
  }

  // int32 roomId = 2;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->roomid(), output);
  }

  // int32 maxNum = 3;
  if (this->maxnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->maxnum(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.RoomInfoMsg)
}

::google::protobuf::uint8* RoomInfoMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.RoomInfoMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string roomName = 1;
  if (this->roomname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomname().data(), static_cast<int>(this->roomname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.RoomInfoMsg.roomName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->roomname(), target);
  }

  // int32 roomId = 2;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->roomid(), target);
  }

  // int32 maxNum = 3;
  if (this->maxnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->maxnum(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.RoomInfoMsg)
  return target;
}

size_t RoomInfoMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.RoomInfoMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string roomName = 1;
  if (this->roomname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomname());
  }

  // int32 roomId = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roomid());
  }

  // int32 maxNum = 3;
  if (this->maxnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxnum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RoomInfoMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.RoomInfoMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const RoomInfoMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomInfoMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.RoomInfoMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.RoomInfoMsg)
    MergeFrom(*source);
  }
}

void RoomInfoMsg::MergeFrom(const RoomInfoMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.RoomInfoMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomname().size() > 0) {

    roomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomname_);
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.maxnum() != 0) {
    set_maxnum(from.maxnum());
  }
}

void RoomInfoMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.RoomInfoMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomInfoMsg::CopyFrom(const RoomInfoMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.RoomInfoMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomInfoMsg::IsInitialized() const {
  return true;
}

void RoomInfoMsg::Swap(RoomInfoMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomInfoMsg::InternalSwap(RoomInfoMsg* other) {
  using std::swap;
  roomname_.Swap(&other->roomname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(roomid_, other->roomid_);
  swap(maxnum_, other->maxnum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RoomInfoMsg::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RoomInfoReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomInfoReq::kSceneIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomInfoReq::RoomInfoReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_RoomInfoReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.RoomInfoReq)
}
RoomInfoReq::RoomInfoReq(const RoomInfoReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sceneid_ = from.sceneid_;
  // @@protoc_insertion_point(copy_constructor:TCCamp.RoomInfoReq)
}

void RoomInfoReq::SharedCtor() {
  sceneid_ = 0;
}

RoomInfoReq::~RoomInfoReq() {
  // @@protoc_insertion_point(destructor:TCCamp.RoomInfoReq)
  SharedDtor();
}

void RoomInfoReq::SharedDtor() {
}

void RoomInfoReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RoomInfoReq::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoomInfoReq& RoomInfoReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_RoomInfoReq.base);
  return *internal_default_instance();
}


void RoomInfoReq::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.RoomInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sceneid_ = 0;
  _internal_metadata_.Clear();
}

bool RoomInfoReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.RoomInfoReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 sceneId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sceneid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.RoomInfoReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.RoomInfoReq)
  return false;
#undef DO_
}

void RoomInfoReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.RoomInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sceneId = 1;
  if (this->sceneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sceneid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.RoomInfoReq)
}

::google::protobuf::uint8* RoomInfoReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.RoomInfoReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sceneId = 1;
  if (this->sceneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sceneid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.RoomInfoReq)
  return target;
}

size_t RoomInfoReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.RoomInfoReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 sceneId = 1;
  if (this->sceneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sceneid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RoomInfoReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.RoomInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RoomInfoReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomInfoReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.RoomInfoReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.RoomInfoReq)
    MergeFrom(*source);
  }
}

void RoomInfoReq::MergeFrom(const RoomInfoReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.RoomInfoReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sceneid() != 0) {
    set_sceneid(from.sceneid());
  }
}

void RoomInfoReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.RoomInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomInfoReq::CopyFrom(const RoomInfoReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.RoomInfoReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomInfoReq::IsInitialized() const {
  return true;
}

void RoomInfoReq::Swap(RoomInfoReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomInfoReq::InternalSwap(RoomInfoReq* other) {
  using std::swap;
  swap(sceneid_, other->sceneid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RoomInfoReq::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RoomInfoRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomInfoRsp::kRoomInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomInfoRsp::RoomInfoRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_RoomInfoRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.RoomInfoRsp)
}
RoomInfoRsp::RoomInfoRsp(const RoomInfoRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      roominfolist_(from.roominfolist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:TCCamp.RoomInfoRsp)
}

void RoomInfoRsp::SharedCtor() {
}

RoomInfoRsp::~RoomInfoRsp() {
  // @@protoc_insertion_point(destructor:TCCamp.RoomInfoRsp)
  SharedDtor();
}

void RoomInfoRsp::SharedDtor() {
}

void RoomInfoRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RoomInfoRsp::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoomInfoRsp& RoomInfoRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_RoomInfoRsp.base);
  return *internal_default_instance();
}


void RoomInfoRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.RoomInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roominfolist_.Clear();
  _internal_metadata_.Clear();
}

bool RoomInfoRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.RoomInfoRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .TCCamp.RoomInfoMsg RoomInfoList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_roominfolist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.RoomInfoRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.RoomInfoRsp)
  return false;
#undef DO_
}

void RoomInfoRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.RoomInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TCCamp.RoomInfoMsg RoomInfoList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roominfolist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->roominfolist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.RoomInfoRsp)
}

::google::protobuf::uint8* RoomInfoRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.RoomInfoRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TCCamp.RoomInfoMsg RoomInfoList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roominfolist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->roominfolist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.RoomInfoRsp)
  return target;
}

size_t RoomInfoRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.RoomInfoRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .TCCamp.RoomInfoMsg RoomInfoList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->roominfolist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->roominfolist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RoomInfoRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.RoomInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RoomInfoRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomInfoRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.RoomInfoRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.RoomInfoRsp)
    MergeFrom(*source);
  }
}

void RoomInfoRsp::MergeFrom(const RoomInfoRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.RoomInfoRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roominfolist_.MergeFrom(from.roominfolist_);
}

void RoomInfoRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.RoomInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomInfoRsp::CopyFrom(const RoomInfoRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.RoomInfoRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomInfoRsp::IsInitialized() const {
  return true;
}

void RoomInfoRsp::Swap(RoomInfoRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomInfoRsp::InternalSwap(RoomInfoRsp* other) {
  using std::swap;
  CastToBase(&roominfolist_)->InternalSwap(CastToBase(&other->roominfolist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RoomInfoRsp::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RoomNumChange::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomNumChange::kCurrentNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomNumChange::RoomNumChange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_RoomNumChange.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.RoomNumChange)
}
RoomNumChange::RoomNumChange(const RoomNumChange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  currentnum_ = from.currentnum_;
  // @@protoc_insertion_point(copy_constructor:TCCamp.RoomNumChange)
}

void RoomNumChange::SharedCtor() {
  currentnum_ = 0;
}

RoomNumChange::~RoomNumChange() {
  // @@protoc_insertion_point(destructor:TCCamp.RoomNumChange)
  SharedDtor();
}

void RoomNumChange::SharedDtor() {
}

void RoomNumChange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RoomNumChange::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoomNumChange& RoomNumChange::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_RoomNumChange.base);
  return *internal_default_instance();
}


void RoomNumChange::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.RoomNumChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  currentnum_ = 0;
  _internal_metadata_.Clear();
}

bool RoomNumChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.RoomNumChange)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 currentNum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &currentnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.RoomNumChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.RoomNumChange)
  return false;
#undef DO_
}

void RoomNumChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.RoomNumChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 currentNum = 1;
  if (this->currentnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->currentnum(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.RoomNumChange)
}

::google::protobuf::uint8* RoomNumChange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.RoomNumChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 currentNum = 1;
  if (this->currentnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->currentnum(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.RoomNumChange)
  return target;
}

size_t RoomNumChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.RoomNumChange)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 currentNum = 1;
  if (this->currentnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->currentnum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RoomNumChange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.RoomNumChange)
  GOOGLE_DCHECK_NE(&from, this);
  const RoomNumChange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomNumChange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.RoomNumChange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.RoomNumChange)
    MergeFrom(*source);
  }
}

void RoomNumChange::MergeFrom(const RoomNumChange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.RoomNumChange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.currentnum() != 0) {
    set_currentnum(from.currentnum());
  }
}

void RoomNumChange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.RoomNumChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomNumChange::CopyFrom(const RoomNumChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.RoomNumChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomNumChange::IsInitialized() const {
  return true;
}

void RoomNumChange::Swap(RoomNumChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomNumChange::InternalSwap(RoomNumChange* other) {
  using std::swap;
  swap(currentnum_, other->currentnum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RoomNumChange::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EnterRoomReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterRoomReq::kRoomIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterRoomReq::EnterRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_EnterRoomReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.EnterRoomReq)
}
EnterRoomReq::EnterRoomReq(const EnterRoomReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomid_ = from.roomid_;
  // @@protoc_insertion_point(copy_constructor:TCCamp.EnterRoomReq)
}

void EnterRoomReq::SharedCtor() {
  roomid_ = 0;
}

EnterRoomReq::~EnterRoomReq() {
  // @@protoc_insertion_point(destructor:TCCamp.EnterRoomReq)
  SharedDtor();
}

void EnterRoomReq::SharedDtor() {
}

void EnterRoomReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EnterRoomReq::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterRoomReq& EnterRoomReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_EnterRoomReq.base);
  return *internal_default_instance();
}


void EnterRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.EnterRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roomid_ = 0;
  _internal_metadata_.Clear();
}

bool EnterRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.EnterRoomReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 roomId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.EnterRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.EnterRoomReq)
  return false;
#undef DO_
}

void EnterRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.EnterRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 roomId = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roomid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.EnterRoomReq)
}

::google::protobuf::uint8* EnterRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.EnterRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 roomId = 1;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->roomid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.EnterRoomReq)
  return target;
}

size_t EnterRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.EnterRoomReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 roomId = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roomid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnterRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.EnterRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterRoomReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.EnterRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.EnterRoomReq)
    MergeFrom(*source);
  }
}

void EnterRoomReq::MergeFrom(const EnterRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.EnterRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
}

void EnterRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.EnterRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterRoomReq::CopyFrom(const EnterRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.EnterRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterRoomReq::IsInitialized() const {
  return true;
}

void EnterRoomReq::Swap(EnterRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterRoomReq::InternalSwap(EnterRoomReq* other) {
  using std::swap;
  swap(roomid_, other->roomid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EnterRoomReq::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EnterRoomRsp::InitAsDefaultInstance() {
  ::TCCamp::_EnterRoomRsp_default_instance_._instance.get_mutable()->roominfo_ = const_cast< ::TCCamp::RoomInfoMsg*>(
      ::TCCamp::RoomInfoMsg::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterRoomRsp::kResCodeFieldNumber;
const int EnterRoomRsp::kResStrFieldNumber;
const int EnterRoomRsp::kRoomInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterRoomRsp::EnterRoomRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_EnterRoomRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.EnterRoomRsp)
}
EnterRoomRsp::EnterRoomRsp(const EnterRoomRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  resstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.resstr().size() > 0) {
    resstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resstr_);
  }
  if (from.has_roominfo()) {
    roominfo_ = new ::TCCamp::RoomInfoMsg(*from.roominfo_);
  } else {
    roominfo_ = NULL;
  }
  rescode_ = from.rescode_;
  // @@protoc_insertion_point(copy_constructor:TCCamp.EnterRoomRsp)
}

void EnterRoomRsp::SharedCtor() {
  resstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roominfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rescode_) -
      reinterpret_cast<char*>(&roominfo_)) + sizeof(rescode_));
}

EnterRoomRsp::~EnterRoomRsp() {
  // @@protoc_insertion_point(destructor:TCCamp.EnterRoomRsp)
  SharedDtor();
}

void EnterRoomRsp::SharedDtor() {
  resstr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete roominfo_;
}

void EnterRoomRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EnterRoomRsp::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterRoomRsp& EnterRoomRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_EnterRoomRsp.base);
  return *internal_default_instance();
}


void EnterRoomRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.EnterRoomRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && roominfo_ != NULL) {
    delete roominfo_;
  }
  roominfo_ = NULL;
  rescode_ = 0;
  _internal_metadata_.Clear();
}

bool EnterRoomRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.EnterRoomRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 resCode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rescode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string resStr = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resstr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resstr().data(), static_cast<int>(this->resstr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TCCamp.EnterRoomRsp.resStr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TCCamp.RoomInfoMsg roomInfo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_roominfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.EnterRoomRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.EnterRoomRsp)
  return false;
#undef DO_
}

void EnterRoomRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.EnterRoomRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 resCode = 1;
  if (this->rescode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rescode(), output);
  }

  // string resStr = 2;
  if (this->resstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resstr().data(), static_cast<int>(this->resstr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.EnterRoomRsp.resStr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->resstr(), output);
  }

  // .TCCamp.RoomInfoMsg roomInfo = 3;
  if (this->has_roominfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_roominfo(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.EnterRoomRsp)
}

::google::protobuf::uint8* EnterRoomRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.EnterRoomRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 resCode = 1;
  if (this->rescode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rescode(), target);
  }

  // string resStr = 2;
  if (this->resstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resstr().data(), static_cast<int>(this->resstr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.EnterRoomRsp.resStr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->resstr(), target);
  }

  // .TCCamp.RoomInfoMsg roomInfo = 3;
  if (this->has_roominfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_roominfo(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.EnterRoomRsp)
  return target;
}

size_t EnterRoomRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.EnterRoomRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string resStr = 2;
  if (this->resstr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resstr());
  }

  // .TCCamp.RoomInfoMsg roomInfo = 3;
  if (this->has_roominfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *roominfo_);
  }

  // int32 resCode = 1;
  if (this->rescode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rescode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnterRoomRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.EnterRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterRoomRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterRoomRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.EnterRoomRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.EnterRoomRsp)
    MergeFrom(*source);
  }
}

void EnterRoomRsp::MergeFrom(const EnterRoomRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.EnterRoomRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.resstr().size() > 0) {

    resstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resstr_);
  }
  if (from.has_roominfo()) {
    mutable_roominfo()->::TCCamp::RoomInfoMsg::MergeFrom(from.roominfo());
  }
  if (from.rescode() != 0) {
    set_rescode(from.rescode());
  }
}

void EnterRoomRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.EnterRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterRoomRsp::CopyFrom(const EnterRoomRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.EnterRoomRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterRoomRsp::IsInitialized() const {
  return true;
}

void EnterRoomRsp::Swap(EnterRoomRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterRoomRsp::InternalSwap(EnterRoomRsp* other) {
  using std::swap;
  resstr_.Swap(&other->resstr_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(roominfo_, other->roominfo_);
  swap(rescode_, other->rescode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EnterRoomRsp::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateRoomReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateRoomReq::kRoomNameFieldNumber;
const int CreateRoomReq::kSceneIdFieldNumber;
const int CreateRoomReq::kMaxNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateRoomReq::CreateRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_CreateRoomReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.CreateRoomReq)
}
CreateRoomReq::CreateRoomReq(const CreateRoomReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.roomname().size() > 0) {
    roomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomname_);
  }
  ::memcpy(&sceneid_, &from.sceneid_,
    static_cast<size_t>(reinterpret_cast<char*>(&maxnum_) -
    reinterpret_cast<char*>(&sceneid_)) + sizeof(maxnum_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.CreateRoomReq)
}

void CreateRoomReq::SharedCtor() {
  roomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sceneid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxnum_) -
      reinterpret_cast<char*>(&sceneid_)) + sizeof(maxnum_));
}

CreateRoomReq::~CreateRoomReq() {
  // @@protoc_insertion_point(destructor:TCCamp.CreateRoomReq)
  SharedDtor();
}

void CreateRoomReq::SharedDtor() {
  roomname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateRoomReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateRoomReq::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateRoomReq& CreateRoomReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_CreateRoomReq.base);
  return *internal_default_instance();
}


void CreateRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.CreateRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sceneid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&maxnum_) -
      reinterpret_cast<char*>(&sceneid_)) + sizeof(maxnum_));
  _internal_metadata_.Clear();
}

bool CreateRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.CreateRoomReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string roomName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->roomname().data(), static_cast<int>(this->roomname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TCCamp.CreateRoomReq.roomName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sceneId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sceneid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 maxNum = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.CreateRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.CreateRoomReq)
  return false;
#undef DO_
}

void CreateRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.CreateRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string roomName = 1;
  if (this->roomname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomname().data(), static_cast<int>(this->roomname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.CreateRoomReq.roomName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->roomname(), output);
  }

  // int32 sceneId = 2;
  if (this->sceneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sceneid(), output);
  }

  // int32 maxNum = 3;
  if (this->maxnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->maxnum(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.CreateRoomReq)
}

::google::protobuf::uint8* CreateRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.CreateRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string roomName = 1;
  if (this->roomname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->roomname().data(), static_cast<int>(this->roomname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.CreateRoomReq.roomName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->roomname(), target);
  }

  // int32 sceneId = 2;
  if (this->sceneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sceneid(), target);
  }

  // int32 maxNum = 3;
  if (this->maxnum() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->maxnum(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.CreateRoomReq)
  return target;
}

size_t CreateRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.CreateRoomReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string roomName = 1;
  if (this->roomname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomname());
  }

  // int32 sceneId = 2;
  if (this->sceneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sceneid());
  }

  // int32 maxNum = 3;
  if (this->maxnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->maxnum());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.CreateRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRoomReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.CreateRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.CreateRoomReq)
    MergeFrom(*source);
  }
}

void CreateRoomReq::MergeFrom(const CreateRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.CreateRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomname().size() > 0) {

    roomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomname_);
  }
  if (from.sceneid() != 0) {
    set_sceneid(from.sceneid());
  }
  if (from.maxnum() != 0) {
    set_maxnum(from.maxnum());
  }
}

void CreateRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.CreateRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRoomReq::CopyFrom(const CreateRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.CreateRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRoomReq::IsInitialized() const {
  return true;
}

void CreateRoomReq::Swap(CreateRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateRoomReq::InternalSwap(CreateRoomReq* other) {
  using std::swap;
  roomname_.Swap(&other->roomname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sceneid_, other->sceneid_);
  swap(maxnum_, other->maxnum_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateRoomReq::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerCreateReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerCreateReq::kPlayerIDFieldNumber;
const int PlayerCreateReq::kPasswordFieldNumber;
const int PlayerCreateReq::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerCreateReq::PlayerCreateReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_PlayerCreateReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.PlayerCreateReq)
}
PlayerCreateReq::PlayerCreateReq(const PlayerCreateReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.playerid().size() > 0) {
    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:TCCamp.PlayerCreateReq)
}

void PlayerCreateReq::SharedCtor() {
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PlayerCreateReq::~PlayerCreateReq() {
  // @@protoc_insertion_point(destructor:TCCamp.PlayerCreateReq)
  SharedDtor();
}

void PlayerCreateReq::SharedDtor() {
  playerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerCreateReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PlayerCreateReq::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerCreateReq& PlayerCreateReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_PlayerCreateReq.base);
  return *internal_default_instance();
}


void PlayerCreateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.PlayerCreateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PlayerCreateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.PlayerCreateReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string PlayerID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playerid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->playerid().data(), static_cast<int>(this->playerid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TCCamp.PlayerCreateReq.PlayerID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TCCamp.PlayerCreateReq.Password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes Name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.PlayerCreateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.PlayerCreateReq)
  return false;
#undef DO_
}

void PlayerCreateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.PlayerCreateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string PlayerID = 1;
  if (this->playerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.PlayerCreateReq.PlayerID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->playerid(), output);
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.PlayerCreateReq.Password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // bytes Name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.PlayerCreateReq)
}

::google::protobuf::uint8* PlayerCreateReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.PlayerCreateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string PlayerID = 1;
  if (this->playerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.PlayerCreateReq.PlayerID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->playerid(), target);
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.PlayerCreateReq.Password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // bytes Name = 3;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.PlayerCreateReq)
  return target;
}

size_t PlayerCreateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.PlayerCreateReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string PlayerID = 1;
  if (this->playerid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->playerid());
  }

  // string Password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // bytes Name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayerCreateReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.PlayerCreateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerCreateReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerCreateReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.PlayerCreateReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.PlayerCreateReq)
    MergeFrom(*source);
  }
}

void PlayerCreateReq::MergeFrom(const PlayerCreateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.PlayerCreateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid().size() > 0) {

    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void PlayerCreateReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.PlayerCreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerCreateReq::CopyFrom(const PlayerCreateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.PlayerCreateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerCreateReq::IsInitialized() const {
  return true;
}

void PlayerCreateReq::Swap(PlayerCreateReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerCreateReq::InternalSwap(PlayerCreateReq* other) {
  using std::swap;
  playerid_.Swap(&other->playerid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PlayerCreateReq::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerCreateRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerCreateRsp::kResultFieldNumber;
const int PlayerCreateRsp::kPlayerIDFieldNumber;
const int PlayerCreateRsp::kNameFieldNumber;
const int PlayerCreateRsp::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerCreateRsp::PlayerCreateRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_PlayerCreateRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.PlayerCreateRsp)
}
PlayerCreateRsp::PlayerCreateRsp(const PlayerCreateRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.playerid().size() > 0) {
    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reason().size() > 0) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:TCCamp.PlayerCreateRsp)
}

void PlayerCreateRsp::SharedCtor() {
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
}

PlayerCreateRsp::~PlayerCreateRsp() {
  // @@protoc_insertion_point(destructor:TCCamp.PlayerCreateRsp)
  SharedDtor();
}

void PlayerCreateRsp::SharedDtor() {
  playerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerCreateRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PlayerCreateRsp::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerCreateRsp& PlayerCreateRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_PlayerCreateRsp.base);
  return *internal_default_instance();
}


void PlayerCreateRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.PlayerCreateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0;
  _internal_metadata_.Clear();
}

bool PlayerCreateRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.PlayerCreateRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string PlayerID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playerid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->playerid().data(), static_cast<int>(this->playerid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TCCamp.PlayerCreateRsp.PlayerID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TCCamp.PlayerCreateRsp.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Reason = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reason().data(), static_cast<int>(this->reason().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TCCamp.PlayerCreateRsp.Reason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.PlayerCreateRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.PlayerCreateRsp)
  return false;
#undef DO_
}

void PlayerCreateRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.PlayerCreateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // string PlayerID = 2;
  if (this->playerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.PlayerCreateRsp.PlayerID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->playerid(), output);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.PlayerCreateRsp.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // string Reason = 4;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.PlayerCreateRsp.Reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.PlayerCreateRsp)
}

::google::protobuf::uint8* PlayerCreateRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.PlayerCreateRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // string PlayerID = 2;
  if (this->playerid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.PlayerCreateRsp.PlayerID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->playerid(), target);
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.PlayerCreateRsp.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // string Reason = 4;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.PlayerCreateRsp.Reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.PlayerCreateRsp)
  return target;
}

size_t PlayerCreateRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.PlayerCreateRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string PlayerID = 2;
  if (this->playerid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->playerid());
  }

  // string Name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string Reason = 4;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }

  // int32 Result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayerCreateRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.PlayerCreateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerCreateRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerCreateRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.PlayerCreateRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.PlayerCreateRsp)
    MergeFrom(*source);
  }
}

void PlayerCreateRsp::MergeFrom(const PlayerCreateRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.PlayerCreateRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid().size() > 0) {

    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.reason().size() > 0) {

    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void PlayerCreateRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.PlayerCreateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerCreateRsp::CopyFrom(const PlayerCreateRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.PlayerCreateRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerCreateRsp::IsInitialized() const {
  return true;
}

void PlayerCreateRsp::Swap(PlayerCreateRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerCreateRsp::InternalSwap(PlayerCreateRsp* other) {
  using std::swap;
  playerid_.Swap(&other->playerid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  reason_.Swap(&other->reason_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PlayerCreateRsp::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SyncAnnounce::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncAnnounce::kAnnounceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncAnnounce::SyncAnnounce()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_SyncAnnounce.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.SyncAnnounce)
}
SyncAnnounce::SyncAnnounce(const SyncAnnounce& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  announce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.announce().size() > 0) {
    announce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.announce_);
  }
  // @@protoc_insertion_point(copy_constructor:TCCamp.SyncAnnounce)
}

void SyncAnnounce::SharedCtor() {
  announce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SyncAnnounce::~SyncAnnounce() {
  // @@protoc_insertion_point(destructor:TCCamp.SyncAnnounce)
  SharedDtor();
}

void SyncAnnounce::SharedDtor() {
  announce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SyncAnnounce::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SyncAnnounce::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SyncAnnounce& SyncAnnounce::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_SyncAnnounce.base);
  return *internal_default_instance();
}


void SyncAnnounce::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.SyncAnnounce)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  announce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SyncAnnounce::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.SyncAnnounce)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes Announce = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_announce()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.SyncAnnounce)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.SyncAnnounce)
  return false;
#undef DO_
}

void SyncAnnounce::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.SyncAnnounce)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Announce = 1;
  if (this->announce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->announce(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.SyncAnnounce)
}

::google::protobuf::uint8* SyncAnnounce::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.SyncAnnounce)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes Announce = 1;
  if (this->announce().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->announce(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.SyncAnnounce)
  return target;
}

size_t SyncAnnounce::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.SyncAnnounce)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes Announce = 1;
  if (this->announce().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->announce());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SyncAnnounce::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.SyncAnnounce)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncAnnounce* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncAnnounce>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.SyncAnnounce)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.SyncAnnounce)
    MergeFrom(*source);
  }
}

void SyncAnnounce::MergeFrom(const SyncAnnounce& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.SyncAnnounce)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.announce().size() > 0) {

    announce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.announce_);
  }
}

void SyncAnnounce::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.SyncAnnounce)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncAnnounce::CopyFrom(const SyncAnnounce& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.SyncAnnounce)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncAnnounce::IsInitialized() const {
  return true;
}

void SyncAnnounce::Swap(SyncAnnounce* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncAnnounce::InternalSwap(SyncAnnounce* other) {
  using std::swap;
  announce_.Swap(&other->announce_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SyncAnnounce::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SceneBriefRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneBriefRsp::kSceneBriefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneBriefRsp::SceneBriefRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_SceneBriefRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.SceneBriefRsp)
}
SceneBriefRsp::SceneBriefRsp(const SceneBriefRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      scenebrief_(from.scenebrief_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:TCCamp.SceneBriefRsp)
}

void SceneBriefRsp::SharedCtor() {
}

SceneBriefRsp::~SceneBriefRsp() {
  // @@protoc_insertion_point(destructor:TCCamp.SceneBriefRsp)
  SharedDtor();
}

void SceneBriefRsp::SharedDtor() {
}

void SceneBriefRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SceneBriefRsp::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneBriefRsp& SceneBriefRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_SceneBriefRsp.base);
  return *internal_default_instance();
}


void SceneBriefRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.SceneBriefRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scenebrief_.Clear();
  _internal_metadata_.Clear();
}

bool SceneBriefRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.SceneBriefRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .TCCamp.SceneBriefMsg SceneBrief = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_scenebrief()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.SceneBriefRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.SceneBriefRsp)
  return false;
#undef DO_
}

void SceneBriefRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.SceneBriefRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TCCamp.SceneBriefMsg SceneBrief = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->scenebrief_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->scenebrief(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.SceneBriefRsp)
}

::google::protobuf::uint8* SceneBriefRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.SceneBriefRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TCCamp.SceneBriefMsg SceneBrief = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->scenebrief_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->scenebrief(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.SceneBriefRsp)
  return target;
}

size_t SceneBriefRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.SceneBriefRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .TCCamp.SceneBriefMsg SceneBrief = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->scenebrief_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->scenebrief(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SceneBriefRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.SceneBriefRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneBriefRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneBriefRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.SceneBriefRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.SceneBriefRsp)
    MergeFrom(*source);
  }
}

void SceneBriefRsp::MergeFrom(const SceneBriefRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.SceneBriefRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  scenebrief_.MergeFrom(from.scenebrief_);
}

void SceneBriefRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.SceneBriefRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneBriefRsp::CopyFrom(const SceneBriefRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.SceneBriefRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneBriefRsp::IsInitialized() const {
  return true;
}

void SceneBriefRsp::Swap(SceneBriefRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneBriefRsp::InternalSwap(SceneBriefRsp* other) {
  using std::swap;
  CastToBase(&scenebrief_)->InternalSwap(CastToBase(&other->scenebrief_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SceneBriefRsp::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SceneBriefMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneBriefMsg::kSceneNameFieldNumber;
const int SceneBriefMsg::kSceneIdFieldNumber;
const int SceneBriefMsg::kGargoyleCountFieldNumber;
const int SceneBriefMsg::kGhostCountFieldNumber;
const int SceneBriefMsg::kDifficultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneBriefMsg::SceneBriefMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_SceneBriefMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.SceneBriefMsg)
}
SceneBriefMsg::SceneBriefMsg(const SceneBriefMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  scenename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scenename().size() > 0) {
    scenename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scenename_);
  }
  ::memcpy(&sceneid_, &from.sceneid_,
    static_cast<size_t>(reinterpret_cast<char*>(&difficult_) -
    reinterpret_cast<char*>(&sceneid_)) + sizeof(difficult_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.SceneBriefMsg)
}

void SceneBriefMsg::SharedCtor() {
  scenename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sceneid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&difficult_) -
      reinterpret_cast<char*>(&sceneid_)) + sizeof(difficult_));
}

SceneBriefMsg::~SceneBriefMsg() {
  // @@protoc_insertion_point(destructor:TCCamp.SceneBriefMsg)
  SharedDtor();
}

void SceneBriefMsg::SharedDtor() {
  scenename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SceneBriefMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SceneBriefMsg::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneBriefMsg& SceneBriefMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_SceneBriefMsg.base);
  return *internal_default_instance();
}


void SceneBriefMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.SceneBriefMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scenename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sceneid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&difficult_) -
      reinterpret_cast<char*>(&sceneid_)) + sizeof(difficult_));
  _internal_metadata_.Clear();
}

bool SceneBriefMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.SceneBriefMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string SceneName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scenename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scenename().data(), static_cast<int>(this->scenename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TCCamp.SceneBriefMsg.SceneName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 SceneId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sceneid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 GargoyleCount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gargoylecount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 GhostCount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ghostcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Difficult = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &difficult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.SceneBriefMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.SceneBriefMsg)
  return false;
#undef DO_
}

void SceneBriefMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.SceneBriefMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string SceneName = 1;
  if (this->scenename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scenename().data(), static_cast<int>(this->scenename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.SceneBriefMsg.SceneName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->scenename(), output);
  }

  // int32 SceneId = 2;
  if (this->sceneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sceneid(), output);
  }

  // int32 GargoyleCount = 3;
  if (this->gargoylecount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->gargoylecount(), output);
  }

  // int32 GhostCount = 4;
  if (this->ghostcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->ghostcount(), output);
  }

  // int32 Difficult = 5;
  if (this->difficult() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->difficult(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.SceneBriefMsg)
}

::google::protobuf::uint8* SceneBriefMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.SceneBriefMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string SceneName = 1;
  if (this->scenename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scenename().data(), static_cast<int>(this->scenename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.SceneBriefMsg.SceneName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->scenename(), target);
  }

  // int32 SceneId = 2;
  if (this->sceneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sceneid(), target);
  }

  // int32 GargoyleCount = 3;
  if (this->gargoylecount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->gargoylecount(), target);
  }

  // int32 GhostCount = 4;
  if (this->ghostcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->ghostcount(), target);
  }

  // int32 Difficult = 5;
  if (this->difficult() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->difficult(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.SceneBriefMsg)
  return target;
}

size_t SceneBriefMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.SceneBriefMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string SceneName = 1;
  if (this->scenename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scenename());
  }

  // int32 SceneId = 2;
  if (this->sceneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sceneid());
  }

  // int32 GargoyleCount = 3;
  if (this->gargoylecount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gargoylecount());
  }

  // int32 GhostCount = 4;
  if (this->ghostcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ghostcount());
  }

  // int32 Difficult = 5;
  if (this->difficult() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->difficult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SceneBriefMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.SceneBriefMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneBriefMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneBriefMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.SceneBriefMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.SceneBriefMsg)
    MergeFrom(*source);
  }
}

void SceneBriefMsg::MergeFrom(const SceneBriefMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.SceneBriefMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scenename().size() > 0) {

    scenename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scenename_);
  }
  if (from.sceneid() != 0) {
    set_sceneid(from.sceneid());
  }
  if (from.gargoylecount() != 0) {
    set_gargoylecount(from.gargoylecount());
  }
  if (from.ghostcount() != 0) {
    set_ghostcount(from.ghostcount());
  }
  if (from.difficult() != 0) {
    set_difficult(from.difficult());
  }
}

void SceneBriefMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.SceneBriefMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneBriefMsg::CopyFrom(const SceneBriefMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.SceneBriefMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneBriefMsg::IsInitialized() const {
  return true;
}

void SceneBriefMsg::Swap(SceneBriefMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneBriefMsg::InternalSwap(SceneBriefMsg* other) {
  using std::swap;
  scenename_.Swap(&other->scenename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sceneid_, other->sceneid_);
  swap(gargoylecount_, other->gargoylecount_);
  swap(ghostcount_, other->ghostcount_);
  swap(difficult_, other->difficult_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SceneBriefMsg::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SceneObjectMsg::InitAsDefaultInstance() {
  ::TCCamp::_SceneObjectMsg_default_instance_._instance.get_mutable()->position_ = const_cast< ::TCCamp::Vec3Msg*>(
      ::TCCamp::Vec3Msg::internal_default_instance());
  ::TCCamp::_SceneObjectMsg_default_instance_._instance.get_mutable()->rotation_ = const_cast< ::TCCamp::Vec3Msg*>(
      ::TCCamp::Vec3Msg::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneObjectMsg::kIdFieldNumber;
const int SceneObjectMsg::kTypeFieldNumber;
const int SceneObjectMsg::kPositionFieldNumber;
const int SceneObjectMsg::kRotationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneObjectMsg::SceneObjectMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_SceneObjectMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.SceneObjectMsg)
}
SceneObjectMsg::SceneObjectMsg(const SceneObjectMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::TCCamp::Vec3Msg(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_rotation()) {
    rotation_ = new ::TCCamp::Vec3Msg(*from.rotation_);
  } else {
    rotation_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.SceneObjectMsg)
}

void SceneObjectMsg::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&position_)) + sizeof(type_));
}

SceneObjectMsg::~SceneObjectMsg() {
  // @@protoc_insertion_point(destructor:TCCamp.SceneObjectMsg)
  SharedDtor();
}

void SceneObjectMsg::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete rotation_;
}

void SceneObjectMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SceneObjectMsg::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneObjectMsg& SceneObjectMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_SceneObjectMsg.base);
  return *internal_default_instance();
}


void SceneObjectMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.SceneObjectMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  if (GetArenaNoVirtual() == NULL && rotation_ != NULL) {
    delete rotation_;
  }
  rotation_ = NULL;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool SceneObjectMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.SceneObjectMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TCCamp.SceneObjectType Type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::TCCamp::SceneObjectType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TCCamp.Vec3Msg Position = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TCCamp.Vec3Msg Rotation = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.SceneObjectMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.SceneObjectMsg)
  return false;
#undef DO_
}

void SceneObjectMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.SceneObjectMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // .TCCamp.SceneObjectType Type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // .TCCamp.Vec3Msg Position = 3;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_position(), output);
  }

  // .TCCamp.Vec3Msg Rotation = 4;
  if (this->has_rotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_rotation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.SceneObjectMsg)
}

::google::protobuf::uint8* SceneObjectMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.SceneObjectMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // .TCCamp.SceneObjectType Type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // .TCCamp.Vec3Msg Position = 3;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_position(), deterministic, target);
  }

  // .TCCamp.Vec3Msg Rotation = 4;
  if (this->has_rotation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_rotation(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.SceneObjectMsg)
  return target;
}

size_t SceneObjectMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.SceneObjectMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .TCCamp.Vec3Msg Position = 3;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .TCCamp.Vec3Msg Rotation = 4;
  if (this->has_rotation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rotation_);
  }

  // int32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // .TCCamp.SceneObjectType Type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SceneObjectMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.SceneObjectMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneObjectMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneObjectMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.SceneObjectMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.SceneObjectMsg)
    MergeFrom(*source);
  }
}

void SceneObjectMsg::MergeFrom(const SceneObjectMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.SceneObjectMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::TCCamp::Vec3Msg::MergeFrom(from.position());
  }
  if (from.has_rotation()) {
    mutable_rotation()->::TCCamp::Vec3Msg::MergeFrom(from.rotation());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void SceneObjectMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.SceneObjectMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneObjectMsg::CopyFrom(const SceneObjectMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.SceneObjectMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneObjectMsg::IsInitialized() const {
  return true;
}

void SceneObjectMsg::Swap(SceneObjectMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneObjectMsg::InternalSwap(SceneObjectMsg* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(rotation_, other->rotation_);
  swap(id_, other->id_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SceneObjectMsg::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SceneMonsterRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneMonsterRsp::kMonsterListFieldNumber;
const int SceneMonsterRsp::kNetIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneMonsterRsp::SceneMonsterRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_SceneMonsterRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.SceneMonsterRsp)
}
SceneMonsterRsp::SceneMonsterRsp(const SceneMonsterRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      monsterlist_(from.monsterlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  netid_ = from.netid_;
  // @@protoc_insertion_point(copy_constructor:TCCamp.SceneMonsterRsp)
}

void SceneMonsterRsp::SharedCtor() {
  netid_ = 0;
}

SceneMonsterRsp::~SceneMonsterRsp() {
  // @@protoc_insertion_point(destructor:TCCamp.SceneMonsterRsp)
  SharedDtor();
}

void SceneMonsterRsp::SharedDtor() {
}

void SceneMonsterRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SceneMonsterRsp::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneMonsterRsp& SceneMonsterRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_SceneMonsterRsp.base);
  return *internal_default_instance();
}


void SceneMonsterRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.SceneMonsterRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  monsterlist_.Clear();
  netid_ = 0;
  _internal_metadata_.Clear();
}

bool SceneMonsterRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.SceneMonsterRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .TCCamp.SceneObjectMsg MonsterList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_monsterlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 NetId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &netid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.SceneMonsterRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.SceneMonsterRsp)
  return false;
#undef DO_
}

void SceneMonsterRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.SceneMonsterRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TCCamp.SceneObjectMsg MonsterList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->monsterlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->monsterlist(static_cast<int>(i)),
      output);
  }

  // int32 NetId = 2;
  if (this->netid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->netid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.SceneMonsterRsp)
}

::google::protobuf::uint8* SceneMonsterRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.SceneMonsterRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TCCamp.SceneObjectMsg MonsterList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->monsterlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->monsterlist(static_cast<int>(i)), deterministic, target);
  }

  // int32 NetId = 2;
  if (this->netid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->netid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.SceneMonsterRsp)
  return target;
}

size_t SceneMonsterRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.SceneMonsterRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .TCCamp.SceneObjectMsg MonsterList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->monsterlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->monsterlist(static_cast<int>(i)));
    }
  }

  // int32 NetId = 2;
  if (this->netid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->netid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SceneMonsterRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.SceneMonsterRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneMonsterRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneMonsterRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.SceneMonsterRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.SceneMonsterRsp)
    MergeFrom(*source);
  }
}

void SceneMonsterRsp::MergeFrom(const SceneMonsterRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.SceneMonsterRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  monsterlist_.MergeFrom(from.monsterlist_);
  if (from.netid() != 0) {
    set_netid(from.netid());
  }
}

void SceneMonsterRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.SceneMonsterRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneMonsterRsp::CopyFrom(const SceneMonsterRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.SceneMonsterRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneMonsterRsp::IsInitialized() const {
  return true;
}

void SceneMonsterRsp::Swap(SceneMonsterRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneMonsterRsp::InternalSwap(SceneMonsterRsp* other) {
  using std::swap;
  CastToBase(&monsterlist_)->InternalSwap(CastToBase(&other->monsterlist_));
  swap(netid_, other->netid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SceneMonsterRsp::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SceneObjectRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneObjectRsp::kObjectListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneObjectRsp::SceneObjectRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_SceneObjectRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.SceneObjectRsp)
}
SceneObjectRsp::SceneObjectRsp(const SceneObjectRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      objectlist_(from.objectlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:TCCamp.SceneObjectRsp)
}

void SceneObjectRsp::SharedCtor() {
}

SceneObjectRsp::~SceneObjectRsp() {
  // @@protoc_insertion_point(destructor:TCCamp.SceneObjectRsp)
  SharedDtor();
}

void SceneObjectRsp::SharedDtor() {
}

void SceneObjectRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SceneObjectRsp::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneObjectRsp& SceneObjectRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_SceneObjectRsp.base);
  return *internal_default_instance();
}


void SceneObjectRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.SceneObjectRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objectlist_.Clear();
  _internal_metadata_.Clear();
}

bool SceneObjectRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.SceneObjectRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .TCCamp.SceneObjectMsg ObjectList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_objectlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.SceneObjectRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.SceneObjectRsp)
  return false;
#undef DO_
}

void SceneObjectRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.SceneObjectRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TCCamp.SceneObjectMsg ObjectList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->objectlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->objectlist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.SceneObjectRsp)
}

::google::protobuf::uint8* SceneObjectRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.SceneObjectRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TCCamp.SceneObjectMsg ObjectList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->objectlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->objectlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.SceneObjectRsp)
  return target;
}

size_t SceneObjectRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.SceneObjectRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .TCCamp.SceneObjectMsg ObjectList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->objectlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->objectlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SceneObjectRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.SceneObjectRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneObjectRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneObjectRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.SceneObjectRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.SceneObjectRsp)
    MergeFrom(*source);
  }
}

void SceneObjectRsp::MergeFrom(const SceneObjectRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.SceneObjectRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  objectlist_.MergeFrom(from.objectlist_);
}

void SceneObjectRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.SceneObjectRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneObjectRsp::CopyFrom(const SceneObjectRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.SceneObjectRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneObjectRsp::IsInitialized() const {
  return true;
}

void SceneObjectRsp::Swap(SceneObjectRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneObjectRsp::InternalSwap(SceneObjectRsp* other) {
  using std::swap;
  CastToBase(&objectlist_)->InternalSwap(CastToBase(&other->objectlist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SceneObjectRsp::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Vec3Msg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vec3Msg::kXFieldNumber;
const int Vec3Msg::kYFieldNumber;
const int Vec3Msg::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vec3Msg::Vec3Msg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_Vec3Msg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.Vec3Msg)
}
Vec3Msg::Vec3Msg(const Vec3Msg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.Vec3Msg)
}

void Vec3Msg::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

Vec3Msg::~Vec3Msg() {
  // @@protoc_insertion_point(destructor:TCCamp.Vec3Msg)
  SharedDtor();
}

void Vec3Msg::SharedDtor() {
}

void Vec3Msg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Vec3Msg::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vec3Msg& Vec3Msg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_Vec3Msg.base);
  return *internal_default_instance();
}


void Vec3Msg::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.Vec3Msg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool Vec3Msg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.Vec3Msg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.Vec3Msg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.Vec3Msg)
  return false;
#undef DO_
}

void Vec3Msg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.Vec3Msg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.Vec3Msg)
}

::google::protobuf::uint8* Vec3Msg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.Vec3Msg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.Vec3Msg)
  return target;
}

size_t Vec3Msg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.Vec3Msg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vec3Msg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.Vec3Msg)
  GOOGLE_DCHECK_NE(&from, this);
  const Vec3Msg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vec3Msg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.Vec3Msg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.Vec3Msg)
    MergeFrom(*source);
  }
}

void Vec3Msg::MergeFrom(const Vec3Msg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.Vec3Msg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void Vec3Msg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.Vec3Msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vec3Msg::CopyFrom(const Vec3Msg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.Vec3Msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vec3Msg::IsInitialized() const {
  return true;
}

void Vec3Msg::Swap(Vec3Msg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vec3Msg::InternalSwap(Vec3Msg* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Vec3Msg::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MonsterAttributeMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MonsterAttributeMsg::kTypeFieldNumber;
const int MonsterAttributeMsg::kNameFieldNumber;
const int MonsterAttributeMsg::kAttackFieldNumber;
const int MonsterAttributeMsg::kHpFieldNumber;
const int MonsterAttributeMsg::kSpeedFieldNumber;
const int MonsterAttributeMsg::kValueFieldNumber;
const int MonsterAttributeMsg::kRebornTimeFieldNumber;
const int MonsterAttributeMsg::kDetectRangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MonsterAttributeMsg::MonsterAttributeMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_MonsterAttributeMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.MonsterAttributeMsg)
}
MonsterAttributeMsg::MonsterAttributeMsg(const MonsterAttributeMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&detectrange_) -
    reinterpret_cast<char*>(&type_)) + sizeof(detectrange_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.MonsterAttributeMsg)
}

void MonsterAttributeMsg::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&detectrange_) -
      reinterpret_cast<char*>(&type_)) + sizeof(detectrange_));
}

MonsterAttributeMsg::~MonsterAttributeMsg() {
  // @@protoc_insertion_point(destructor:TCCamp.MonsterAttributeMsg)
  SharedDtor();
}

void MonsterAttributeMsg::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MonsterAttributeMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MonsterAttributeMsg::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MonsterAttributeMsg& MonsterAttributeMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_MonsterAttributeMsg.base);
  return *internal_default_instance();
}


void MonsterAttributeMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.MonsterAttributeMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&detectrange_) -
      reinterpret_cast<char*>(&type_)) + sizeof(detectrange_));
  _internal_metadata_.Clear();
}

bool MonsterAttributeMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.MonsterAttributeMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .TCCamp.SceneObjectType Type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::TCCamp::SceneObjectType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TCCamp.MonsterAttributeMsg.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Attack = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &attack_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Hp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Speed = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Value = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float RebornTime = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &reborntime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float DetectRange = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &detectrange_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.MonsterAttributeMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.MonsterAttributeMsg)
  return false;
#undef DO_
}

void MonsterAttributeMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.MonsterAttributeMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .TCCamp.SceneObjectType Type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.MonsterAttributeMsg.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // int32 Attack = 3;
  if (this->attack() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->attack(), output);
  }

  // int32 Hp = 4;
  if (this->hp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->hp(), output);
  }

  // float Speed = 5;
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->speed(), output);
  }

  // int32 Value = 6;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->value(), output);
  }

  // float RebornTime = 7;
  if (this->reborntime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->reborntime(), output);
  }

  // float DetectRange = 8;
  if (this->detectrange() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->detectrange(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.MonsterAttributeMsg)
}

::google::protobuf::uint8* MonsterAttributeMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.MonsterAttributeMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .TCCamp.SceneObjectType Type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.MonsterAttributeMsg.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // int32 Attack = 3;
  if (this->attack() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->attack(), target);
  }

  // int32 Hp = 4;
  if (this->hp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->hp(), target);
  }

  // float Speed = 5;
  if (this->speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->speed(), target);
  }

  // int32 Value = 6;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->value(), target);
  }

  // float RebornTime = 7;
  if (this->reborntime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->reborntime(), target);
  }

  // float DetectRange = 8;
  if (this->detectrange() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->detectrange(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.MonsterAttributeMsg)
  return target;
}

size_t MonsterAttributeMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.MonsterAttributeMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .TCCamp.SceneObjectType Type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // int32 Attack = 3;
  if (this->attack() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->attack());
  }

  // int32 Hp = 4;
  if (this->hp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hp());
  }

  // float Speed = 5;
  if (this->speed() != 0) {
    total_size += 1 + 4;
  }

  // int32 Value = 6;
  if (this->value() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->value());
  }

  // float RebornTime = 7;
  if (this->reborntime() != 0) {
    total_size += 1 + 4;
  }

  // float DetectRange = 8;
  if (this->detectrange() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MonsterAttributeMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.MonsterAttributeMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const MonsterAttributeMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MonsterAttributeMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.MonsterAttributeMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.MonsterAttributeMsg)
    MergeFrom(*source);
  }
}

void MonsterAttributeMsg::MergeFrom(const MonsterAttributeMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.MonsterAttributeMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.attack() != 0) {
    set_attack(from.attack());
  }
  if (from.hp() != 0) {
    set_hp(from.hp());
  }
  if (from.speed() != 0) {
    set_speed(from.speed());
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
  if (from.reborntime() != 0) {
    set_reborntime(from.reborntime());
  }
  if (from.detectrange() != 0) {
    set_detectrange(from.detectrange());
  }
}

void MonsterAttributeMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.MonsterAttributeMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MonsterAttributeMsg::CopyFrom(const MonsterAttributeMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.MonsterAttributeMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MonsterAttributeMsg::IsInitialized() const {
  return true;
}

void MonsterAttributeMsg::Swap(MonsterAttributeMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MonsterAttributeMsg::InternalSwap(MonsterAttributeMsg* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(attack_, other->attack_);
  swap(hp_, other->hp_);
  swap(speed_, other->speed_);
  swap(value_, other->value_);
  swap(reborntime_, other->reborntime_);
  swap(detectrange_, other->detectrange_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MonsterAttributeMsg::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MonsterAttributeRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MonsterAttributeRsp::kAttributeListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MonsterAttributeRsp::MonsterAttributeRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_MonsterAttributeRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.MonsterAttributeRsp)
}
MonsterAttributeRsp::MonsterAttributeRsp(const MonsterAttributeRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      attributelist_(from.attributelist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:TCCamp.MonsterAttributeRsp)
}

void MonsterAttributeRsp::SharedCtor() {
}

MonsterAttributeRsp::~MonsterAttributeRsp() {
  // @@protoc_insertion_point(destructor:TCCamp.MonsterAttributeRsp)
  SharedDtor();
}

void MonsterAttributeRsp::SharedDtor() {
}

void MonsterAttributeRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MonsterAttributeRsp::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MonsterAttributeRsp& MonsterAttributeRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_MonsterAttributeRsp.base);
  return *internal_default_instance();
}


void MonsterAttributeRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.MonsterAttributeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attributelist_.Clear();
  _internal_metadata_.Clear();
}

bool MonsterAttributeRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.MonsterAttributeRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .TCCamp.MonsterAttributeMsg AttributeList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_attributelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.MonsterAttributeRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.MonsterAttributeRsp)
  return false;
#undef DO_
}

void MonsterAttributeRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.MonsterAttributeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TCCamp.MonsterAttributeMsg AttributeList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributelist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->attributelist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.MonsterAttributeRsp)
}

::google::protobuf::uint8* MonsterAttributeRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.MonsterAttributeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TCCamp.MonsterAttributeMsg AttributeList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributelist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->attributelist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.MonsterAttributeRsp)
  return target;
}

size_t MonsterAttributeRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.MonsterAttributeRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .TCCamp.MonsterAttributeMsg AttributeList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->attributelist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->attributelist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MonsterAttributeRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.MonsterAttributeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const MonsterAttributeRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MonsterAttributeRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.MonsterAttributeRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.MonsterAttributeRsp)
    MergeFrom(*source);
  }
}

void MonsterAttributeRsp::MergeFrom(const MonsterAttributeRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.MonsterAttributeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attributelist_.MergeFrom(from.attributelist_);
}

void MonsterAttributeRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.MonsterAttributeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MonsterAttributeRsp::CopyFrom(const MonsterAttributeRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.MonsterAttributeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MonsterAttributeRsp::IsInitialized() const {
  return true;
}

void MonsterAttributeRsp::Swap(MonsterAttributeRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MonsterAttributeRsp::InternalSwap(MonsterAttributeRsp* other) {
  using std::swap;
  CastToBase(&attributelist_)->InternalSwap(CastToBase(&other->attributelist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MonsterAttributeRsp::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MonsterSynMsg::InitAsDefaultInstance() {
  ::TCCamp::_MonsterSynMsg_default_instance_._instance.get_mutable()->position_ = const_cast< ::TCCamp::Vec3Msg*>(
      ::TCCamp::Vec3Msg::internal_default_instance());
  ::TCCamp::_MonsterSynMsg_default_instance_._instance.get_mutable()->rotation_ = const_cast< ::TCCamp::Vec3Msg*>(
      ::TCCamp::Vec3Msg::internal_default_instance());
  ::TCCamp::_MonsterSynMsg_default_instance_._instance.get_mutable()->targetpos_ = const_cast< ::TCCamp::Vec3Msg*>(
      ::TCCamp::Vec3Msg::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MonsterSynMsg::kIdFieldNumber;
const int MonsterSynMsg::kHpFieldNumber;
const int MonsterSynMsg::kPositionFieldNumber;
const int MonsterSynMsg::kRotationFieldNumber;
const int MonsterSynMsg::kTargetPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MonsterSynMsg::MonsterSynMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_MonsterSynMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.MonsterSynMsg)
}
MonsterSynMsg::MonsterSynMsg(const MonsterSynMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::TCCamp::Vec3Msg(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_rotation()) {
    rotation_ = new ::TCCamp::Vec3Msg(*from.rotation_);
  } else {
    rotation_ = NULL;
  }
  if (from.has_targetpos()) {
    targetpos_ = new ::TCCamp::Vec3Msg(*from.targetpos_);
  } else {
    targetpos_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&hp_) -
    reinterpret_cast<char*>(&id_)) + sizeof(hp_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.MonsterSynMsg)
}

void MonsterSynMsg::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hp_) -
      reinterpret_cast<char*>(&position_)) + sizeof(hp_));
}

MonsterSynMsg::~MonsterSynMsg() {
  // @@protoc_insertion_point(destructor:TCCamp.MonsterSynMsg)
  SharedDtor();
}

void MonsterSynMsg::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete rotation_;
  if (this != internal_default_instance()) delete targetpos_;
}

void MonsterSynMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MonsterSynMsg::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MonsterSynMsg& MonsterSynMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_MonsterSynMsg.base);
  return *internal_default_instance();
}


void MonsterSynMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.MonsterSynMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  if (GetArenaNoVirtual() == NULL && rotation_ != NULL) {
    delete rotation_;
  }
  rotation_ = NULL;
  if (GetArenaNoVirtual() == NULL && targetpos_ != NULL) {
    delete targetpos_;
  }
  targetpos_ = NULL;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hp_) -
      reinterpret_cast<char*>(&id_)) + sizeof(hp_));
  _internal_metadata_.Clear();
}

bool MonsterSynMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.MonsterSynMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Hp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TCCamp.Vec3Msg Position = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TCCamp.Vec3Msg Rotation = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TCCamp.Vec3Msg TargetPos = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_targetpos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.MonsterSynMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.MonsterSynMsg)
  return false;
#undef DO_
}

void MonsterSynMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.MonsterSynMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // int32 Hp = 2;
  if (this->hp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->hp(), output);
  }

  // .TCCamp.Vec3Msg Position = 3;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_position(), output);
  }

  // .TCCamp.Vec3Msg Rotation = 4;
  if (this->has_rotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_rotation(), output);
  }

  // .TCCamp.Vec3Msg TargetPos = 5;
  if (this->has_targetpos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_targetpos(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.MonsterSynMsg)
}

::google::protobuf::uint8* MonsterSynMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.MonsterSynMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // int32 Hp = 2;
  if (this->hp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->hp(), target);
  }

  // .TCCamp.Vec3Msg Position = 3;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_position(), deterministic, target);
  }

  // .TCCamp.Vec3Msg Rotation = 4;
  if (this->has_rotation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_rotation(), deterministic, target);
  }

  // .TCCamp.Vec3Msg TargetPos = 5;
  if (this->has_targetpos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_targetpos(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.MonsterSynMsg)
  return target;
}

size_t MonsterSynMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.MonsterSynMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .TCCamp.Vec3Msg Position = 3;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .TCCamp.Vec3Msg Rotation = 4;
  if (this->has_rotation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rotation_);
  }

  // .TCCamp.Vec3Msg TargetPos = 5;
  if (this->has_targetpos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *targetpos_);
  }

  // int32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 Hp = 2;
  if (this->hp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MonsterSynMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.MonsterSynMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const MonsterSynMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MonsterSynMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.MonsterSynMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.MonsterSynMsg)
    MergeFrom(*source);
  }
}

void MonsterSynMsg::MergeFrom(const MonsterSynMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.MonsterSynMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::TCCamp::Vec3Msg::MergeFrom(from.position());
  }
  if (from.has_rotation()) {
    mutable_rotation()->::TCCamp::Vec3Msg::MergeFrom(from.rotation());
  }
  if (from.has_targetpos()) {
    mutable_targetpos()->::TCCamp::Vec3Msg::MergeFrom(from.targetpos());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.hp() != 0) {
    set_hp(from.hp());
  }
}

void MonsterSynMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.MonsterSynMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MonsterSynMsg::CopyFrom(const MonsterSynMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.MonsterSynMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MonsterSynMsg::IsInitialized() const {
  return true;
}

void MonsterSynMsg::Swap(MonsterSynMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MonsterSynMsg::InternalSwap(MonsterSynMsg* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(rotation_, other->rotation_);
  swap(targetpos_, other->targetpos_);
  swap(id_, other->id_);
  swap(hp_, other->hp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MonsterSynMsg::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MonstersSynMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MonstersSynMsg::kMonsterListFieldNumber;
const int MonstersSynMsg::kNetidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MonstersSynMsg::MonstersSynMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_MonstersSynMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.MonstersSynMsg)
}
MonstersSynMsg::MonstersSynMsg(const MonstersSynMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      monsterlist_(from.monsterlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  netid_ = from.netid_;
  // @@protoc_insertion_point(copy_constructor:TCCamp.MonstersSynMsg)
}

void MonstersSynMsg::SharedCtor() {
  netid_ = 0;
}

MonstersSynMsg::~MonstersSynMsg() {
  // @@protoc_insertion_point(destructor:TCCamp.MonstersSynMsg)
  SharedDtor();
}

void MonstersSynMsg::SharedDtor() {
}

void MonstersSynMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MonstersSynMsg::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MonstersSynMsg& MonstersSynMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_MonstersSynMsg.base);
  return *internal_default_instance();
}


void MonstersSynMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.MonstersSynMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  monsterlist_.Clear();
  netid_ = 0;
  _internal_metadata_.Clear();
}

bool MonstersSynMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.MonstersSynMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .TCCamp.MonsterSynMsg MonsterList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_monsterlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Netid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &netid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.MonstersSynMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.MonstersSynMsg)
  return false;
#undef DO_
}

void MonstersSynMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.MonstersSynMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TCCamp.MonsterSynMsg MonsterList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->monsterlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->monsterlist(static_cast<int>(i)),
      output);
  }

  // int32 Netid = 2;
  if (this->netid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->netid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.MonstersSynMsg)
}

::google::protobuf::uint8* MonstersSynMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.MonstersSynMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TCCamp.MonsterSynMsg MonsterList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->monsterlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->monsterlist(static_cast<int>(i)), deterministic, target);
  }

  // int32 Netid = 2;
  if (this->netid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->netid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.MonstersSynMsg)
  return target;
}

size_t MonstersSynMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.MonstersSynMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .TCCamp.MonsterSynMsg MonsterList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->monsterlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->monsterlist(static_cast<int>(i)));
    }
  }

  // int32 Netid = 2;
  if (this->netid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->netid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MonstersSynMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.MonstersSynMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const MonstersSynMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MonstersSynMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.MonstersSynMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.MonstersSynMsg)
    MergeFrom(*source);
  }
}

void MonstersSynMsg::MergeFrom(const MonstersSynMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.MonstersSynMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  monsterlist_.MergeFrom(from.monsterlist_);
  if (from.netid() != 0) {
    set_netid(from.netid());
  }
}

void MonstersSynMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.MonstersSynMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MonstersSynMsg::CopyFrom(const MonstersSynMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.MonstersSynMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MonstersSynMsg::IsInitialized() const {
  return true;
}

void MonstersSynMsg::Swap(MonstersSynMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MonstersSynMsg::InternalSwap(MonstersSynMsg* other) {
  using std::swap;
  CastToBase(&monsterlist_)->InternalSwap(CastToBase(&other->monsterlist_));
  swap(netid_, other->netid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MonstersSynMsg::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BulletSynMsg::InitAsDefaultInstance() {
  ::TCCamp::_BulletSynMsg_default_instance_._instance.get_mutable()->position_ = const_cast< ::TCCamp::Vec3Msg*>(
      ::TCCamp::Vec3Msg::internal_default_instance());
  ::TCCamp::_BulletSynMsg_default_instance_._instance.get_mutable()->rotation_ = const_cast< ::TCCamp::Vec3Msg*>(
      ::TCCamp::Vec3Msg::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BulletSynMsg::kIdFieldNumber;
const int BulletSynMsg::kPositionFieldNumber;
const int BulletSynMsg::kRotationFieldNumber;
const int BulletSynMsg::kIsActiveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BulletSynMsg::BulletSynMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_BulletSynMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.BulletSynMsg)
}
BulletSynMsg::BulletSynMsg(const BulletSynMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::TCCamp::Vec3Msg(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_rotation()) {
    rotation_ = new ::TCCamp::Vec3Msg(*from.rotation_);
  } else {
    rotation_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&isactive_) -
    reinterpret_cast<char*>(&id_)) + sizeof(isactive_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.BulletSynMsg)
}

void BulletSynMsg::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isactive_) -
      reinterpret_cast<char*>(&position_)) + sizeof(isactive_));
}

BulletSynMsg::~BulletSynMsg() {
  // @@protoc_insertion_point(destructor:TCCamp.BulletSynMsg)
  SharedDtor();
}

void BulletSynMsg::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete rotation_;
}

void BulletSynMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BulletSynMsg::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BulletSynMsg& BulletSynMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_BulletSynMsg.base);
  return *internal_default_instance();
}


void BulletSynMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.BulletSynMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  if (GetArenaNoVirtual() == NULL && rotation_ != NULL) {
    delete rotation_;
  }
  rotation_ = NULL;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&isactive_) -
      reinterpret_cast<char*>(&id_)) + sizeof(isactive_));
  _internal_metadata_.Clear();
}

bool BulletSynMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.BulletSynMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TCCamp.Vec3Msg Position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TCCamp.Vec3Msg Rotation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsActive = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isactive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.BulletSynMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.BulletSynMsg)
  return false;
#undef DO_
}

void BulletSynMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.BulletSynMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // .TCCamp.Vec3Msg Position = 2;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_position(), output);
  }

  // .TCCamp.Vec3Msg Rotation = 3;
  if (this->has_rotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_rotation(), output);
  }

  // bool IsActive = 4;
  if (this->isactive() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->isactive(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.BulletSynMsg)
}

::google::protobuf::uint8* BulletSynMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.BulletSynMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // .TCCamp.Vec3Msg Position = 2;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_position(), deterministic, target);
  }

  // .TCCamp.Vec3Msg Rotation = 3;
  if (this->has_rotation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_rotation(), deterministic, target);
  }

  // bool IsActive = 4;
  if (this->isactive() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->isactive(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.BulletSynMsg)
  return target;
}

size_t BulletSynMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.BulletSynMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .TCCamp.Vec3Msg Position = 2;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .TCCamp.Vec3Msg Rotation = 3;
  if (this->has_rotation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rotation_);
  }

  // int32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // bool IsActive = 4;
  if (this->isactive() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BulletSynMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.BulletSynMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const BulletSynMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BulletSynMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.BulletSynMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.BulletSynMsg)
    MergeFrom(*source);
  }
}

void BulletSynMsg::MergeFrom(const BulletSynMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.BulletSynMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::TCCamp::Vec3Msg::MergeFrom(from.position());
  }
  if (from.has_rotation()) {
    mutable_rotation()->::TCCamp::Vec3Msg::MergeFrom(from.rotation());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.isactive() != 0) {
    set_isactive(from.isactive());
  }
}

void BulletSynMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.BulletSynMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BulletSynMsg::CopyFrom(const BulletSynMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.BulletSynMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BulletSynMsg::IsInitialized() const {
  return true;
}

void BulletSynMsg::Swap(BulletSynMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BulletSynMsg::InternalSwap(BulletSynMsg* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(rotation_, other->rotation_);
  swap(id_, other->id_);
  swap(isactive_, other->isactive_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BulletSynMsg::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BulletsSynMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BulletsSynMsg::kBulletListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BulletsSynMsg::BulletsSynMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_BulletsSynMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.BulletsSynMsg)
}
BulletsSynMsg::BulletsSynMsg(const BulletsSynMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      bulletlist_(from.bulletlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:TCCamp.BulletsSynMsg)
}

void BulletsSynMsg::SharedCtor() {
}

BulletsSynMsg::~BulletsSynMsg() {
  // @@protoc_insertion_point(destructor:TCCamp.BulletsSynMsg)
  SharedDtor();
}

void BulletsSynMsg::SharedDtor() {
}

void BulletsSynMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BulletsSynMsg::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BulletsSynMsg& BulletsSynMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_BulletsSynMsg.base);
  return *internal_default_instance();
}


void BulletsSynMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.BulletsSynMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bulletlist_.Clear();
  _internal_metadata_.Clear();
}

bool BulletsSynMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.BulletsSynMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .TCCamp.BulletSynMsg BulletList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_bulletlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.BulletsSynMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.BulletsSynMsg)
  return false;
#undef DO_
}

void BulletsSynMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.BulletsSynMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TCCamp.BulletSynMsg BulletList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bulletlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->bulletlist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.BulletsSynMsg)
}

::google::protobuf::uint8* BulletsSynMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.BulletsSynMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TCCamp.BulletSynMsg BulletList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bulletlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->bulletlist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.BulletsSynMsg)
  return target;
}

size_t BulletsSynMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.BulletsSynMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .TCCamp.BulletSynMsg BulletList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->bulletlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->bulletlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BulletsSynMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.BulletsSynMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const BulletsSynMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BulletsSynMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.BulletsSynMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.BulletsSynMsg)
    MergeFrom(*source);
  }
}

void BulletsSynMsg::MergeFrom(const BulletsSynMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.BulletsSynMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bulletlist_.MergeFrom(from.bulletlist_);
}

void BulletsSynMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.BulletsSynMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BulletsSynMsg::CopyFrom(const BulletsSynMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.BulletsSynMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BulletsSynMsg::IsInitialized() const {
  return true;
}

void BulletsSynMsg::Swap(BulletsSynMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BulletsSynMsg::InternalSwap(BulletsSynMsg* other) {
  using std::swap;
  CastToBase(&bulletlist_)->InternalSwap(CastToBase(&other->bulletlist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BulletsSynMsg::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AttackReq::InitAsDefaultInstance() {
  ::TCCamp::_AttackReq_default_instance_._instance.get_mutable()->position_ = const_cast< ::TCCamp::Vec3Msg*>(
      ::TCCamp::Vec3Msg::internal_default_instance());
  ::TCCamp::_AttackReq_default_instance_._instance.get_mutable()->rotation_ = const_cast< ::TCCamp::Vec3Msg*>(
      ::TCCamp::Vec3Msg::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttackReq::kIdFieldNumber;
const int AttackReq::kPositionFieldNumber;
const int AttackReq::kRotationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttackReq::AttackReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_AttackReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.AttackReq)
}
AttackReq::AttackReq(const AttackReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::TCCamp::Vec3Msg(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_rotation()) {
    rotation_ = new ::TCCamp::Vec3Msg(*from.rotation_);
  } else {
    rotation_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:TCCamp.AttackReq)
}

void AttackReq::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&position_)) + sizeof(id_));
}

AttackReq::~AttackReq() {
  // @@protoc_insertion_point(destructor:TCCamp.AttackReq)
  SharedDtor();
}

void AttackReq::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete rotation_;
}

void AttackReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AttackReq::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AttackReq& AttackReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_AttackReq.base);
  return *internal_default_instance();
}


void AttackReq::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.AttackReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  if (GetArenaNoVirtual() == NULL && rotation_ != NULL) {
    delete rotation_;
  }
  rotation_ = NULL;
  id_ = 0;
  _internal_metadata_.Clear();
}

bool AttackReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.AttackReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TCCamp.Vec3Msg Position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TCCamp.Vec3Msg Rotation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.AttackReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.AttackReq)
  return false;
#undef DO_
}

void AttackReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.AttackReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // .TCCamp.Vec3Msg Position = 2;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_position(), output);
  }

  // .TCCamp.Vec3Msg Rotation = 3;
  if (this->has_rotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_rotation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.AttackReq)
}

::google::protobuf::uint8* AttackReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.AttackReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // .TCCamp.Vec3Msg Position = 2;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_position(), deterministic, target);
  }

  // .TCCamp.Vec3Msg Rotation = 3;
  if (this->has_rotation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_rotation(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.AttackReq)
  return target;
}

size_t AttackReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.AttackReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .TCCamp.Vec3Msg Position = 2;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .TCCamp.Vec3Msg Rotation = 3;
  if (this->has_rotation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rotation_);
  }

  // int32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AttackReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.AttackReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AttackReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AttackReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.AttackReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.AttackReq)
    MergeFrom(*source);
  }
}

void AttackReq::MergeFrom(const AttackReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.AttackReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::TCCamp::Vec3Msg::MergeFrom(from.position());
  }
  if (from.has_rotation()) {
    mutable_rotation()->::TCCamp::Vec3Msg::MergeFrom(from.rotation());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void AttackReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.AttackReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttackReq::CopyFrom(const AttackReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.AttackReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttackReq::IsInitialized() const {
  return true;
}

void AttackReq::Swap(AttackReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AttackReq::InternalSwap(AttackReq* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(rotation_, other->rotation_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AttackReq::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RankListMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RankListMsg::kNameFieldNumber;
const int RankListMsg::kScoreFieldNumber;
const int RankListMsg::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RankListMsg::RankListMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_RankListMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.RankListMsg)
}
RankListMsg::RankListMsg(const RankListMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&score_, &from.score_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_) -
    reinterpret_cast<char*>(&score_)) + sizeof(time_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.RankListMsg)
}

void RankListMsg::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&score_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_) -
      reinterpret_cast<char*>(&score_)) + sizeof(time_));
}

RankListMsg::~RankListMsg() {
  // @@protoc_insertion_point(destructor:TCCamp.RankListMsg)
  SharedDtor();
}

void RankListMsg::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RankListMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RankListMsg::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RankListMsg& RankListMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_RankListMsg.base);
  return *internal_default_instance();
}


void RankListMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.RankListMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&score_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_) -
      reinterpret_cast<char*>(&score_)) + sizeof(time_));
  _internal_metadata_.Clear();
}

bool RankListMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.RankListMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TCCamp.RankListMsg.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Score = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.RankListMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.RankListMsg)
  return false;
#undef DO_
}

void RankListMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.RankListMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.RankListMsg.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // int32 Score = 2;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->score(), output);
  }

  // int32 Time = 3;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.RankListMsg)
}

::google::protobuf::uint8* RankListMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.RankListMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.RankListMsg.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // int32 Score = 2;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->score(), target);
  }

  // int32 Time = 3;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.RankListMsg)
  return target;
}

size_t RankListMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.RankListMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 Score = 2;
  if (this->score() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->score());
  }

  // int32 Time = 3;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RankListMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.RankListMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const RankListMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RankListMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.RankListMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.RankListMsg)
    MergeFrom(*source);
  }
}

void RankListMsg::MergeFrom(const RankListMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.RankListMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
}

void RankListMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.RankListMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankListMsg::CopyFrom(const RankListMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.RankListMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankListMsg::IsInitialized() const {
  return true;
}

void RankListMsg::Swap(RankListMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RankListMsg::InternalSwap(RankListMsg* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(score_, other->score_);
  swap(time_, other->time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RankListMsg::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RankListReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RankListReq::kSceneIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RankListReq::RankListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_RankListReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.RankListReq)
}
RankListReq::RankListReq(const RankListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sceneid_ = from.sceneid_;
  // @@protoc_insertion_point(copy_constructor:TCCamp.RankListReq)
}

void RankListReq::SharedCtor() {
  sceneid_ = 0;
}

RankListReq::~RankListReq() {
  // @@protoc_insertion_point(destructor:TCCamp.RankListReq)
  SharedDtor();
}

void RankListReq::SharedDtor() {
}

void RankListReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RankListReq::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RankListReq& RankListReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_RankListReq.base);
  return *internal_default_instance();
}


void RankListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.RankListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sceneid_ = 0;
  _internal_metadata_.Clear();
}

bool RankListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.RankListReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 sceneId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sceneid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.RankListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.RankListReq)
  return false;
#undef DO_
}

void RankListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.RankListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sceneId = 1;
  if (this->sceneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sceneid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.RankListReq)
}

::google::protobuf::uint8* RankListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.RankListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sceneId = 1;
  if (this->sceneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sceneid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.RankListReq)
  return target;
}

size_t RankListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.RankListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 sceneId = 1;
  if (this->sceneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sceneid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RankListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.RankListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RankListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RankListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.RankListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.RankListReq)
    MergeFrom(*source);
  }
}

void RankListReq::MergeFrom(const RankListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.RankListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sceneid() != 0) {
    set_sceneid(from.sceneid());
  }
}

void RankListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.RankListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankListReq::CopyFrom(const RankListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.RankListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankListReq::IsInitialized() const {
  return true;
}

void RankListReq::Swap(RankListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RankListReq::InternalSwap(RankListReq* other) {
  using std::swap;
  swap(sceneid_, other->sceneid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RankListReq::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameTimeRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameTimeRsp::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameTimeRsp::GameTimeRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_GameTimeRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.GameTimeRsp)
}
GameTimeRsp::GameTimeRsp(const GameTimeRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:TCCamp.GameTimeRsp)
}

void GameTimeRsp::SharedCtor() {
  time_ = 0;
}

GameTimeRsp::~GameTimeRsp() {
  // @@protoc_insertion_point(destructor:TCCamp.GameTimeRsp)
  SharedDtor();
}

void GameTimeRsp::SharedDtor() {
}

void GameTimeRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GameTimeRsp::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameTimeRsp& GameTimeRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_GameTimeRsp.base);
  return *internal_default_instance();
}


void GameTimeRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.GameTimeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  time_ = 0;
  _internal_metadata_.Clear();
}

bool GameTimeRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.GameTimeRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.GameTimeRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.GameTimeRsp)
  return false;
#undef DO_
}

void GameTimeRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.GameTimeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 time = 1;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.GameTimeRsp)
}

::google::protobuf::uint8* GameTimeRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.GameTimeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 time = 1;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.GameTimeRsp)
  return target;
}

size_t GameTimeRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.GameTimeRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 time = 1;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameTimeRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.GameTimeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GameTimeRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameTimeRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.GameTimeRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.GameTimeRsp)
    MergeFrom(*source);
  }
}

void GameTimeRsp::MergeFrom(const GameTimeRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.GameTimeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.time() != 0) {
    set_time(from.time());
  }
}

void GameTimeRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.GameTimeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameTimeRsp::CopyFrom(const GameTimeRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.GameTimeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameTimeRsp::IsInitialized() const {
  return true;
}

void GameTimeRsp::Swap(GameTimeRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameTimeRsp::InternalSwap(GameTimeRsp* other) {
  using std::swap;
  swap(time_, other->time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GameTimeRsp::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RankListRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RankListRsp::kRankListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RankListRsp::RankListRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_RankListRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.RankListRsp)
}
RankListRsp::RankListRsp(const RankListRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ranklist_(from.ranklist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:TCCamp.RankListRsp)
}

void RankListRsp::SharedCtor() {
}

RankListRsp::~RankListRsp() {
  // @@protoc_insertion_point(destructor:TCCamp.RankListRsp)
  SharedDtor();
}

void RankListRsp::SharedDtor() {
}

void RankListRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RankListRsp::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RankListRsp& RankListRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_RankListRsp.base);
  return *internal_default_instance();
}


void RankListRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.RankListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ranklist_.Clear();
  _internal_metadata_.Clear();
}

bool RankListRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.RankListRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .TCCamp.RankListMsg RankList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_ranklist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.RankListRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.RankListRsp)
  return false;
#undef DO_
}

void RankListRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.RankListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TCCamp.RankListMsg RankList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ranklist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->ranklist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.RankListRsp)
}

::google::protobuf::uint8* RankListRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.RankListRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TCCamp.RankListMsg RankList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ranklist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->ranklist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.RankListRsp)
  return target;
}

size_t RankListRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.RankListRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .TCCamp.RankListMsg RankList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->ranklist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ranklist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RankListRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.RankListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RankListRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RankListRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.RankListRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.RankListRsp)
    MergeFrom(*source);
  }
}

void RankListRsp::MergeFrom(const RankListRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.RankListRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ranklist_.MergeFrom(from.ranklist_);
}

void RankListRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.RankListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankListRsp::CopyFrom(const RankListRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.RankListRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankListRsp::IsInitialized() const {
  return true;
}

void RankListRsp::Swap(RankListRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RankListRsp::InternalSwap(RankListRsp* other) {
  using std::swap;
  CastToBase(&ranklist_)->InternalSwap(CastToBase(&other->ranklist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RankListRsp::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RankListData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RankListData::kRankDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RankListData::RankListData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_RankListData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.RankListData)
}
RankListData::RankListData(const RankListData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rankdata_(from.rankdata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:TCCamp.RankListData)
}

void RankListData::SharedCtor() {
}

RankListData::~RankListData() {
  // @@protoc_insertion_point(destructor:TCCamp.RankListData)
  SharedDtor();
}

void RankListData::SharedDtor() {
}

void RankListData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RankListData::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RankListData& RankListData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_RankListData.base);
  return *internal_default_instance();
}


void RankListData::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.RankListData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rankdata_.Clear();
  _internal_metadata_.Clear();
}

bool RankListData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.RankListData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .TCCamp.RankListRsp RankData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rankdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.RankListData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.RankListData)
  return false;
#undef DO_
}

void RankListData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.RankListData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TCCamp.RankListRsp RankData = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rankdata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->rankdata(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.RankListData)
}

::google::protobuf::uint8* RankListData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.RankListData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TCCamp.RankListRsp RankData = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rankdata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->rankdata(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.RankListData)
  return target;
}

size_t RankListData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.RankListData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .TCCamp.RankListRsp RankData = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->rankdata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rankdata(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RankListData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.RankListData)
  GOOGLE_DCHECK_NE(&from, this);
  const RankListData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RankListData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.RankListData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.RankListData)
    MergeFrom(*source);
  }
}

void RankListData::MergeFrom(const RankListData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.RankListData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rankdata_.MergeFrom(from.rankdata_);
}

void RankListData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.RankListData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankListData::CopyFrom(const RankListData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.RankListData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankListData::IsInitialized() const {
  return true;
}

void RankListData::Swap(RankListData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RankListData::InternalSwap(RankListData* other) {
  using std::swap;
  CastToBase(&rankdata_)->InternalSwap(CastToBase(&other->rankdata_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RankListData::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CharacterStatueMsg::InitAsDefaultInstance() {
  ::TCCamp::_CharacterStatueMsg_default_instance_._instance.get_mutable()->position_ = const_cast< ::TCCamp::Vec3Msg*>(
      ::TCCamp::Vec3Msg::internal_default_instance());
  ::TCCamp::_CharacterStatueMsg_default_instance_._instance.get_mutable()->rotation_ = const_cast< ::TCCamp::Vec3Msg*>(
      ::TCCamp::Vec3Msg::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CharacterStatueMsg::kNetIdFieldNumber;
const int CharacterStatueMsg::kHpFieldNumber;
const int CharacterStatueMsg::kSpeedFieldNumber;
const int CharacterStatueMsg::kMaxSpeedFieldNumber;
const int CharacterStatueMsg::kPositionFieldNumber;
const int CharacterStatueMsg::kRotationFieldNumber;
const int CharacterStatueMsg::kIsDeathFieldNumber;
const int CharacterStatueMsg::kIsArmedFieldNumber;
const int CharacterStatueMsg::kIsImmunityFieldNumber;
const int CharacterStatueMsg::kActionTypeFieldNumber;
const int CharacterStatueMsg::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CharacterStatueMsg::CharacterStatueMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_CharacterStatueMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.CharacterStatueMsg)
}
CharacterStatueMsg::CharacterStatueMsg(const CharacterStatueMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::TCCamp::Vec3Msg(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_rotation()) {
    rotation_ = new ::TCCamp::Vec3Msg(*from.rotation_);
  } else {
    rotation_ = NULL;
  }
  ::memcpy(&netid_, &from.netid_,
    static_cast<size_t>(reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&netid_)) + sizeof(score_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.CharacterStatueMsg)
}

void CharacterStatueMsg::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&position_)) + sizeof(score_));
}

CharacterStatueMsg::~CharacterStatueMsg() {
  // @@protoc_insertion_point(destructor:TCCamp.CharacterStatueMsg)
  SharedDtor();
}

void CharacterStatueMsg::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete rotation_;
}

void CharacterStatueMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CharacterStatueMsg::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CharacterStatueMsg& CharacterStatueMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_CharacterStatueMsg.base);
  return *internal_default_instance();
}


void CharacterStatueMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.CharacterStatueMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  if (GetArenaNoVirtual() == NULL && rotation_ != NULL) {
    delete rotation_;
  }
  rotation_ = NULL;
  ::memset(&netid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&netid_)) + sizeof(score_));
  _internal_metadata_.Clear();
}

bool CharacterStatueMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.CharacterStatueMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 NetId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &netid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Hp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &hp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Speed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float MaxSpeed = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &maxspeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TCCamp.Vec3Msg Position = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TCCamp.Vec3Msg Rotation = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsDeath = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isdeath_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsArmed = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isarmed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsImmunity = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isimmunity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 actionType = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &actiontype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 score = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.CharacterStatueMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.CharacterStatueMsg)
  return false;
#undef DO_
}

void CharacterStatueMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.CharacterStatueMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 NetId = 1;
  if (this->netid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->netid(), output);
  }

  // int32 Hp = 2;
  if (this->hp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->hp(), output);
  }

  // float Speed = 3;
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->speed(), output);
  }

  // float MaxSpeed = 4;
  if (this->maxspeed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->maxspeed(), output);
  }

  // .TCCamp.Vec3Msg Position = 5;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_position(), output);
  }

  // .TCCamp.Vec3Msg Rotation = 6;
  if (this->has_rotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_rotation(), output);
  }

  // bool IsDeath = 7;
  if (this->isdeath() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->isdeath(), output);
  }

  // bool IsArmed = 8;
  if (this->isarmed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->isarmed(), output);
  }

  // bool IsImmunity = 9;
  if (this->isimmunity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->isimmunity(), output);
  }

  // int32 actionType = 10;
  if (this->actiontype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->actiontype(), output);
  }

  // int32 score = 11;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->score(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.CharacterStatueMsg)
}

::google::protobuf::uint8* CharacterStatueMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.CharacterStatueMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 NetId = 1;
  if (this->netid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->netid(), target);
  }

  // int32 Hp = 2;
  if (this->hp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->hp(), target);
  }

  // float Speed = 3;
  if (this->speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->speed(), target);
  }

  // float MaxSpeed = 4;
  if (this->maxspeed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->maxspeed(), target);
  }

  // .TCCamp.Vec3Msg Position = 5;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_position(), deterministic, target);
  }

  // .TCCamp.Vec3Msg Rotation = 6;
  if (this->has_rotation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_rotation(), deterministic, target);
  }

  // bool IsDeath = 7;
  if (this->isdeath() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->isdeath(), target);
  }

  // bool IsArmed = 8;
  if (this->isarmed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->isarmed(), target);
  }

  // bool IsImmunity = 9;
  if (this->isimmunity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->isimmunity(), target);
  }

  // int32 actionType = 10;
  if (this->actiontype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->actiontype(), target);
  }

  // int32 score = 11;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->score(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.CharacterStatueMsg)
  return target;
}

size_t CharacterStatueMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.CharacterStatueMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .TCCamp.Vec3Msg Position = 5;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .TCCamp.Vec3Msg Rotation = 6;
  if (this->has_rotation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rotation_);
  }

  // int32 NetId = 1;
  if (this->netid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->netid());
  }

  // int32 Hp = 2;
  if (this->hp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->hp());
  }

  // float Speed = 3;
  if (this->speed() != 0) {
    total_size += 1 + 4;
  }

  // float MaxSpeed = 4;
  if (this->maxspeed() != 0) {
    total_size += 1 + 4;
  }

  // bool IsDeath = 7;
  if (this->isdeath() != 0) {
    total_size += 1 + 1;
  }

  // bool IsArmed = 8;
  if (this->isarmed() != 0) {
    total_size += 1 + 1;
  }

  // bool IsImmunity = 9;
  if (this->isimmunity() != 0) {
    total_size += 1 + 1;
  }

  // int32 actionType = 10;
  if (this->actiontype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->actiontype());
  }

  // int32 score = 11;
  if (this->score() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->score());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CharacterStatueMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.CharacterStatueMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const CharacterStatueMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CharacterStatueMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.CharacterStatueMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.CharacterStatueMsg)
    MergeFrom(*source);
  }
}

void CharacterStatueMsg::MergeFrom(const CharacterStatueMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.CharacterStatueMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::TCCamp::Vec3Msg::MergeFrom(from.position());
  }
  if (from.has_rotation()) {
    mutable_rotation()->::TCCamp::Vec3Msg::MergeFrom(from.rotation());
  }
  if (from.netid() != 0) {
    set_netid(from.netid());
  }
  if (from.hp() != 0) {
    set_hp(from.hp());
  }
  if (from.speed() != 0) {
    set_speed(from.speed());
  }
  if (from.maxspeed() != 0) {
    set_maxspeed(from.maxspeed());
  }
  if (from.isdeath() != 0) {
    set_isdeath(from.isdeath());
  }
  if (from.isarmed() != 0) {
    set_isarmed(from.isarmed());
  }
  if (from.isimmunity() != 0) {
    set_isimmunity(from.isimmunity());
  }
  if (from.actiontype() != 0) {
    set_actiontype(from.actiontype());
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
}

void CharacterStatueMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.CharacterStatueMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CharacterStatueMsg::CopyFrom(const CharacterStatueMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.CharacterStatueMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterStatueMsg::IsInitialized() const {
  return true;
}

void CharacterStatueMsg::Swap(CharacterStatueMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CharacterStatueMsg::InternalSwap(CharacterStatueMsg* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(rotation_, other->rotation_);
  swap(netid_, other->netid_);
  swap(hp_, other->hp_);
  swap(speed_, other->speed_);
  swap(maxspeed_, other->maxspeed_);
  swap(isdeath_, other->isdeath_);
  swap(isarmed_, other->isarmed_);
  swap(isimmunity_, other->isimmunity_);
  swap(actiontype_, other->actiontype_);
  swap(score_, other->score_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CharacterStatueMsg::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CharacterStatueReq::InitAsDefaultInstance() {
  ::TCCamp::_CharacterStatueReq_default_instance_._instance.get_mutable()->position_ = const_cast< ::TCCamp::Vec3Msg*>(
      ::TCCamp::Vec3Msg::internal_default_instance());
  ::TCCamp::_CharacterStatueReq_default_instance_._instance.get_mutable()->rotation_ = const_cast< ::TCCamp::Vec3Msg*>(
      ::TCCamp::Vec3Msg::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CharacterStatueReq::kNetIdFieldNumber;
const int CharacterStatueReq::kSpeedFieldNumber;
const int CharacterStatueReq::kPositionFieldNumber;
const int CharacterStatueReq::kRotationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CharacterStatueReq::CharacterStatueReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_CharacterStatueReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.CharacterStatueReq)
}
CharacterStatueReq::CharacterStatueReq(const CharacterStatueReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::TCCamp::Vec3Msg(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_rotation()) {
    rotation_ = new ::TCCamp::Vec3Msg(*from.rotation_);
  } else {
    rotation_ = NULL;
  }
  ::memcpy(&netid_, &from.netid_,
    static_cast<size_t>(reinterpret_cast<char*>(&speed_) -
    reinterpret_cast<char*>(&netid_)) + sizeof(speed_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.CharacterStatueReq)
}

void CharacterStatueReq::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speed_) -
      reinterpret_cast<char*>(&position_)) + sizeof(speed_));
}

CharacterStatueReq::~CharacterStatueReq() {
  // @@protoc_insertion_point(destructor:TCCamp.CharacterStatueReq)
  SharedDtor();
}

void CharacterStatueReq::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete rotation_;
}

void CharacterStatueReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CharacterStatueReq::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CharacterStatueReq& CharacterStatueReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_CharacterStatueReq.base);
  return *internal_default_instance();
}


void CharacterStatueReq::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.CharacterStatueReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  if (GetArenaNoVirtual() == NULL && rotation_ != NULL) {
    delete rotation_;
  }
  rotation_ = NULL;
  ::memset(&netid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speed_) -
      reinterpret_cast<char*>(&netid_)) + sizeof(speed_));
  _internal_metadata_.Clear();
}

bool CharacterStatueReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.CharacterStatueReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 NetId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &netid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float Speed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TCCamp.Vec3Msg Position = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TCCamp.Vec3Msg Rotation = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rotation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.CharacterStatueReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.CharacterStatueReq)
  return false;
#undef DO_
}

void CharacterStatueReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.CharacterStatueReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 NetId = 1;
  if (this->netid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->netid(), output);
  }

  // float Speed = 2;
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->speed(), output);
  }

  // .TCCamp.Vec3Msg Position = 3;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_position(), output);
  }

  // .TCCamp.Vec3Msg Rotation = 4;
  if (this->has_rotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_rotation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.CharacterStatueReq)
}

::google::protobuf::uint8* CharacterStatueReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.CharacterStatueReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 NetId = 1;
  if (this->netid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->netid(), target);
  }

  // float Speed = 2;
  if (this->speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->speed(), target);
  }

  // .TCCamp.Vec3Msg Position = 3;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_position(), deterministic, target);
  }

  // .TCCamp.Vec3Msg Rotation = 4;
  if (this->has_rotation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_rotation(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.CharacterStatueReq)
  return target;
}

size_t CharacterStatueReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.CharacterStatueReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .TCCamp.Vec3Msg Position = 3;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *position_);
  }

  // .TCCamp.Vec3Msg Rotation = 4;
  if (this->has_rotation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *rotation_);
  }

  // int32 NetId = 1;
  if (this->netid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->netid());
  }

  // float Speed = 2;
  if (this->speed() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CharacterStatueReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.CharacterStatueReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CharacterStatueReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CharacterStatueReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.CharacterStatueReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.CharacterStatueReq)
    MergeFrom(*source);
  }
}

void CharacterStatueReq::MergeFrom(const CharacterStatueReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.CharacterStatueReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::TCCamp::Vec3Msg::MergeFrom(from.position());
  }
  if (from.has_rotation()) {
    mutable_rotation()->::TCCamp::Vec3Msg::MergeFrom(from.rotation());
  }
  if (from.netid() != 0) {
    set_netid(from.netid());
  }
  if (from.speed() != 0) {
    set_speed(from.speed());
  }
}

void CharacterStatueReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.CharacterStatueReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CharacterStatueReq::CopyFrom(const CharacterStatueReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.CharacterStatueReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterStatueReq::IsInitialized() const {
  return true;
}

void CharacterStatueReq::Swap(CharacterStatueReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CharacterStatueReq::InternalSwap(CharacterStatueReq* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(rotation_, other->rotation_);
  swap(netid_, other->netid_);
  swap(speed_, other->speed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CharacterStatueReq::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CharacterAnimSynMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CharacterAnimSynMsg::kAnimtTypeFieldNumber;
const int CharacterAnimSynMsg::kNetIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CharacterAnimSynMsg::CharacterAnimSynMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_CharacterAnimSynMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.CharacterAnimSynMsg)
}
CharacterAnimSynMsg::CharacterAnimSynMsg(const CharacterAnimSynMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&animttype_, &from.animttype_,
    static_cast<size_t>(reinterpret_cast<char*>(&netid_) -
    reinterpret_cast<char*>(&animttype_)) + sizeof(netid_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.CharacterAnimSynMsg)
}

void CharacterAnimSynMsg::SharedCtor() {
  ::memset(&animttype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&netid_) -
      reinterpret_cast<char*>(&animttype_)) + sizeof(netid_));
}

CharacterAnimSynMsg::~CharacterAnimSynMsg() {
  // @@protoc_insertion_point(destructor:TCCamp.CharacterAnimSynMsg)
  SharedDtor();
}

void CharacterAnimSynMsg::SharedDtor() {
}

void CharacterAnimSynMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CharacterAnimSynMsg::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CharacterAnimSynMsg& CharacterAnimSynMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_CharacterAnimSynMsg.base);
  return *internal_default_instance();
}


void CharacterAnimSynMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.CharacterAnimSynMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&animttype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&netid_) -
      reinterpret_cast<char*>(&animttype_)) + sizeof(netid_));
  _internal_metadata_.Clear();
}

bool CharacterAnimSynMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.CharacterAnimSynMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .TCCamp.CharacterAnimType AnimtType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_animttype(static_cast< ::TCCamp::CharacterAnimType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 NetId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &netid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.CharacterAnimSynMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.CharacterAnimSynMsg)
  return false;
#undef DO_
}

void CharacterAnimSynMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.CharacterAnimSynMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .TCCamp.CharacterAnimType AnimtType = 1;
  if (this->animttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->animttype(), output);
  }

  // int32 NetId = 2;
  if (this->netid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->netid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.CharacterAnimSynMsg)
}

::google::protobuf::uint8* CharacterAnimSynMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.CharacterAnimSynMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .TCCamp.CharacterAnimType AnimtType = 1;
  if (this->animttype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->animttype(), target);
  }

  // int32 NetId = 2;
  if (this->netid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->netid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.CharacterAnimSynMsg)
  return target;
}

size_t CharacterAnimSynMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.CharacterAnimSynMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .TCCamp.CharacterAnimType AnimtType = 1;
  if (this->animttype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->animttype());
  }

  // int32 NetId = 2;
  if (this->netid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->netid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CharacterAnimSynMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.CharacterAnimSynMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const CharacterAnimSynMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CharacterAnimSynMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.CharacterAnimSynMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.CharacterAnimSynMsg)
    MergeFrom(*source);
  }
}

void CharacterAnimSynMsg::MergeFrom(const CharacterAnimSynMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.CharacterAnimSynMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.animttype() != 0) {
    set_animttype(from.animttype());
  }
  if (from.netid() != 0) {
    set_netid(from.netid());
  }
}

void CharacterAnimSynMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.CharacterAnimSynMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CharacterAnimSynMsg::CopyFrom(const CharacterAnimSynMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.CharacterAnimSynMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CharacterAnimSynMsg::IsInitialized() const {
  return true;
}

void CharacterAnimSynMsg::Swap(CharacterAnimSynMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CharacterAnimSynMsg::InternalSwap(CharacterAnimSynMsg* other) {
  using std::swap;
  swap(animttype_, other->animttype_);
  swap(netid_, other->netid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CharacterAnimSynMsg::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NetAsyncMsg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NetAsyncMsg::kCharacterStatueListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NetAsyncMsg::NetAsyncMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_NetAsyncMsg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.NetAsyncMsg)
}
NetAsyncMsg::NetAsyncMsg(const NetAsyncMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      characterstatuelist_(from.characterstatuelist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:TCCamp.NetAsyncMsg)
}

void NetAsyncMsg::SharedCtor() {
}

NetAsyncMsg::~NetAsyncMsg() {
  // @@protoc_insertion_point(destructor:TCCamp.NetAsyncMsg)
  SharedDtor();
}

void NetAsyncMsg::SharedDtor() {
}

void NetAsyncMsg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NetAsyncMsg::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NetAsyncMsg& NetAsyncMsg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_NetAsyncMsg.base);
  return *internal_default_instance();
}


void NetAsyncMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.NetAsyncMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  characterstatuelist_.Clear();
  _internal_metadata_.Clear();
}

bool NetAsyncMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.NetAsyncMsg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .TCCamp.CharacterStatueMsg CharacterStatueList = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_characterstatuelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.NetAsyncMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.NetAsyncMsg)
  return false;
#undef DO_
}

void NetAsyncMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.NetAsyncMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TCCamp.CharacterStatueMsg CharacterStatueList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->characterstatuelist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->characterstatuelist(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.NetAsyncMsg)
}

::google::protobuf::uint8* NetAsyncMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.NetAsyncMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TCCamp.CharacterStatueMsg CharacterStatueList = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->characterstatuelist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->characterstatuelist(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.NetAsyncMsg)
  return target;
}

size_t NetAsyncMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.NetAsyncMsg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .TCCamp.CharacterStatueMsg CharacterStatueList = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->characterstatuelist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->characterstatuelist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NetAsyncMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.NetAsyncMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const NetAsyncMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NetAsyncMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.NetAsyncMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.NetAsyncMsg)
    MergeFrom(*source);
  }
}

void NetAsyncMsg::MergeFrom(const NetAsyncMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.NetAsyncMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  characterstatuelist_.MergeFrom(from.characterstatuelist_);
}

void NetAsyncMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.NetAsyncMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NetAsyncMsg::CopyFrom(const NetAsyncMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.NetAsyncMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetAsyncMsg::IsInitialized() const {
  return true;
}

void NetAsyncMsg::Swap(NetAsyncMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NetAsyncMsg::InternalSwap(NetAsyncMsg* other) {
  using std::swap;
  CastToBase(&characterstatuelist_)->InternalSwap(CastToBase(&other->characterstatuelist_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NetAsyncMsg::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemoveCharacterRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveCharacterRsp::kNetIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveCharacterRsp::RemoveCharacterRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_RemoveCharacterRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.RemoveCharacterRsp)
}
RemoveCharacterRsp::RemoveCharacterRsp(const RemoveCharacterRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  netid_ = from.netid_;
  // @@protoc_insertion_point(copy_constructor:TCCamp.RemoveCharacterRsp)
}

void RemoveCharacterRsp::SharedCtor() {
  netid_ = 0;
}

RemoveCharacterRsp::~RemoveCharacterRsp() {
  // @@protoc_insertion_point(destructor:TCCamp.RemoveCharacterRsp)
  SharedDtor();
}

void RemoveCharacterRsp::SharedDtor() {
}

void RemoveCharacterRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RemoveCharacterRsp::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoveCharacterRsp& RemoveCharacterRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_RemoveCharacterRsp.base);
  return *internal_default_instance();
}


void RemoveCharacterRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.RemoveCharacterRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  netid_ = 0;
  _internal_metadata_.Clear();
}

bool RemoveCharacterRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.RemoveCharacterRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 NetId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &netid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.RemoveCharacterRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.RemoveCharacterRsp)
  return false;
#undef DO_
}

void RemoveCharacterRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.RemoveCharacterRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 NetId = 1;
  if (this->netid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->netid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.RemoveCharacterRsp)
}

::google::protobuf::uint8* RemoveCharacterRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.RemoveCharacterRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 NetId = 1;
  if (this->netid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->netid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.RemoveCharacterRsp)
  return target;
}

size_t RemoveCharacterRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.RemoveCharacterRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 NetId = 1;
  if (this->netid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->netid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveCharacterRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.RemoveCharacterRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveCharacterRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveCharacterRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.RemoveCharacterRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.RemoveCharacterRsp)
    MergeFrom(*source);
  }
}

void RemoveCharacterRsp::MergeFrom(const RemoveCharacterRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.RemoveCharacterRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.netid() != 0) {
    set_netid(from.netid());
  }
}

void RemoveCharacterRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.RemoveCharacterRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveCharacterRsp::CopyFrom(const RemoveCharacterRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.RemoveCharacterRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveCharacterRsp::IsInitialized() const {
  return true;
}

void RemoveCharacterRsp::Swap(RemoveCharacterRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveCharacterRsp::InternalSwap(RemoveCharacterRsp* other) {
  using std::swap;
  swap(netid_, other->netid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RemoveCharacterRsp::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ScoreRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScoreRsp::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScoreRsp::ScoreRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_ScoreRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.ScoreRsp)
}
ScoreRsp::ScoreRsp(const ScoreRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  score_ = from.score_;
  // @@protoc_insertion_point(copy_constructor:TCCamp.ScoreRsp)
}

void ScoreRsp::SharedCtor() {
  score_ = 0;
}

ScoreRsp::~ScoreRsp() {
  // @@protoc_insertion_point(destructor:TCCamp.ScoreRsp)
  SharedDtor();
}

void ScoreRsp::SharedDtor() {
}

void ScoreRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ScoreRsp::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScoreRsp& ScoreRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_ScoreRsp.base);
  return *internal_default_instance();
}


void ScoreRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.ScoreRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  score_ = 0;
  _internal_metadata_.Clear();
}

bool ScoreRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.ScoreRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Score = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.ScoreRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.ScoreRsp)
  return false;
#undef DO_
}

void ScoreRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.ScoreRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Score = 1;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->score(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.ScoreRsp)
}

::google::protobuf::uint8* ScoreRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.ScoreRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Score = 1;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->score(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.ScoreRsp)
  return target;
}

size_t ScoreRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.ScoreRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 Score = 1;
  if (this->score() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->score());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScoreRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.ScoreRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ScoreRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScoreRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.ScoreRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.ScoreRsp)
    MergeFrom(*source);
  }
}

void ScoreRsp::MergeFrom(const ScoreRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.ScoreRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.score() != 0) {
    set_score(from.score());
  }
}

void ScoreRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.ScoreRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScoreRsp::CopyFrom(const ScoreRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.ScoreRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScoreRsp::IsInitialized() const {
  return true;
}

void ScoreRsp::Swap(ScoreRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScoreRsp::InternalSwap(ScoreRsp* other) {
  using std::swap;
  swap(score_, other->score_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ScoreRsp::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameResultRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameResultRsp::kScoreFieldNumber;
const int GameResultRsp::kRoomRankFieldNumber;
const int GameResultRsp::kGameTimeFieldNumber;
const int GameResultRsp::kSuccessFieldNumber;
const int GameResultRsp::kIsFinishedFieldNumber;
const int GameResultRsp::kBeatCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameResultRsp::GameResultRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_GameResultRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.GameResultRsp)
}
GameResultRsp::GameResultRsp(const GameResultRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&score_, &from.score_,
    static_cast<size_t>(reinterpret_cast<char*>(&beatcount_) -
    reinterpret_cast<char*>(&score_)) + sizeof(beatcount_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.GameResultRsp)
}

void GameResultRsp::SharedCtor() {
  ::memset(&score_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&beatcount_) -
      reinterpret_cast<char*>(&score_)) + sizeof(beatcount_));
}

GameResultRsp::~GameResultRsp() {
  // @@protoc_insertion_point(destructor:TCCamp.GameResultRsp)
  SharedDtor();
}

void GameResultRsp::SharedDtor() {
}

void GameResultRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GameResultRsp::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameResultRsp& GameResultRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_GameResultRsp.base);
  return *internal_default_instance();
}


void GameResultRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.GameResultRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&score_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&beatcount_) -
      reinterpret_cast<char*>(&score_)) + sizeof(beatcount_));
  _internal_metadata_.Clear();
}

bool GameResultRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.GameResultRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Score = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 RoomRank = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomrank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 GameTime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gametime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool Success = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool IsFinished = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isfinished_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 BeatCount = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &beatcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.GameResultRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.GameResultRsp)
  return false;
#undef DO_
}

void GameResultRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.GameResultRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Score = 1;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->score(), output);
  }

  // int32 RoomRank = 2;
  if (this->roomrank() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->roomrank(), output);
  }

  // int32 GameTime = 3;
  if (this->gametime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->gametime(), output);
  }

  // bool Success = 4;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->success(), output);
  }

  // bool IsFinished = 5;
  if (this->isfinished() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->isfinished(), output);
  }

  // int32 BeatCount = 6;
  if (this->beatcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->beatcount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.GameResultRsp)
}

::google::protobuf::uint8* GameResultRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.GameResultRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Score = 1;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->score(), target);
  }

  // int32 RoomRank = 2;
  if (this->roomrank() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->roomrank(), target);
  }

  // int32 GameTime = 3;
  if (this->gametime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->gametime(), target);
  }

  // bool Success = 4;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->success(), target);
  }

  // bool IsFinished = 5;
  if (this->isfinished() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->isfinished(), target);
  }

  // int32 BeatCount = 6;
  if (this->beatcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->beatcount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.GameResultRsp)
  return target;
}

size_t GameResultRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.GameResultRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 Score = 1;
  if (this->score() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->score());
  }

  // int32 RoomRank = 2;
  if (this->roomrank() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roomrank());
  }

  // int32 GameTime = 3;
  if (this->gametime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gametime());
  }

  // bool Success = 4;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  // bool IsFinished = 5;
  if (this->isfinished() != 0) {
    total_size += 1 + 1;
  }

  // int32 BeatCount = 6;
  if (this->beatcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->beatcount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameResultRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.GameResultRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GameResultRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameResultRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.GameResultRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.GameResultRsp)
    MergeFrom(*source);
  }
}

void GameResultRsp::MergeFrom(const GameResultRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.GameResultRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.score() != 0) {
    set_score(from.score());
  }
  if (from.roomrank() != 0) {
    set_roomrank(from.roomrank());
  }
  if (from.gametime() != 0) {
    set_gametime(from.gametime());
  }
  if (from.success() != 0) {
    set_success(from.success());
  }
  if (from.isfinished() != 0) {
    set_isfinished(from.isfinished());
  }
  if (from.beatcount() != 0) {
    set_beatcount(from.beatcount());
  }
}

void GameResultRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.GameResultRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameResultRsp::CopyFrom(const GameResultRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.GameResultRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameResultRsp::IsInitialized() const {
  return true;
}

void GameResultRsp::Swap(GameResultRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameResultRsp::InternalSwap(GameResultRsp* other) {
  using std::swap;
  swap(score_, other->score_);
  swap(roomrank_, other->roomrank_);
  swap(gametime_, other->gametime_);
  swap(success_, other->success_);
  swap(isfinished_, other->isfinished_);
  swap(beatcount_, other->beatcount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GameResultRsp::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameContinueRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameContinueRsp::kNeedContinueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameContinueRsp::GameContinueRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_GameContinueRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.GameContinueRsp)
}
GameContinueRsp::GameContinueRsp(const GameContinueRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  needcontinue_ = from.needcontinue_;
  // @@protoc_insertion_point(copy_constructor:TCCamp.GameContinueRsp)
}

void GameContinueRsp::SharedCtor() {
  needcontinue_ = false;
}

GameContinueRsp::~GameContinueRsp() {
  // @@protoc_insertion_point(destructor:TCCamp.GameContinueRsp)
  SharedDtor();
}

void GameContinueRsp::SharedDtor() {
}

void GameContinueRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GameContinueRsp::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameContinueRsp& GameContinueRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_GameContinueRsp.base);
  return *internal_default_instance();
}


void GameContinueRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.GameContinueRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  needcontinue_ = false;
  _internal_metadata_.Clear();
}

bool GameContinueRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.GameContinueRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool needContinue = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &needcontinue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.GameContinueRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.GameContinueRsp)
  return false;
#undef DO_
}

void GameContinueRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.GameContinueRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool needContinue = 1;
  if (this->needcontinue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->needcontinue(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.GameContinueRsp)
}

::google::protobuf::uint8* GameContinueRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.GameContinueRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool needContinue = 1;
  if (this->needcontinue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->needcontinue(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.GameContinueRsp)
  return target;
}

size_t GameContinueRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.GameContinueRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool needContinue = 1;
  if (this->needcontinue() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameContinueRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.GameContinueRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const GameContinueRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameContinueRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.GameContinueRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.GameContinueRsp)
    MergeFrom(*source);
  }
}

void GameContinueRsp::MergeFrom(const GameContinueRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.GameContinueRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.needcontinue() != 0) {
    set_needcontinue(from.needcontinue());
  }
}

void GameContinueRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.GameContinueRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameContinueRsp::CopyFrom(const GameContinueRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.GameContinueRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameContinueRsp::IsInitialized() const {
  return true;
}

void GameContinueRsp::Swap(GameContinueRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameContinueRsp::InternalSwap(GameContinueRsp* other) {
  using std::swap;
  swap(needcontinue_, other->needcontinue_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GameContinueRsp::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ItemConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemConfig::kIdFieldNumber;
const int ItemConfig::kNameFieldNumber;
const int ItemConfig::kIntroduceFieldNumber;
const int ItemConfig::kPriceFieldNumber;
const int ItemConfig::kIconNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemConfig::ItemConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_ItemConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.ItemConfig)
}
ItemConfig::ItemConfig(const ItemConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  introduce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.introduce().size() > 0) {
    introduce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.introduce_);
  }
  iconname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.iconname().size() > 0) {
    iconname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iconname_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&price_) -
    reinterpret_cast<char*>(&id_)) + sizeof(price_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.ItemConfig)
}

void ItemConfig::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  introduce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iconname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&price_) -
      reinterpret_cast<char*>(&id_)) + sizeof(price_));
}

ItemConfig::~ItemConfig() {
  // @@protoc_insertion_point(destructor:TCCamp.ItemConfig)
  SharedDtor();
}

void ItemConfig::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  introduce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iconname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ItemConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ItemConfig::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ItemConfig& ItemConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_ItemConfig.base);
  return *internal_default_instance();
}


void ItemConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.ItemConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  introduce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iconname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&price_) -
      reinterpret_cast<char*>(&id_)) + sizeof(price_));
  _internal_metadata_.Clear();
}

bool ItemConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.ItemConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TCCamp.ItemConfig.Name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Introduce = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_introduce()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->introduce().data(), static_cast<int>(this->introduce().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TCCamp.ItemConfig.Introduce"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Price = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string IconName = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_iconname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->iconname().data(), static_cast<int>(this->iconname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TCCamp.ItemConfig.IconName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.ItemConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.ItemConfig)
  return false;
#undef DO_
}

void ItemConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.ItemConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.ItemConfig.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string Introduce = 3;
  if (this->introduce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->introduce().data(), static_cast<int>(this->introduce().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.ItemConfig.Introduce");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->introduce(), output);
  }

  // int32 Price = 4;
  if (this->price() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->price(), output);
  }

  // string IconName = 5;
  if (this->iconname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->iconname().data(), static_cast<int>(this->iconname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.ItemConfig.IconName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->iconname(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.ItemConfig)
}

::google::protobuf::uint8* ItemConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.ItemConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.ItemConfig.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string Introduce = 3;
  if (this->introduce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->introduce().data(), static_cast<int>(this->introduce().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.ItemConfig.Introduce");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->introduce(), target);
  }

  // int32 Price = 4;
  if (this->price() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->price(), target);
  }

  // string IconName = 5;
  if (this->iconname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->iconname().data(), static_cast<int>(this->iconname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.ItemConfig.IconName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->iconname(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.ItemConfig)
  return target;
}

size_t ItemConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.ItemConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string Introduce = 3;
  if (this->introduce().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->introduce());
  }

  // string IconName = 5;
  if (this->iconname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->iconname());
  }

  // int32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 Price = 4;
  if (this->price() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->price());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ItemConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.ItemConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ItemConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.ItemConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.ItemConfig)
    MergeFrom(*source);
  }
}

void ItemConfig::MergeFrom(const ItemConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.ItemConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.introduce().size() > 0) {

    introduce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.introduce_);
  }
  if (from.iconname().size() > 0) {

    iconname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iconname_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.price() != 0) {
    set_price(from.price());
  }
}

void ItemConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.ItemConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemConfig::CopyFrom(const ItemConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.ItemConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemConfig::IsInitialized() const {
  return true;
}

void ItemConfig::Swap(ItemConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemConfig::InternalSwap(ItemConfig* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  introduce_.Swap(&other->introduce_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  iconname_.Swap(&other->iconname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(price_, other->price_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ItemConfig::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ItemConfigs::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemConfigs::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemConfigs::ItemConfigs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_ItemConfigs.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.ItemConfigs)
}
ItemConfigs::ItemConfigs(const ItemConfigs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      item_(from.item_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:TCCamp.ItemConfigs)
}

void ItemConfigs::SharedCtor() {
}

ItemConfigs::~ItemConfigs() {
  // @@protoc_insertion_point(destructor:TCCamp.ItemConfigs)
  SharedDtor();
}

void ItemConfigs::SharedDtor() {
}

void ItemConfigs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ItemConfigs::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ItemConfigs& ItemConfigs::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_ItemConfigs.base);
  return *internal_default_instance();
}


void ItemConfigs::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.ItemConfigs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_.Clear();
  _internal_metadata_.Clear();
}

bool ItemConfigs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.ItemConfigs)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .TCCamp.ItemConfig Item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.ItemConfigs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.ItemConfigs)
  return false;
#undef DO_
}

void ItemConfigs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.ItemConfigs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TCCamp.ItemConfig Item = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->item(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.ItemConfigs)
}

::google::protobuf::uint8* ItemConfigs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.ItemConfigs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TCCamp.ItemConfig Item = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->item(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.ItemConfigs)
  return target;
}

size_t ItemConfigs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.ItemConfigs)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .TCCamp.ItemConfig Item = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->item_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->item(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ItemConfigs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.ItemConfigs)
  GOOGLE_DCHECK_NE(&from, this);
  const ItemConfigs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemConfigs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.ItemConfigs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.ItemConfigs)
    MergeFrom(*source);
  }
}

void ItemConfigs::MergeFrom(const ItemConfigs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.ItemConfigs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_.MergeFrom(from.item_);
}

void ItemConfigs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.ItemConfigs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemConfigs::CopyFrom(const ItemConfigs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.ItemConfigs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemConfigs::IsInitialized() const {
  return true;
}

void ItemConfigs::Swap(ItemConfigs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemConfigs::InternalSwap(ItemConfigs* other) {
  using std::swap;
  CastToBase(&item_)->InternalSwap(CastToBase(&other->item_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ItemConfigs::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ItemInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemInfo::kIdFieldNumber;
const int ItemInfo::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemInfo::ItemInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_ItemInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.ItemInfo)
}
ItemInfo::ItemInfo(const ItemInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&id_)) + sizeof(num_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.ItemInfo)
}

void ItemInfo::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&id_)) + sizeof(num_));
}

ItemInfo::~ItemInfo() {
  // @@protoc_insertion_point(destructor:TCCamp.ItemInfo)
  SharedDtor();
}

void ItemInfo::SharedDtor() {
}

void ItemInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ItemInfo::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ItemInfo& ItemInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_ItemInfo.base);
  return *internal_default_instance();
}


void ItemInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.ItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&id_)) + sizeof(num_));
  _internal_metadata_.Clear();
}

bool ItemInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.ItemInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.ItemInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.ItemInfo)
  return false;
#undef DO_
}

void ItemInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.ItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // int32 Num = 2;
  if (this->num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.ItemInfo)
}

::google::protobuf::uint8* ItemInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.ItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // int32 Num = 2;
  if (this->num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.ItemInfo)
  return target;
}

size_t ItemInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.ItemInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 Num = 2;
  if (this->num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ItemInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.ItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ItemInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.ItemInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.ItemInfo)
    MergeFrom(*source);
  }
}

void ItemInfo::MergeFrom(const ItemInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.ItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.num() != 0) {
    set_num(from.num());
  }
}

void ItemInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.ItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemInfo::CopyFrom(const ItemInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.ItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemInfo::IsInitialized() const {
  return true;
}

void ItemInfo::Swap(ItemInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemInfo::InternalSwap(ItemInfo* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(num_, other->num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ItemInfo::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ShopItemRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShopItemRsp::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShopItemRsp::ShopItemRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_ShopItemRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.ShopItemRsp)
}
ShopItemRsp::ShopItemRsp(const ShopItemRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      item_(from.item_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:TCCamp.ShopItemRsp)
}

void ShopItemRsp::SharedCtor() {
}

ShopItemRsp::~ShopItemRsp() {
  // @@protoc_insertion_point(destructor:TCCamp.ShopItemRsp)
  SharedDtor();
}

void ShopItemRsp::SharedDtor() {
}

void ShopItemRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ShopItemRsp::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ShopItemRsp& ShopItemRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_ShopItemRsp.base);
  return *internal_default_instance();
}


void ShopItemRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.ShopItemRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_.Clear();
  _internal_metadata_.Clear();
}

bool ShopItemRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.ShopItemRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .TCCamp.ItemInfo Item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.ShopItemRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.ShopItemRsp)
  return false;
#undef DO_
}

void ShopItemRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.ShopItemRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TCCamp.ItemInfo Item = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->item(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.ShopItemRsp)
}

::google::protobuf::uint8* ShopItemRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.ShopItemRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TCCamp.ItemInfo Item = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->item(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.ShopItemRsp)
  return target;
}

size_t ShopItemRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.ShopItemRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .TCCamp.ItemInfo Item = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->item_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->item(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ShopItemRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.ShopItemRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const ShopItemRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShopItemRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.ShopItemRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.ShopItemRsp)
    MergeFrom(*source);
  }
}

void ShopItemRsp::MergeFrom(const ShopItemRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.ShopItemRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_.MergeFrom(from.item_);
}

void ShopItemRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.ShopItemRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShopItemRsp::CopyFrom(const ShopItemRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.ShopItemRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShopItemRsp::IsInitialized() const {
  return true;
}

void ShopItemRsp::Swap(ShopItemRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShopItemRsp::InternalSwap(ShopItemRsp* other) {
  using std::swap;
  CastToBase(&item_)->InternalSwap(CastToBase(&other->item_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ShopItemRsp::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BagItemRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BagItemRsp::kMoneyFieldNumber;
const int BagItemRsp::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BagItemRsp::BagItemRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_BagItemRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.BagItemRsp)
}
BagItemRsp::BagItemRsp(const BagItemRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      item_(from.item_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  money_ = from.money_;
  // @@protoc_insertion_point(copy_constructor:TCCamp.BagItemRsp)
}

void BagItemRsp::SharedCtor() {
  money_ = 0;
}

BagItemRsp::~BagItemRsp() {
  // @@protoc_insertion_point(destructor:TCCamp.BagItemRsp)
  SharedDtor();
}

void BagItemRsp::SharedDtor() {
}

void BagItemRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BagItemRsp::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BagItemRsp& BagItemRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_BagItemRsp.base);
  return *internal_default_instance();
}


void BagItemRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.BagItemRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_.Clear();
  money_ = 0;
  _internal_metadata_.Clear();
}

bool BagItemRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.BagItemRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Money = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TCCamp.ItemInfo Item = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.BagItemRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.BagItemRsp)
  return false;
#undef DO_
}

void BagItemRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.BagItemRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Money = 1;
  if (this->money() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->money(), output);
  }

  // repeated .TCCamp.ItemInfo Item = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->item(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.BagItemRsp)
}

::google::protobuf::uint8* BagItemRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.BagItemRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Money = 1;
  if (this->money() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->money(), target);
  }

  // repeated .TCCamp.ItemInfo Item = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->item(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.BagItemRsp)
  return target;
}

size_t BagItemRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.BagItemRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .TCCamp.ItemInfo Item = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->item_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->item(static_cast<int>(i)));
    }
  }

  // int32 Money = 1;
  if (this->money() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->money());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BagItemRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.BagItemRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const BagItemRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BagItemRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.BagItemRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.BagItemRsp)
    MergeFrom(*source);
  }
}

void BagItemRsp::MergeFrom(const BagItemRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.BagItemRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_.MergeFrom(from.item_);
  if (from.money() != 0) {
    set_money(from.money());
  }
}

void BagItemRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.BagItemRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BagItemRsp::CopyFrom(const BagItemRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.BagItemRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagItemRsp::IsInitialized() const {
  return true;
}

void BagItemRsp::Swap(BagItemRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BagItemRsp::InternalSwap(BagItemRsp* other) {
  using std::swap;
  CastToBase(&item_)->InternalSwap(CastToBase(&other->item_));
  swap(money_, other->money_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BagItemRsp::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BuyReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BuyReq::kIdFieldNumber;
const int BuyReq::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BuyReq::BuyReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_BuyReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.BuyReq)
}
BuyReq::BuyReq(const BuyReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&id_)) + sizeof(num_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.BuyReq)
}

void BuyReq::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&id_)) + sizeof(num_));
}

BuyReq::~BuyReq() {
  // @@protoc_insertion_point(destructor:TCCamp.BuyReq)
  SharedDtor();
}

void BuyReq::SharedDtor() {
}

void BuyReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BuyReq::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BuyReq& BuyReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_BuyReq.base);
  return *internal_default_instance();
}


void BuyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.BuyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&id_)) + sizeof(num_));
  _internal_metadata_.Clear();
}

bool BuyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.BuyReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.BuyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.BuyReq)
  return false;
#undef DO_
}

void BuyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.BuyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // int32 Num = 2;
  if (this->num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.BuyReq)
}

::google::protobuf::uint8* BuyReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.BuyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // int32 Num = 2;
  if (this->num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.BuyReq)
  return target;
}

size_t BuyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.BuyReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 Num = 2;
  if (this->num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BuyReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.BuyReq)
  GOOGLE_DCHECK_NE(&from, this);
  const BuyReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BuyReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.BuyReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.BuyReq)
    MergeFrom(*source);
  }
}

void BuyReq::MergeFrom(const BuyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.BuyReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.num() != 0) {
    set_num(from.num());
  }
}

void BuyReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.BuyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuyReq::CopyFrom(const BuyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.BuyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuyReq::IsInitialized() const {
  return true;
}

void BuyReq::Swap(BuyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BuyReq::InternalSwap(BuyReq* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(num_, other->num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BuyReq::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DeleteItemReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeleteItemReq::kIdFieldNumber;
const int DeleteItemReq::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeleteItemReq::DeleteItemReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_DeleteItemReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.DeleteItemReq)
}
DeleteItemReq::DeleteItemReq(const DeleteItemReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&id_)) + sizeof(num_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.DeleteItemReq)
}

void DeleteItemReq::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&id_)) + sizeof(num_));
}

DeleteItemReq::~DeleteItemReq() {
  // @@protoc_insertion_point(destructor:TCCamp.DeleteItemReq)
  SharedDtor();
}

void DeleteItemReq::SharedDtor() {
}

void DeleteItemReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DeleteItemReq::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeleteItemReq& DeleteItemReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_DeleteItemReq.base);
  return *internal_default_instance();
}


void DeleteItemReq::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.DeleteItemReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&id_)) + sizeof(num_));
  _internal_metadata_.Clear();
}

bool DeleteItemReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.DeleteItemReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.DeleteItemReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.DeleteItemReq)
  return false;
#undef DO_
}

void DeleteItemReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.DeleteItemReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // int32 Num = 2;
  if (this->num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.DeleteItemReq)
}

::google::protobuf::uint8* DeleteItemReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.DeleteItemReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // int32 Num = 2;
  if (this->num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.DeleteItemReq)
  return target;
}

size_t DeleteItemReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.DeleteItemReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 Id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 Num = 2;
  if (this->num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteItemReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.DeleteItemReq)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteItemReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeleteItemReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.DeleteItemReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.DeleteItemReq)
    MergeFrom(*source);
  }
}

void DeleteItemReq::MergeFrom(const DeleteItemReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.DeleteItemReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.num() != 0) {
    set_num(from.num());
  }
}

void DeleteItemReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.DeleteItemReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteItemReq::CopyFrom(const DeleteItemReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.DeleteItemReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteItemReq::IsInitialized() const {
  return true;
}

void DeleteItemReq::Swap(DeleteItemReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeleteItemReq::InternalSwap(DeleteItemReq* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(num_, other->num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DeleteItemReq::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddMoneyReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddMoneyReq::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddMoneyReq::AddMoneyReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_AddMoneyReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.AddMoneyReq)
}
AddMoneyReq::AddMoneyReq(const AddMoneyReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  num_ = from.num_;
  // @@protoc_insertion_point(copy_constructor:TCCamp.AddMoneyReq)
}

void AddMoneyReq::SharedCtor() {
  num_ = 0;
}

AddMoneyReq::~AddMoneyReq() {
  // @@protoc_insertion_point(destructor:TCCamp.AddMoneyReq)
  SharedDtor();
}

void AddMoneyReq::SharedDtor() {
}

void AddMoneyReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddMoneyReq::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddMoneyReq& AddMoneyReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_AddMoneyReq.base);
  return *internal_default_instance();
}


void AddMoneyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.AddMoneyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  num_ = 0;
  _internal_metadata_.Clear();
}

bool AddMoneyReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.AddMoneyReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Num = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.AddMoneyReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.AddMoneyReq)
  return false;
#undef DO_
}

void AddMoneyReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.AddMoneyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Num = 1;
  if (this->num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.AddMoneyReq)
}

::google::protobuf::uint8* AddMoneyReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.AddMoneyReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Num = 1;
  if (this->num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.AddMoneyReq)
  return target;
}

size_t AddMoneyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.AddMoneyReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 Num = 1;
  if (this->num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddMoneyReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.AddMoneyReq)
  GOOGLE_DCHECK_NE(&from, this);
  const AddMoneyReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddMoneyReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.AddMoneyReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.AddMoneyReq)
    MergeFrom(*source);
  }
}

void AddMoneyReq::MergeFrom(const AddMoneyReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.AddMoneyReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.num() != 0) {
    set_num(from.num());
  }
}

void AddMoneyReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.AddMoneyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddMoneyReq::CopyFrom(const AddMoneyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.AddMoneyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddMoneyReq::IsInitialized() const {
  return true;
}

void AddMoneyReq::Swap(AddMoneyReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddMoneyReq::InternalSwap(AddMoneyReq* other) {
  using std::swap;
  swap(num_, other->num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddMoneyReq::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MoneyRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MoneyRsp::kCodeFieldNumber;
const int MoneyRsp::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MoneyRsp::MoneyRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_MoneyRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.MoneyRsp)
}
MoneyRsp::MoneyRsp(const MoneyRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&code_)) + sizeof(num_));
  // @@protoc_insertion_point(copy_constructor:TCCamp.MoneyRsp)
}

void MoneyRsp::SharedCtor() {
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&code_)) + sizeof(num_));
}

MoneyRsp::~MoneyRsp() {
  // @@protoc_insertion_point(destructor:TCCamp.MoneyRsp)
  SharedDtor();
}

void MoneyRsp::SharedDtor() {
}

void MoneyRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MoneyRsp::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MoneyRsp& MoneyRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_MoneyRsp.base);
  return *internal_default_instance();
}


void MoneyRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.MoneyRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&code_)) + sizeof(num_));
  _internal_metadata_.Clear();
}

bool MoneyRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.MoneyRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .TCCamp.StatueCode Code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_code(static_cast< ::TCCamp::StatueCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 Num = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.MoneyRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.MoneyRsp)
  return false;
#undef DO_
}

void MoneyRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.MoneyRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .TCCamp.StatueCode Code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->code(), output);
  }

  // int32 Num = 2;
  if (this->num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.MoneyRsp)
}

::google::protobuf::uint8* MoneyRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.MoneyRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .TCCamp.StatueCode Code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->code(), target);
  }

  // int32 Num = 2;
  if (this->num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.MoneyRsp)
  return target;
}

size_t MoneyRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.MoneyRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .TCCamp.StatueCode Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }

  // int32 Num = 2;
  if (this->num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MoneyRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.MoneyRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const MoneyRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MoneyRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.MoneyRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.MoneyRsp)
    MergeFrom(*source);
  }
}

void MoneyRsp::MergeFrom(const MoneyRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.MoneyRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.code() != 0) {
    set_code(from.code());
  }
  if (from.num() != 0) {
    set_num(from.num());
  }
}

void MoneyRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.MoneyRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MoneyRsp::CopyFrom(const MoneyRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.MoneyRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MoneyRsp::IsInitialized() const {
  return true;
}

void MoneyRsp::Swap(MoneyRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MoneyRsp::InternalSwap(MoneyRsp* other) {
  using std::swap;
  swap(code_, other->code_);
  swap(num_, other->num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MoneyRsp::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StatueCodeRsp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StatueCodeRsp::kCodeFieldNumber;
const int StatueCodeRsp::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StatueCodeRsp::StatueCodeRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_player_2eproto::scc_info_StatueCodeRsp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TCCamp.StatueCodeRsp)
}
StatueCodeRsp::StatueCodeRsp(const StatueCodeRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reason().size() > 0) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:TCCamp.StatueCodeRsp)
}

void StatueCodeRsp::SharedCtor() {
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

StatueCodeRsp::~StatueCodeRsp() {
  // @@protoc_insertion_point(destructor:TCCamp.StatueCodeRsp)
  SharedDtor();
}

void StatueCodeRsp::SharedDtor() {
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StatueCodeRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StatueCodeRsp::descriptor() {
  ::protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StatueCodeRsp& StatueCodeRsp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_player_2eproto::scc_info_StatueCodeRsp.base);
  return *internal_default_instance();
}


void StatueCodeRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:TCCamp.StatueCodeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _internal_metadata_.Clear();
}

bool StatueCodeRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TCCamp.StatueCodeRsp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .TCCamp.StatueCode Code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_code(static_cast< ::TCCamp::StatueCode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Reason = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reason().data(), static_cast<int>(this->reason().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TCCamp.StatueCodeRsp.Reason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TCCamp.StatueCodeRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TCCamp.StatueCodeRsp)
  return false;
#undef DO_
}

void StatueCodeRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TCCamp.StatueCodeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .TCCamp.StatueCode Code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->code(), output);
  }

  // string Reason = 2;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.StatueCodeRsp.Reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TCCamp.StatueCodeRsp)
}

::google::protobuf::uint8* StatueCodeRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TCCamp.StatueCodeRsp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .TCCamp.StatueCode Code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->code(), target);
  }

  // string Reason = 2;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TCCamp.StatueCodeRsp.Reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TCCamp.StatueCodeRsp)
  return target;
}

size_t StatueCodeRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TCCamp.StatueCodeRsp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Reason = 2;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }

  // .TCCamp.StatueCode Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StatueCodeRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TCCamp.StatueCodeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const StatueCodeRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StatueCodeRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TCCamp.StatueCodeRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TCCamp.StatueCodeRsp)
    MergeFrom(*source);
  }
}

void StatueCodeRsp::MergeFrom(const StatueCodeRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TCCamp.StatueCodeRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.reason().size() > 0) {

    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void StatueCodeRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TCCamp.StatueCodeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StatueCodeRsp::CopyFrom(const StatueCodeRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TCCamp.StatueCodeRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StatueCodeRsp::IsInitialized() const {
  return true;
}

void StatueCodeRsp::Swap(StatueCodeRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StatueCodeRsp::InternalSwap(StatueCodeRsp* other) {
  using std::swap;
  reason_.Swap(&other->reason_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StatueCodeRsp::GetMetadata() const {
  protobuf_player_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_player_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace TCCamp
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::CollisionReq* Arena::CreateMaybeMessage< ::TCCamp::CollisionReq >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::CollisionReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::RPC* Arena::CreateMaybeMessage< ::TCCamp::RPC >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::RPC >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::PlayerLoginReq* Arena::CreateMaybeMessage< ::TCCamp::PlayerLoginReq >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::PlayerLoginReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::PlayerLoginRsp* Arena::CreateMaybeMessage< ::TCCamp::PlayerLoginRsp >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::PlayerLoginRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::PlayerSaveData* Arena::CreateMaybeMessage< ::TCCamp::PlayerSaveData >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::PlayerSaveData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::PlayerSyncData* Arena::CreateMaybeMessage< ::TCCamp::PlayerSyncData >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::PlayerSyncData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::RoomInfoMsg* Arena::CreateMaybeMessage< ::TCCamp::RoomInfoMsg >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::RoomInfoMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::RoomInfoReq* Arena::CreateMaybeMessage< ::TCCamp::RoomInfoReq >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::RoomInfoReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::RoomInfoRsp* Arena::CreateMaybeMessage< ::TCCamp::RoomInfoRsp >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::RoomInfoRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::RoomNumChange* Arena::CreateMaybeMessage< ::TCCamp::RoomNumChange >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::RoomNumChange >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::EnterRoomReq* Arena::CreateMaybeMessage< ::TCCamp::EnterRoomReq >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::EnterRoomReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::EnterRoomRsp* Arena::CreateMaybeMessage< ::TCCamp::EnterRoomRsp >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::EnterRoomRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::CreateRoomReq* Arena::CreateMaybeMessage< ::TCCamp::CreateRoomReq >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::CreateRoomReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::PlayerCreateReq* Arena::CreateMaybeMessage< ::TCCamp::PlayerCreateReq >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::PlayerCreateReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::PlayerCreateRsp* Arena::CreateMaybeMessage< ::TCCamp::PlayerCreateRsp >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::PlayerCreateRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::SyncAnnounce* Arena::CreateMaybeMessage< ::TCCamp::SyncAnnounce >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::SyncAnnounce >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::SceneBriefRsp* Arena::CreateMaybeMessage< ::TCCamp::SceneBriefRsp >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::SceneBriefRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::SceneBriefMsg* Arena::CreateMaybeMessage< ::TCCamp::SceneBriefMsg >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::SceneBriefMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::SceneObjectMsg* Arena::CreateMaybeMessage< ::TCCamp::SceneObjectMsg >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::SceneObjectMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::SceneMonsterRsp* Arena::CreateMaybeMessage< ::TCCamp::SceneMonsterRsp >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::SceneMonsterRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::SceneObjectRsp* Arena::CreateMaybeMessage< ::TCCamp::SceneObjectRsp >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::SceneObjectRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::Vec3Msg* Arena::CreateMaybeMessage< ::TCCamp::Vec3Msg >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::Vec3Msg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::MonsterAttributeMsg* Arena::CreateMaybeMessage< ::TCCamp::MonsterAttributeMsg >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::MonsterAttributeMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::MonsterAttributeRsp* Arena::CreateMaybeMessage< ::TCCamp::MonsterAttributeRsp >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::MonsterAttributeRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::MonsterSynMsg* Arena::CreateMaybeMessage< ::TCCamp::MonsterSynMsg >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::MonsterSynMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::MonstersSynMsg* Arena::CreateMaybeMessage< ::TCCamp::MonstersSynMsg >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::MonstersSynMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::BulletSynMsg* Arena::CreateMaybeMessage< ::TCCamp::BulletSynMsg >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::BulletSynMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::BulletsSynMsg* Arena::CreateMaybeMessage< ::TCCamp::BulletsSynMsg >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::BulletsSynMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::AttackReq* Arena::CreateMaybeMessage< ::TCCamp::AttackReq >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::AttackReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::RankListMsg* Arena::CreateMaybeMessage< ::TCCamp::RankListMsg >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::RankListMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::RankListReq* Arena::CreateMaybeMessage< ::TCCamp::RankListReq >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::RankListReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::GameTimeRsp* Arena::CreateMaybeMessage< ::TCCamp::GameTimeRsp >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::GameTimeRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::RankListRsp* Arena::CreateMaybeMessage< ::TCCamp::RankListRsp >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::RankListRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::RankListData* Arena::CreateMaybeMessage< ::TCCamp::RankListData >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::RankListData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::CharacterStatueMsg* Arena::CreateMaybeMessage< ::TCCamp::CharacterStatueMsg >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::CharacterStatueMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::CharacterStatueReq* Arena::CreateMaybeMessage< ::TCCamp::CharacterStatueReq >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::CharacterStatueReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::CharacterAnimSynMsg* Arena::CreateMaybeMessage< ::TCCamp::CharacterAnimSynMsg >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::CharacterAnimSynMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::NetAsyncMsg* Arena::CreateMaybeMessage< ::TCCamp::NetAsyncMsg >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::NetAsyncMsg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::RemoveCharacterRsp* Arena::CreateMaybeMessage< ::TCCamp::RemoveCharacterRsp >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::RemoveCharacterRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::ScoreRsp* Arena::CreateMaybeMessage< ::TCCamp::ScoreRsp >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::ScoreRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::GameResultRsp* Arena::CreateMaybeMessage< ::TCCamp::GameResultRsp >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::GameResultRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::GameContinueRsp* Arena::CreateMaybeMessage< ::TCCamp::GameContinueRsp >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::GameContinueRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::ItemConfig* Arena::CreateMaybeMessage< ::TCCamp::ItemConfig >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::ItemConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::ItemConfigs* Arena::CreateMaybeMessage< ::TCCamp::ItemConfigs >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::ItemConfigs >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::ItemInfo* Arena::CreateMaybeMessage< ::TCCamp::ItemInfo >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::ItemInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::ShopItemRsp* Arena::CreateMaybeMessage< ::TCCamp::ShopItemRsp >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::ShopItemRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::BagItemRsp* Arena::CreateMaybeMessage< ::TCCamp::BagItemRsp >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::BagItemRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::BuyReq* Arena::CreateMaybeMessage< ::TCCamp::BuyReq >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::BuyReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::DeleteItemReq* Arena::CreateMaybeMessage< ::TCCamp::DeleteItemReq >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::DeleteItemReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::AddMoneyReq* Arena::CreateMaybeMessage< ::TCCamp::AddMoneyReq >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::AddMoneyReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::MoneyRsp* Arena::CreateMaybeMessage< ::TCCamp::MoneyRsp >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::MoneyRsp >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TCCamp::StatueCodeRsp* Arena::CreateMaybeMessage< ::TCCamp::StatueCodeRsp >(Arena* arena) {
  return Arena::CreateInternal< ::TCCamp::StatueCodeRsp >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
